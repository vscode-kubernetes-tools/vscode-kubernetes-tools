{
  "definitions": {
    "io.k8s.kubernetes.pkg.apis.authorization.v1.NonResourceAttributes": {
      "description": "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path is the URL path of the request"
        },
        "verb": {
          "type": "string",
          "description": "Verb is the standard HTTP verb"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ImageStreamList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ImageStreamList",
          "Version": "v1",
          "Group": "image.openshift.io"
        }
      ],
      "description": "ImageStreamList is a list of ImageStream objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageStream"
          },
          "type": "array",
          "description": "Items is a list of imageStreams"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.AzureDiskVolumeSource": {
      "required": [
        "diskName",
        "diskURI"
      ],
      "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      "properties": {
        "diskURI": {
          "type": "string",
          "description": "The URI the data disk in the blob storage"
        },
        "diskName": {
          "type": "string",
          "description": "The Name of the data disk in the blob storage"
        },
        "fsType": {
          "type": "string",
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
        },
        "readOnly": {
          "type": "boolean",
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
        },
        "cachingMode": {
          "type": "string",
          "description": "Host Caching mode: None, Read Only, Read Write."
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.Image": {
      "required": [
        "dockerImageLayers"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Image",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "Image",
          "Version": "v1",
          "Group": "image.openshift.io"
        }
      ],
      "description": "Image is an immutable representation of a Docker image and metadata at a point in time.",
      "properties": {
        "dockerImageConfig": {
          "type": "string",
          "description": "DockerImageConfig is a JSON blob that the runtime uses to set up the container. This is a part of manifest schema v2."
        },
        "dockerImageManifestMediaType": {
          "type": "string",
          "description": "DockerImageManifestMediaType specifies the mediaType of manifest. This is a part of manifest schema v2."
        },
        "dockerImageMetadataVersion": {
          "type": "string",
          "description": "DockerImageMetadataVersion conveys the version of the object, which if empty defaults to \"1.0\""
        },
        "signatures": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageSignature"
          },
          "type": "array",
          "description": "Signatures holds all signatures of the image."
        },
        "dockerImageLayers": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageLayer"
          },
          "type": "array",
          "description": "DockerImageLayers represents the layers in the image. May not be set if the image does not define that data."
        },
        "dockerImageManifest": {
          "type": "string",
          "description": "DockerImageManifest is the raw JSON of the manifest"
        },
        "dockerImageMetadata": {
          "description": "DockerImageMetadata contains metadata about this image",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "dockerImageReference": {
          "type": "string",
          "description": "DockerImageReference is the string that can be used to pull this image."
        },
        "dockerImageSignatures": {
          "items": {
            "type": "string",
            "format": "byte"
          },
          "type": "array",
          "description": "DockerImageSignatures provides the signatures as opaque blobs. This is a part of manifest schema v1."
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.Role": {
      "required": [
        "rules"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Role",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "Role",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "Role is a logical grouping of PolicyRules that can be referenced as a unit by RoleBindings.",
      "properties": {
        "rules": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.PolicyRule"
          },
          "type": "array",
          "description": "Rules holds all the PolicyRules for this Role"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.EventSource": {
      "description": "EventSource contains information for an event.",
      "properties": {
        "host": {
          "type": "string",
          "description": "Node name on which the event is generated."
        },
        "component": {
          "type": "string",
          "description": "Component from which the event is generated."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.batch.v2alpha1.CronJobStatus": {
      "description": "CronJobStatus represents the current state of a cron job.",
      "properties": {
        "active": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
          },
          "type": "array",
          "description": "Active holds pointers to currently running jobs."
        },
        "lastScheduleTime": {
          "description": "LastScheduleTime keeps information of when was the last time the job was successfully scheduled.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentRequest": {
      "required": [
        "name",
        "latest",
        "force"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "DeploymentRequest",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "DeploymentRequest",
          "Version": "v1",
          "Group": "apps.openshift.io"
        }
      ],
      "description": "DeploymentRequest is a request to a deployment config for a new deployment.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "force": {
          "type": "boolean",
          "description": "Force will try to force a new deployment to run. If the deployment config is paused, then setting this to true will return an Invalid error."
        },
        "name": {
          "type": "string",
          "description": "Name of the deployment config for requesting a new deployment."
        },
        "excludeTriggers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "ExcludeTriggers instructs the instantiator to avoid processing the specified triggers. This field overrides the triggers from latest and allows clients to control specific logic. This field is ignored if not specified."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "latest": {
          "type": "boolean",
          "description": "Latest will update the deployment config with the latest state from all triggers."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.SELinuxOptions": {
      "description": "SELinuxOptions are the labels to be applied to the container",
      "properties": {
        "role": {
          "type": "string",
          "description": "Role is a SELinux role label that applies to the container."
        },
        "type": {
          "type": "string",
          "description": "Type is a SELinux type label that applies to the container."
        },
        "user": {
          "type": "string",
          "description": "User is a SELinux user label that applies to the container."
        },
        "level": {
          "type": "string",
          "description": "Level is SELinux level label that applies to the container."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ResourceRequirements": {
      "description": "ResourceRequirements describes the compute resource requirements.",
      "properties": {
        "requests": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: http://kubernetes.io/docs/user-guide/compute-resources/"
        },
        "limits": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "Limits describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PersistentVolume": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PersistentVolume",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: http://kubernetes.io/docs/user-guide/persistent-volumes",
      "properties": {
        "status": {
          "description": "Status represents the current information/status for the persistent volume. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistent-volumes",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PersistentVolumeStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines a specification of a persistent volume owned by the cluster. Provisioned by an administrator. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistent-volumes",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PersistentVolumeSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageLayer": {
      "required": [
        "name",
        "size",
        "mediaType"
      ],
      "description": "ImageLayer represents a single layer of the image. Some images may have multiple layers. Some may have none.",
      "properties": {
        "mediaType": {
          "type": "string",
          "description": "MediaType of the referenced object."
        },
        "name": {
          "type": "string",
          "description": "Name of the layer as defined by the underlying store."
        },
        "size": {
          "type": "integer",
          "description": "Size of the layer in bytes as defined by the underlying store.",
          "format": "int64"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentConfigRollback": {
      "required": [
        "name",
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "DeploymentConfigRollback",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "DeploymentConfigRollback",
          "Version": "v1",
          "Group": "apps.openshift.io"
        }
      ],
      "description": "DeploymentConfigRollback provides the input to rollback generation.",
      "properties": {
        "spec": {
          "description": "Spec defines the options to rollback generation.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentConfigRollbackSpec"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "description": "Name of the deployment config that will be rolled back."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "updatedAnnotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "UpdatedAnnotations is a set of new annotations that will be added in the deployment config."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.DeploymentStatus": {
      "description": "DeploymentStatus is the most recently observed status of the Deployment.",
      "properties": {
        "updatedReplicas": {
          "type": "integer",
          "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
          "format": "int32"
        },
        "availableReplicas": {
          "type": "integer",
          "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
          "format": "int32"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "The generation observed by the deployment controller.",
          "format": "int64"
        },
        "unavailableReplicas": {
          "type": "integer",
          "description": "Total number of unavailable pods targeted by this deployment.",
          "format": "int32"
        },
        "readyReplicas": {
          "type": "integer",
          "description": "Total number of ready pods targeted by this deployment.",
          "format": "int32"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.DeploymentCondition"
          },
          "type": "array",
          "description": "Represents the latest available observations of a deployment's current state."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DeploymentStrategy": {
      "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
      "properties": {
        "rollingUpdate": {
          "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.RollingUpdateDeployment"
        },
        "type": {
          "type": "string",
          "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.WeightedPodAffinityTerm": {
      "required": [
        "weight",
        "podAffinityTerm"
      ],
      "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
      "properties": {
        "podAffinityTerm": {
          "description": "Required. A pod affinity term, associated with the corresponding weight.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodAffinityTerm"
        },
        "weight": {
          "type": "integer",
          "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.FSGroupStrategyOptions": {
      "description": "FSGroupStrategyOptions defines the strategy type and options used to create the strategy.",
      "properties": {
        "ranges": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IDRange"
          },
          "type": "array",
          "description": "Ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end."
        },
        "rule": {
          "type": "string",
          "description": "Rule is the strategy that will dictate what FSGroup is used in the SecurityContext."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PersistentVolumeList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PersistentVolumeList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "PersistentVolumeList is a list of PersistentVolume items.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PersistentVolume"
          },
          "type": "array",
          "description": "List of persistent volumes. More info: http://kubernetes.io/docs/user-guide/persistent-volumes"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR": {
      "required": [
        "clientCIDR",
        "serverAddress"
      ],
      "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
      "properties": {
        "clientCIDR": {
          "type": "string",
          "description": "The CIDR with which clients can match their IP to figure out the server address that they should use."
        },
        "serverAddress": {
          "type": "string",
          "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port."
        }
      }
    },
    "com.github.openshift.origin.pkg.oauth.apis.oauth.v1.OAuthClientList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "OAuthClientList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "OAuthClientList",
          "Version": "v1",
          "Group": "oauth.openshift.io"
        }
      ],
      "description": "OAuthClientList is a collection of OAuth clients",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.oauth.apis.oauth.v1.OAuthClient"
          },
          "type": "array",
          "description": "Items is the list of OAuth clients"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.SelfSubjectRulesReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "SelfSubjectRulesReview",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "SelfSubjectRulesReview",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "SelfSubjectRulesReview is a resource you can create to determine which actions you can perform in a namespace",
      "properties": {
        "status": {
          "description": "Status is completed by the server to tell which permissions you have",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.SubjectRulesReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec adds information about how to conduct the check",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.SelfSubjectRulesReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PodSecurityContext": {
      "description": "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
      "properties": {
        "runAsNonRoot": {
          "type": "boolean",
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
        },
        "fsGroup": {
          "type": "integer",
          "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.",
          "format": "int64"
        },
        "seLinuxOptions": {
          "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.SELinuxOptions"
        },
        "runAsUser": {
          "type": "integer",
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
          "format": "int64"
        },
        "supplementalGroups": {
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "type": "array",
          "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ComponentStatusList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ComponentStatusList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "Status of all the conditions for the component as a list of ComponentStatus objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ComponentStatus"
          },
          "type": "array",
          "description": "List of ComponentStatus objects."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.sdn.apis.network.v1.HostSubnetList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "HostSubnetList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "HostSubnetList",
          "Version": "v1",
          "Group": "network.openshift.io"
        }
      ],
      "description": "HostSubnetList is a collection of HostSubnets",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.sdn.apis.network.v1.HostSubnet"
          },
          "type": "array",
          "description": "Items is the list of host subnets"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.EnvVar": {
      "required": [
        "name"
      ],
      "description": "EnvVar represents an environment variable present in a Container.",
      "properties": {
        "valueFrom": {
          "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EnvVarSource"
        },
        "name": {
          "type": "string",
          "description": "Name of the environment variable. Must be a C_IDENTIFIER."
        },
        "value": {
          "type": "string",
          "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ServiceAccountList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ServiceAccountList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "ServiceAccountList is a list of ServiceAccount objects",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ServiceAccount"
          },
          "type": "array",
          "description": "List of ServiceAccounts. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md#service-accounts"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.route.apis.route.v1.RouteSpec": {
      "required": [
        "host",
        "to"
      ],
      "description": "RouteSpec describes the hostname or path the route exposes, any security information, and one or more backends the route points to. Weights on each backend can define the balance of traffic sent to each backend - if all weights are zero the route will be considered to have no backends and return a standard 503 response.\n\nThe `tls` field is optional and allows specific certificates or behavior for the route. Routers typically configure a default certificate on a wildcard domain to terminate routes without explicit certificates, but custom hostnames usually must choose passthrough (send traffic directly to the backend via the TLS Server-Name- Indication field) or provide a certificate.",
      "properties": {
        "tls": {
          "description": "The tls field provides the ability to configure certificates and termination for the route.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.route.apis.route.v1.TLSConfig"
        },
        "to": {
          "description": "to is an object the route should use as the primary backend. Only the Service kind is allowed, and it will be defaulted to Service. If the weight field is set to zero, no traffic will be sent to this service.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.route.apis.route.v1.RouteTargetReference"
        },
        "host": {
          "type": "string",
          "description": "host is an alias/DNS that points to the service. Optional. If not specified a route name will typically be automatically chosen. Must follow DNS952 subdomain conventions."
        },
        "alternateBackends": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.route.apis.route.v1.RouteTargetReference"
          },
          "type": "array",
          "description": "alternateBackends is an extension of the 'to' field. If more than one service needs to be pointed to, then use this field. Use the weight field in RouteTargetReference object to specify relative preference. If the weight field is zero, the backend is ignored."
        },
        "path": {
          "type": "string",
          "description": "Path that the router watches for, to route traffic for to the service. Optional"
        },
        "wildcardPolicy": {
          "type": "string",
          "description": "Wildcard policy if any for the route. Currently only 'Subdomain' or 'None' is allowed."
        },
        "port": {
          "description": "If specified, the port to be used by the router. Most routers will use all endpoints exposed by the service by default - set this value to instruct routers which port to use.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.route.apis.route.v1.RoutePort"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ReplicaSet": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ReplicaSet",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "ReplicaSet represents the configuration of a ReplicaSet.",
      "properties": {
        "status": {
          "description": "Status is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ReplicaSetStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the specification of the desired behavior of the ReplicaSet. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ReplicaSetSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s) that the ReplicaSet manages. Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.storage.v1.StorageClassList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "StorageClassList",
          "Version": "v1",
          "Group": "storage.k8s.io"
        }
      ],
      "description": "StorageClassList is a collection of storage classes.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.storage.v1.StorageClass"
          },
          "type": "array",
          "description": "Items is the list of StorageClasses"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Binding": {
      "required": [
        "target"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Binding",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "Binding ties one object to another. For example, a pod is bound to a node by a scheduler.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "target": {
          "description": "The target object that you want to bind to the standard object.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ServiceSpec": {
      "description": "ServiceSpec describes the attributes that a user creates on a service.",
      "properties": {
        "loadBalancerIP": {
          "type": "string",
          "description": "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature."
        },
        "deprecatedPublicIPs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "deprecatedPublicIPs is deprecated and replaced by the externalIPs field with almost the exact same semantics.  This field is retained in the v1 API for compatibility until at least 8/20/2016.  It will be removed from any new API revisions.  If both deprecatedPublicIPs *and* externalIPs are set, deprecatedPublicIPs is used."
        },
        "externalIPs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.  A previous form of this functionality exists as the deprecatedPublicIPs field.  When using this field, callers should also clear the deprecatedPublicIPs field."
        },
        "loadBalancerSourceRanges": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: http://kubernetes.io/docs/user-guide/services-firewalls"
        },
        "selector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#overview"
        },
        "externalName": {
          "type": "string",
          "description": "externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid DNS name and requires Type to be ExternalName."
        },
        "clusterIP": {
          "type": "string",
          "description": "clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \"None\", empty string (\"\"), or a valid IP address. \"None\" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies"
        },
        "sessionAffinity": {
          "type": "string",
          "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies"
        },
        "type": {
          "type": "string",
          "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ExternalName\" maps to the specified externalName. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: http://kubernetes.io/docs/user-guide/services#overview"
        },
        "ports": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ServicePort"
          },
          "type": "array",
          "description": "The list of ports that are exposed by this service. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.rbac.v1beta1.Subject": {
      "required": [
        "kind",
        "name"
      ],
      "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.",
      "properties": {
        "apiGroup": {
          "type": "string",
          "description": "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects."
        },
        "kind": {
          "type": "string",
          "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error."
        },
        "name": {
          "type": "string",
          "description": "Name of the object being referenced."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.batch.v1.Job": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Job",
          "Version": "v1",
          "Group": "batch"
        }
      ],
      "description": "Job represents the configuration of a single job.",
      "properties": {
        "status": {
          "description": "Status is a structure describing current status of a job. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.batch.v1.JobStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec is a structure defining the expected behavior of a job. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.batch.v1.JobSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ReplicationControllerSpec": {
      "description": "ReplicationControllerSpec is the specification of a replication controller.",
      "properties": {
        "replicas": {
          "type": "integer",
          "description": "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: http://kubernetes.io/docs/user-guide/replication-controller#what-is-a-replication-controller",
          "format": "int32"
        },
        "minReadySeconds": {
          "type": "integer",
          "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
          "format": "int32"
        },
        "template": {
          "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected. This takes precedence over a TemplateRef. More info: http://kubernetes.io/docs/user-guide/replication-controller#pod-template",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        },
        "selector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Selector is a label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentCauseImageTrigger": {
      "required": [
        "from"
      ],
      "description": "DeploymentCauseImageTrigger represents details about the cause of a deployment originating from an image change trigger",
      "properties": {
        "from": {
          "description": "From is a reference to the changed object which triggered a deployment. The field may have the kinds DockerImage, ImageStreamTag, or ImageStreamImage.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.StatefulSetList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "StatefulSetList",
          "Version": "v1beta1",
          "Group": "apps"
        }
      ],
      "description": "StatefulSetList is a collection of StatefulSets.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.StatefulSet"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.oauth.apis.oauth.v1.ClusterRoleScopeRestriction": {
      "required": [
        "roleNames",
        "namespaces",
        "allowEscalation"
      ],
      "description": "ClusterRoleScopeRestriction describes restrictions on cluster role scopes",
      "properties": {
        "roleNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "RoleNames is the list of cluster roles that can referenced.  * means anything"
        },
        "allowEscalation": {
          "type": "boolean",
          "description": "AllowEscalation indicates whether you can request roles and their escalating resources"
        },
        "namespaces": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Namespaces is the list of namespaces that can be referenced.  * means any of them (including *)"
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.FSGroupStrategyOptions": {
      "description": "FSGroupStrategyOptions defines the strategy type and options used to create the strategy.",
      "properties": {
        "ranges": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.IDRange"
          },
          "type": "array",
          "description": "Ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end."
        },
        "type": {
          "type": "string",
          "description": "Type is the strategy that will dictate what FSGroup is used in the SecurityContext."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.SourceRevision": {
      "required": [
        "type"
      ],
      "description": "SourceRevision is the revision or commit information from the source for the build",
      "properties": {
        "git": {
          "description": "Git contains information about git-based build source",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.GitSourceRevision"
        },
        "type": {
          "type": "string",
          "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ServiceStatus": {
      "description": "ServiceStatus represents the current status of a service.",
      "properties": {
        "loadBalancer": {
          "description": "LoadBalancer contains the current status of the load-balancer, if one is present.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LoadBalancerStatus"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageImportSpec": {
      "required": [
        "from"
      ],
      "description": "ImageImportSpec describes a request to import a specific image.",
      "properties": {
        "importPolicy": {
          "description": "ImportPolicy is the policy controlling how the image is imported",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.TagImportPolicy"
        },
        "referencePolicy": {
          "description": "ReferencePolicy defines how other components should consume the image",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.TagReferencePolicy"
        },
        "includeManifest": {
          "type": "boolean",
          "description": "IncludeManifest determines if the manifest for each image is returned in the response"
        },
        "to": {
          "description": "To is a tag in the current image stream to assign the imported image to, if name is not specified the default tag from from.name will be used",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "from": {
          "description": "From is the source of an image to import; only kind DockerImage is allowed",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.Deployment": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Deployment",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "Deployment enables declarative updates for Pods and ReplicaSets.",
      "properties": {
        "status": {
          "description": "Most recently observed status of the Deployment.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DeploymentStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Specification of the desired behavior of the Deployment.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DeploymentSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicyReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PodSecurityPolicyReview",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "PodSecurityPolicyReview",
          "Version": "v1",
          "Group": "security.openshift.io"
        }
      ],
      "description": "PodSecurityPolicyReview checks which service accounts (not users, since that would be cluster-wide) can create the `PodTemplateSpec` in question.",
      "properties": {
        "status": {
          "description": "status represents the current information/status for the PodSecurityPolicyReview.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicyReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "spec is the PodSecurityPolicy to check.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicyReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.certificates.v1beta1.CertificateSigningRequestList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "CertificateSigningRequestList",
          "Version": "v1beta1",
          "Group": "certificates.k8s.io"
        }
      ],
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.certificates.v1beta1.CertificateSigningRequest"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ScaleSpec": {
      "description": "describes the attributes of a scale subresource",
      "properties": {
        "replicas": {
          "type": "integer",
          "description": "desired number of instances for the scaled object.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicyReviewStatus": {
      "required": [
        "allowedServiceAccounts"
      ],
      "description": "PodSecurityPolicyReviewStatus represents the status of PodSecurityPolicyReview.",
      "properties": {
        "allowedServiceAccounts": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.ServiceAccountPodSecurityPolicyReviewStatus"
          },
          "type": "array",
          "description": "allowedServiceAccounts returns the list of service accounts in *this* namespace that have the power to create the PodTemplateSpec."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.PodSecurityPolicy": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PodSecurityPolicy",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "Pod Security Policy governs the ability to make requests that affect the Security Context that will be applied to a pod and container.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "spec defines the policy enforced.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.PodSecurityPolicySpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ServiceAccountRestriction": {
      "required": [
        "serviceaccounts",
        "namespaces"
      ],
      "description": "ServiceAccountRestriction matches a service account by a string match on either the service-account name or the name of the service account's namespace.",
      "properties": {
        "serviceaccounts": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ServiceAccountReference"
          },
          "type": "array",
          "description": "ServiceAccounts specifies a list of literal service-account names."
        },
        "namespaces": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Namespaces specifies a list of literal namespace names."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NodeCondition": {
      "required": [
        "type",
        "status"
      ],
      "description": "NodeCondition contains condition information for a node.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "lastHeartbeatTime": {
          "description": "Last time we got an update on a given condition.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "type": {
          "type": "string",
          "description": "Type of node condition."
        },
        "message": {
          "type": "string",
          "description": "Human readable message indicating details about last transition."
        },
        "lastTransitionTime": {
          "description": "Last time the condition transit from one status to another.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "reason": {
          "type": "string",
          "description": "(brief) reason for the condition's last transition."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.StepInfo": {
      "description": "StepInfo contains details about a build step.",
      "properties": {
        "durationMilliseconds": {
          "type": "integer",
          "description": "durationMilliseconds identifies how long the step took to complete in milliseconds.",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "name is a unique identifier for each build step."
        },
        "startTime": {
          "description": "startTime is a timestamp representing the server time when this Step started. it is represented in RFC3339 form and is in UTC.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.SecretSpec": {
      "required": [
        "secretSource",
        "mountPath"
      ],
      "description": "SecretSpec specifies a secret to be included in a build pod and its corresponding mount point",
      "properties": {
        "mountPath": {
          "type": "string",
          "description": "mountPath is the path at which to mount the secret"
        },
        "secretSource": {
          "description": "secretSource is a reference to the secret",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.NetworkPolicyIngressRule": {
      "description": "This NetworkPolicyIngressRule matches traffic if and only if the traffic matches both ports AND from.",
      "properties": {
        "from": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.NetworkPolicyPeer"
          },
          "type": "array",
          "description": "List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is not provided, this rule matches all sources (traffic not restricted by source). If this field is empty, this rule matches no sources (no traffic matches). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list."
        },
        "ports": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.NetworkPolicyPort"
          },
          "type": "array",
          "description": "List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is not provided, this rule matches all ports (traffic not restricted by port). If this field is empty, this rule matches no ports (no traffic matches). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list."
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterRole": {
      "required": [
        "rules"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterRole",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ClusterRole",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "ClusterRole is a logical grouping of PolicyRules that can be referenced as a unit by ClusterRoleBindings.",
      "properties": {
        "rules": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.PolicyRule"
          },
          "type": "array",
          "description": "Rules holds all the PolicyRules for this ClusterRole"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Secret": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Secret",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "stringData": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "stringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API."
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "type": {
          "type": "string",
          "description": "Used to facilitate programmatic handling of secret data."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "data": {
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "type": "object",
          "description": "Data contains the secret data. Each key must be a valid DNS_SUBDOMAIN or leading dot followed by valid DNS_SUBDOMAIN. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4"
        }
      }
    },
    "com.github.openshift.origin.pkg.project.apis.project.v1.ProjectList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ProjectList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ProjectList",
          "Version": "v1",
          "Group": "project.openshift.io"
        }
      ],
      "description": "ProjectList is a list of Project objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.project.apis.project.v1.Project"
          },
          "type": "array",
          "description": "Items is the list of projects"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Capabilities": {
      "description": "Adds and removes POSIX capabilities from running containers.",
      "properties": {
        "add": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Added capabilities"
        },
        "drop": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Removed capabilities"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid"
      ],
      "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned."
        },
        "uid": {
          "type": "string",
          "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "description": "If true, this reference points to the managing controller."
        },
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "name": {
          "type": "string",
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ObjectReference": {
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
      "properties": {
        "fieldPath": {
          "type": "string",
          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "resourceVersion": {
          "type": "string",
          "description": "Specific resourceVersion to which this reference is made, if any. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the referent. More info: http://kubernetes.io/docs/user-guide/namespaces"
        },
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "uid": {
          "type": "string",
          "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PodCondition": {
      "required": [
        "type",
        "status"
      ],
      "description": "PodCondition contains details for the current condition of this pod.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status is the status of the condition. Can be True, False, Unknown. More info: http://kubernetes.io/docs/user-guide/pod-states#pod-conditions"
        },
        "reason": {
          "type": "string",
          "description": "Unique, one-word, CamelCase reason for the condition's last transition."
        },
        "lastProbeTime": {
          "description": "Last time we probed the condition.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "type": {
          "type": "string",
          "description": "Type is the type of the condition. Currently only Ready. More info: http://kubernetes.io/docs/user-guide/pod-states#pod-conditions"
        },
        "message": {
          "type": "string",
          "description": "Human-readable message indicating details about last transition."
        },
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "com.github.openshift.origin.pkg.oauth.apis.oauth.v1.OAuthClientAuthorizationList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "OAuthClientAuthorizationList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "OAuthClientAuthorizationList",
          "Version": "v1",
          "Group": "oauth.openshift.io"
        }
      ],
      "description": "OAuthClientAuthorizationList is a collection of OAuth client authorizations",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.oauth.apis.oauth.v1.OAuthClientAuthorization"
          },
          "type": "array",
          "description": "Items is the list of OAuth client authorizations"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
      "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\""
        },
        "message": {
          "type": "string",
          "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader."
        },
        "reason": {
          "type": "string",
          "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ContainerState": {
      "description": "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
      "properties": {
        "terminated": {
          "description": "Details about a terminated container",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ContainerStateTerminated"
        },
        "running": {
          "description": "Details about a running container",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ContainerStateRunning"
        },
        "waiting": {
          "description": "Details about a waiting container",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ContainerStateWaiting"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.PolicyBindingList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PolicyBindingList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "PolicyBindingList",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "PolicyBindingList is a collection of PolicyBindings",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.PolicyBinding"
          },
          "type": "array",
          "description": "Items is a list of PolicyBindings"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.route.apis.route.v1.RouteIngressCondition": {
      "required": [
        "type",
        "status"
      ],
      "description": "RouteIngressCondition contains details for the current condition of this route on a particular router.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status is the status of the condition. Can be True, False, Unknown."
        },
        "lastTransitionTime": {
          "description": "RFC 3339 date and time when this condition last transitioned",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string",
          "description": "Human readable message indicating details about last transition."
        },
        "type": {
          "type": "string",
          "description": "Type is the type of the condition. Currently only Ready."
        },
        "reason": {
          "type": "string",
          "description": "(brief) reason for the condition's last transition, and is usually a machine and human readable constant"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions": {
      "required": [
        "versions",
        "serverAddressByClientCIDRs"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "APIVersions",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API.",
      "properties": {
        "serverAddressByClientCIDRs": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
          },
          "type": "array",
          "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "versions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "versions are the api versions that are available."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildStatusOutput": {
      "description": "BuildStatusOutput contains the status of the built image.",
      "properties": {
        "to": {
          "description": "to describes the status of the built image being pushed to a registry.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildStatusOutputTo"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.LimitRangeList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "LimitRangeList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "LimitRangeList is a list of LimitRange items.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LimitRange"
          },
          "type": "array",
          "description": "Items is a list of LimitRange objects. More info: http://releases.k8s.io/HEAD/docs/design/admission_control_limit_range.md"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1beta1.SelfSubjectAccessReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "SelfSubjectAccessReview",
          "Version": "v1beta1",
          "Group": "authorization.k8s.io"
        }
      ],
      "description": "SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action",
      "properties": {
        "status": {
          "description": "Status is filled in by the server and indicates whether the request is allowed or not",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1beta1.SubjectAccessReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec holds information about the request being evaluated.  user and groups must be empty",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1beta1.SelfSubjectAccessReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Handler": {
      "description": "Handler defines a specific action that should be taken",
      "properties": {
        "httpGet": {
          "description": "HTTPGet specifies the http request to perform.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.HTTPGetAction"
        },
        "tcpSocket": {
          "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.TCPSocketAction"
        },
        "exec": {
          "description": "One and only one of the following should be specified. Exec specifies the action to take.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ExecAction"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.ScaleStatus": {
      "required": [
        "replicas"
      ],
      "description": "ScaleStatus represents the current status of a scale subresource.",
      "properties": {
        "replicas": {
          "type": "integer",
          "description": "actual number of observed instances of the scaled object.",
          "format": "int32"
        },
        "targetSelector": {
          "type": "string",
          "description": "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
        },
        "selector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
        }
      }
    },
    "com.github.openshift.origin.pkg.template.apis.template.v1.TemplateInstanceRequester": {
      "required": [
        "username"
      ],
      "description": "TemplateInstanceRequester holds the identity of an agent requesting a template instantiation.",
      "properties": {
        "username": {
          "type": "string",
          "description": "username is the username of the agent requesting a template instantiation."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.AttachedVolume": {
      "required": [
        "name",
        "devicePath"
      ],
      "description": "AttachedVolume describes a volume attached to a node",
      "properties": {
        "devicePath": {
          "type": "string",
          "description": "DevicePath represents the device path where the volume should be available"
        },
        "name": {
          "type": "string",
          "description": "Name of the attached volume"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.StatefulSetSpec": {
      "required": [
        "template",
        "serviceName"
      ],
      "description": "A StatefulSetSpec is the specification of a StatefulSet.",
      "properties": {
        "replicas": {
          "type": "integer",
          "description": "Replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.",
          "format": "int32"
        },
        "serviceName": {
          "type": "string",
          "description": "ServiceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller."
        },
        "volumeClaimTemplates": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PersistentVolumeClaim"
          },
          "type": "array",
          "description": "VolumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name."
        },
        "template": {
          "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        },
        "selector": {
          "description": "Selector is a label query over pods that should match the replica count. If empty, defaulted to labels on the pod template. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.Deployment": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Deployment",
          "Version": "v1beta1",
          "Group": "apps"
        }
      ],
      "description": "Deployment enables declarative updates for Pods and ReplicaSets.",
      "properties": {
        "status": {
          "description": "Most recently observed status of the Deployment.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.DeploymentStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Specification of the desired behavior of the Deployment.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.DeploymentSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1beta1.SelfSubjectAccessReviewSpec": {
      "description": "SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
      "properties": {
        "nonResourceAttributes": {
          "description": "NonResourceAttributes describes information for a non-resource access request",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1beta1.NonResourceAttributes"
        },
        "resourceAttributes": {
          "description": "ResourceAuthorizationAttributes describes information for a resource access request",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1beta1.ResourceAttributes"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.SecretBuildSource": {
      "required": [
        "secret"
      ],
      "description": "SecretBuildSource describes a secret and its destination directory that will be used only at the build time. The content of the secret referenced here will be copied into the destination directory instead of mounting.",
      "properties": {
        "secret": {
          "description": "secret is a reference to an existing secret that you want to use in your build.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "destinationDir": {
          "type": "string",
          "description": "destinationDir is the directory where the files from the secret should be available for the build time. For the Source build strategy, these will be injected into a container where the assemble script runs. Later, when the script finishes, all files injected will be truncated to zero length. For the Docker build strategy, these will be copied into the build directory, where the Dockerfile is located, so users can ADD or COPY them during docker build."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authentication.v1.TokenReviewStatus": {
      "description": "TokenReviewStatus is the result of the token authentication request.",
      "properties": {
        "authenticated": {
          "type": "boolean",
          "description": "Authenticated indicates that the token was associated with a known user."
        },
        "user": {
          "description": "User is the UserInfo associated with the provided token.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authentication.v1.UserInfo"
        },
        "error": {
          "type": "string",
          "description": "Error indicates that the token couldn't be checked"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ServicePort": {
      "required": [
        "port"
      ],
      "description": "ServicePort contains information on service's port.",
      "properties": {
        "protocol": {
          "type": "string",
          "description": "The IP protocol for this port. Supports \"TCP\" and \"UDP\". Default is TCP."
        },
        "targetPort": {
          "description": "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: http://kubernetes.io/docs/user-guide/services#defining-a-service",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "port": {
          "type": "integer",
          "description": "The port that will be exposed by this service.",
          "format": "int32"
        },
        "nodePort": {
          "type": "integer",
          "description": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: http://kubernetes.io/docs/user-guide/services#type--nodeport",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. This maps to the 'Name' field in EndpointPort objects. Optional if only one ServicePort is defined on this service."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ProjectedVolumeSource": {
      "required": [
        "sources"
      ],
      "description": "Represents a projected volume source",
      "properties": {
        "sources": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.VolumeProjection"
          },
          "type": "array",
          "description": "list of volume projections"
        },
        "defaultMode": {
          "type": "integer",
          "description": "Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildSpec": {
      "required": [
        "strategy",
        "nodeSelector",
        "triggeredBy"
      ],
      "description": "BuildSpec has the information to represent a build and also additional information about a build",
      "properties": {
        "revision": {
          "description": "revision is the information from the source for a specific repo snapshot. This is optional.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.SourceRevision"
        },
        "serviceAccount": {
          "type": "string",
          "description": "serviceAccount is the name of the ServiceAccount to use to run the pod created by this build. The pod will be allowed to use secrets referenced by the ServiceAccount"
        },
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "nodeSelector is a selector which must be true for the build pod to fit on a node If nil, it can be overridden by default build nodeselector values for the cluster. If set to an empty map or a map with any values, default build nodeselector values are ignored."
        },
        "completionDeadlineSeconds": {
          "type": "integer",
          "description": "completionDeadlineSeconds is an optional duration in seconds, counted from the time when a build pod gets scheduled in the system, that the build may be active on a node before the system actively tries to terminate the build; value must be positive integer",
          "format": "int64"
        },
        "source": {
          "description": "source describes the SCM in use.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildSource"
        },
        "postCommit": {
          "description": "postCommit is a build hook executed after the build output image is committed, before it is pushed to a registry.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildPostCommitSpec"
        },
        "output": {
          "description": "output describes the Docker image the Strategy should produce.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildOutput"
        },
        "strategy": {
          "description": "strategy defines how to perform a build.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildStrategy"
        },
        "resources": {
          "description": "resources computes resource requirements to execute the build.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceRequirements"
        },
        "triggeredBy": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildTriggerCause"
          },
          "type": "array",
          "description": "triggeredBy describes which triggers started the most recent update to the build configuration and contains information about those triggers."
        }
      }
    },
    "com.github.openshift.origin.pkg.quota.apis.quota.v1.ClusterResourceQuotaSelector": {
      "required": [
        "labels",
        "annotations"
      ],
      "description": "ClusterResourceQuotaSelector is used to select projects.  At least one of LabelSelector or AnnotationSelector must present.  If only one is present, it is the only selection criteria.  If both are specified, the project must match both restrictions.",
      "properties": {
        "labels": {
          "description": "LabelSelector is used to select projects by label.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "AnnotationSelector is used to select projects by annotation."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.autoscaling.v1.Scale": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Scale",
          "Version": "v1",
          "Group": "autoscaling"
        }
      ],
      "description": "Scale represents a scaling request for a resource.",
      "properties": {
        "status": {
          "description": "current status of the scale. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status. Read-only.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.autoscaling.v1.ScaleStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "defines the behavior of the scale. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.autoscaling.v1.ScaleSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata; More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.DeploymentRollback": {
      "required": [
        "name",
        "rollbackTo"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "DeploymentRollback",
          "Version": "v1beta1",
          "Group": "apps"
        }
      ],
      "description": "DeploymentRollback stores the information required to rollback a deployment.",
      "properties": {
        "rollbackTo": {
          "description": "The config of this deployment rollback.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.RollbackConfig"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "description": "Required: This must match the Name of a deployment."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "updatedAnnotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The annotations to be updated to a deployment"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.batch.v2alpha1.JobTemplateSpec": {
      "description": "JobTemplateSpec describes the data a Job should have when created from a template",
      "properties": {
        "spec": {
          "description": "Specification of the desired behavior of the job. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.batch.v1.JobSpec"
        },
        "metadata": {
          "description": "Standard object's metadata of the jobs created from this template. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildLog": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "BuildLog",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "BuildLog",
          "Version": "v1",
          "Group": "build.openshift.io"
        }
      ],
      "description": "BuildLog is the (unused) resource associated with the build log redirector",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.RollbackConfig": {
      "properties": {
        "revision": {
          "type": "integer",
          "description": "The revision to rollback to. If set to 0, rollbck to the last revision.",
          "format": "int64"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.batch.v2alpha1.CronJobList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "CronJobList",
          "Version": "v2alpha1",
          "Group": "batch"
        },
        {
          "Kind": "ScheduledJobList",
          "Version": "v2alpha1",
          "Group": "batch"
        }
      ],
      "description": "CronJobList is a collection of cron jobs.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.batch.v2alpha1.CronJob"
          },
          "type": "array",
          "description": "Items is the list of CronJob."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NodeDaemonEndpoints": {
      "description": "NodeDaemonEndpoints lists ports opened by daemons running on the Node.",
      "properties": {
        "kubeletEndpoint": {
          "description": "Endpoint on which Kubelet is listening.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.DaemonEndpoint"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ImageList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ImageList",
          "Version": "v1",
          "Group": "image.openshift.io"
        }
      ],
      "description": "ImageList is a list of Image objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.Image"
          },
          "type": "array",
          "description": "Items is a list of images"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DaemonSetSpec": {
      "required": [
        "template"
      ],
      "description": "DaemonSetSpec is the specification of a daemon set.",
      "properties": {
        "minReadySeconds": {
          "type": "integer",
          "description": "The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).",
          "format": "int32"
        },
        "template": {
          "description": "An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: http://kubernetes.io/docs/user-guide/replication-controller#pod-template",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        },
        "templateGeneration": {
          "type": "integer",
          "description": "A sequence number representing a specific generation of the template. Populated by the system. It can be set only during the creation.",
          "format": "int64"
        },
        "updateStrategy": {
          "description": "An update strategy to replace existing DaemonSet pods with new pods.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DaemonSetUpdateStrategy"
        },
        "selector": {
          "description": "A label query over pods that are managed by the daemon set. Must match in order to be controlled. If empty, defaulted to labels on Pod template. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicySubjectReviewStatus": {
      "description": "PodSecurityPolicySubjectReviewStatus contains information/status for PodSecurityPolicySubjectReview.",
      "properties": {
        "reason": {
          "type": "string",
          "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available."
        },
        "allowedBy": {
          "description": "allowedBy is a reference to the rule that allows the PodTemplateSpec. A rule can be a SecurityContextConstraint or a PodSecurityPolicy A `nil`, indicates that it was denied.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "template": {
          "description": "template is the PodTemplateSpec after the defaulting is applied.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.RoleBinding": {
      "required": [
        "userNames",
        "groupNames",
        "subjects",
        "roleRef"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "RoleBinding",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "RoleBinding",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "RoleBinding references a Role, but not contain it.  It can reference any Role in the same namespace or in the global namespace. It adds who information via (Users and Groups) OR Subjects and namespace information by which namespace it exists in. RoleBindings in a given namespace only have effect in that namespace (excepting the master namespace which has power in all namespaces).",
      "properties": {
        "groupNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "GroupNames holds all the groups directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "subjects": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
          },
          "type": "array",
          "description": "Subjects hold object references to authorize with this rule. This field is ignored if UserNames or GroupNames are specified to support legacy clients and servers. Thus newer clients that do not need to support backwards compatibility should send only fully qualified Subjects and should omit the UserNames and GroupNames fields. Clients that need to support backwards compatibility can use this field to build the UserNames and GroupNames."
        },
        "roleRef": {
          "description": "RoleRef can only reference the current namespace and the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error. Since Policy is a singleton, this is sufficient knowledge to locate a role.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "userNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "UserNames holds all the usernames directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1.SubjectAccessReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "SubjectAccessReview",
          "Version": "v1",
          "Group": "authorization.k8s.io"
        }
      ],
      "description": "SubjectAccessReview checks whether or not a user or group can perform an action.",
      "properties": {
        "status": {
          "description": "Status is filled in by the server and indicates whether the request is allowed or not",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1.SubjectAccessReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec holds information about the request being evaluated",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1.SubjectAccessReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.policy.v1beta1.PodDisruptionBudgetStatus": {
      "required": [
        "disruptedPods",
        "disruptionsAllowed",
        "currentHealthy",
        "desiredHealthy",
        "expectedPods"
      ],
      "description": "PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.",
      "properties": {
        "observedGeneration": {
          "type": "integer",
          "description": "Most recent generation observed when updating this PDB status. PodDisruptionsAllowed and other status informatio is valid only if observedGeneration equals to PDB's object generation.",
          "format": "int64"
        },
        "expectedPods": {
          "type": "integer",
          "description": "total number of pods counted by this disruption budget",
          "format": "int32"
        },
        "currentHealthy": {
          "type": "integer",
          "description": "current number of healthy pods",
          "format": "int32"
        },
        "disruptionsAllowed": {
          "type": "integer",
          "description": "Number of pod disruptions that are currently allowed.",
          "format": "int32"
        },
        "disruptedPods": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
          },
          "type": "object",
          "description": "DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions."
        },
        "desiredHealthy": {
          "type": "integer",
          "description": "minimum desired number of healthy pods",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ReplicationController": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ReplicationController",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "ReplicationController represents the configuration of a replication controller.",
      "properties": {
        "status": {
          "description": "Status is the most recently observed status of the replication controller. This data may be out of date by some window of time. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ReplicationControllerStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the specification of the desired behavior of the replication controller. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ReplicationControllerSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "If the Labels of a ReplicationController are empty, they are defaulted to be the same as the Pod(s) that the replication controller manages. Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.RollingUpdateDeployment": {
      "description": "Spec to control the desired behavior of rolling update.",
      "properties": {
        "maxSurge": {
          "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "maxUnavailable": {
          "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PersistentVolumeClaimSpec": {
      "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
      "properties": {
        "storageClassName": {
          "type": "string",
          "description": "Name of the StorageClass required by the claim. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#class-1"
        },
        "accessModes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "AccessModes contains the desired access modes the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1"
        },
        "selector": {
          "description": "A label query over volumes to consider for binding.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "resources": {
          "description": "Resources represents the minimum resources the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceRequirements"
        },
        "volumeName": {
          "type": "string",
          "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup": {
      "required": [
        "name",
        "versions",
        "serverAddressByClientCIDRs"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "APIGroup",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
      "properties": {
        "serverAddressByClientCIDRs": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
          },
          "type": "array",
          "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "description": "name is the name of the group."
        },
        "versions": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
          },
          "type": "array",
          "description": "versions are the versions supported in this group."
        },
        "preferredVersion": {
          "description": "preferredVersion is the version preferred by the API server, which probably is the storage version.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ComponentCondition": {
      "required": [
        "type",
        "status"
      ],
      "description": "Information about the condition of a component.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the condition for a component. Valid values for \"Healthy\": \"True\", \"False\", or \"Unknown\"."
        },
        "message": {
          "type": "string",
          "description": "Message about the condition for a component. For example, information about a health check."
        },
        "type": {
          "type": "string",
          "description": "Type of condition for a component. Valid value: \"Healthy\""
        },
        "error": {
          "type": "string",
          "description": "Condition error code for a component. For example, a health check error code."
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
      "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "group": {
          "type": "string",
          "description": "The group attribute of the resource associated with the status StatusReason."
        },
        "name": {
          "type": "string",
          "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described)."
        },
        "retryAfterSeconds": {
          "type": "integer",
          "description": "If specified, the time in seconds before the operation should be retried.",
          "format": "int32"
        },
        "causes": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
          },
          "type": "array",
          "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.LimitRange": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "LimitRange",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "LimitRange sets resource usage limits for each kind of resource in a Namespace.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the limits enforced. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LimitRangeSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DaemonSetList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "DaemonSetList",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "DaemonSetList is a collection of daemon sets.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DaemonSet"
          },
          "type": "array",
          "description": "A list of daemon sets."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.RepositoryImportStatus": {
      "description": "RepositoryImportStatus describes the result of an image repository import",
      "properties": {
        "images": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageImportStatus"
          },
          "type": "array",
          "description": "Images is a list of images successfully retrieved by the import of the repository."
        },
        "status": {
          "description": "Status reflects whether any failure occurred during import",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
        },
        "additionalTags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "AdditionalTags are tags that exist in the repository but were not imported because a maximum limit of automatic imports was applied."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.VolumeMount": {
      "required": [
        "name",
        "mountPath"
      ],
      "description": "VolumeMount describes a mounting of a Volume within a container.",
      "properties": {
        "readOnly": {
          "type": "boolean",
          "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false."
        },
        "mountPath": {
          "type": "string",
          "description": "Path within the container at which the volume should be mounted.  Must not contain ':'."
        },
        "subPath": {
          "type": "string",
          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
        },
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.rbac.v1beta1.ClusterRole": {
      "required": [
        "rules"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterRole",
          "Version": "v1beta1",
          "Group": "rbac.authorization.k8s.io"
        }
      ],
      "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.",
      "properties": {
        "rules": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.rbac.v1beta1.PolicyRule"
          },
          "type": "array",
          "description": "Rules holds all the PolicyRules for this ClusterRole"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.RoleBindingRestrictionList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "RoleBindingRestrictionList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "RoleBindingRestrictionList",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "RoleBindingRestrictionList is a collection of RoleBindingRestriction objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.RoleBindingRestriction"
          },
          "type": "array",
          "description": "Items is a list of RoleBindingRestriction objects."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HorizontalPodAutoscalerStatus": {
      "required": [
        "currentReplicas",
        "desiredReplicas"
      ],
      "description": "current status of a horizontal pod autoscaler",
      "properties": {
        "observedGeneration": {
          "type": "integer",
          "description": "most recent generation observed by this autoscaler.",
          "format": "int64"
        },
        "currentReplicas": {
          "type": "integer",
          "description": "current number of replicas of pods managed by this autoscaler.",
          "format": "int32"
        },
        "lastScaleTime": {
          "description": "last time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "currentCPUUtilizationPercentage": {
          "type": "integer",
          "description": "current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.",
          "format": "int32"
        },
        "desiredReplicas": {
          "type": "integer",
          "description": "desired number of replicas of pods managed by this autoscaler.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.GroupRestriction": {
      "required": [
        "groups",
        "labels"
      ],
      "description": "GroupRestriction matches a group either by a string match on the group name or a label selector applied to group labels.",
      "properties": {
        "labels": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
          },
          "type": "array",
          "description": "Selectors specifies a list of label selectors over group labels."
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Groups is a list of groups used to match against an individual user's groups. If the user is a member of one of the whitelisted groups, the user is allowed to be bound to a role."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PersistentVolumeClaimList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PersistentVolumeClaimList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "PersistentVolumeClaimList is a list of PersistentVolumeClaim items.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PersistentVolumeClaim"
          },
          "type": "array",
          "description": "A list of persistent volume claims. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NodeStatus": {
      "description": "NodeStatus is information about the current status of a node.",
      "properties": {
        "capacity": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "Capacity represents the total resources of a node. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#capacity for more details."
        },
        "addresses": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NodeAddress"
          },
          "type": "array",
          "description": "List of addresses reachable to the node. Queried from cloud provider, if available. More info: http://releases.k8s.io/HEAD/docs/admin/node.md#node-addresses"
        },
        "images": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ContainerImage"
          },
          "type": "array",
          "description": "List of container images on this node"
        },
        "nodeInfo": {
          "description": "Set of ids/uuids to uniquely identify the node. More info: http://releases.k8s.io/HEAD/docs/admin/node.md#node-info",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NodeSystemInfo"
        },
        "volumesAttached": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.AttachedVolume"
          },
          "type": "array",
          "description": "List of volumes that are attached to the node."
        },
        "allocatable": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity."
        },
        "volumesInUse": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of attachable volumes in use (mounted) by the node."
        },
        "daemonEndpoints": {
          "description": "Endpoints of daemons running on the Node.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NodeDaemonEndpoints"
        },
        "phase": {
          "type": "string",
          "description": "NodePhase is the recently observed lifecycle phase of the node. More info: http://releases.k8s.io/HEAD/docs/admin/node.md#node-phase The field is never populated, and now is deprecated."
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NodeCondition"
          },
          "type": "array",
          "description": "Conditions is an array of current observed node conditions. More info: http://releases.k8s.io/HEAD/docs/admin/node.md#node-condition"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.HostPathVolumeSource": {
      "required": [
        "path"
      ],
      "description": "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.NamedRoleBinding": {
      "required": [
        "name",
        "roleBinding"
      ],
      "description": "NamedRoleBinding relates a role binding with a name",
      "properties": {
        "roleBinding": {
          "description": "RoleBinding is the role binding being named",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.RoleBinding"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of the role binding"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.CPUTargetUtilization": {
      "required": [
        "targetPercentage"
      ],
      "properties": {
        "targetPercentage": {
          "type": "integer",
          "description": "fraction of the requested CPU that should be utilized/used, e.g. 70 means that 70% of the requested CPU should be in use.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.TagImageHook": {
      "required": [
        "containerName",
        "to"
      ],
      "description": "TagImageHook is a request to tag the image in a particular container onto an ImageStreamTag.",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "ContainerName is the name of a container in the deployment config whose image value will be used as the source of the tag. If there is only a single container this value will be defaulted to the name of that container."
        },
        "to": {
          "description": "To is the target ImageStreamTag to set the container's image onto.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1beta1.NonResourceAttributes": {
      "description": "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path is the URL path of the request"
        },
        "verb": {
          "type": "string",
          "description": "Verb is the standard HTTP verb"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.LifecycleHook": {
      "required": [
        "failurePolicy"
      ],
      "description": "LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time.",
      "properties": {
        "failurePolicy": {
          "type": "string",
          "description": "FailurePolicy specifies what action to take if the hook fails."
        },
        "execNewPod": {
          "description": "ExecNewPod specifies the options for a lifecycle hook backed by a pod.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.ExecNewPodHook"
        },
        "tagImages": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.TagImageHook"
          },
          "type": "array",
          "description": "TagImages instructs the deployer to tag the current image referenced under a container onto an image stream tag."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Pod": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Pod",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.",
      "properties": {
        "status": {
          "description": "Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Specification of the desired behavior of the pod. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.CephFSVolumeSource": {
      "required": [
        "monitors"
      ],
      "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "secretRef": {
          "description": "Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "secretFile": {
          "type": "string",
          "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
        },
        "user": {
          "type": "string",
          "description": "Optional: User is the rados user name, default is admin More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
        },
        "path": {
          "type": "string",
          "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
        },
        "readOnly": {
          "type": "boolean",
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
        },
        "monitors": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required: Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.NetworkPolicyList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "NetworkPolicyList",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "Network Policy List is a list of NetworkPolicy objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.NetworkPolicy"
          },
          "type": "array",
          "description": "Items is a list of schema objects."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.RBDVolumeSource": {
      "required": [
        "monitors",
        "image"
      ],
      "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.",
      "properties": {
        "secretRef": {
          "description": "SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "image": {
          "type": "string",
          "description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
        },
        "keyring": {
          "type": "string",
          "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
        },
        "fsType": {
          "type": "string",
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd"
        },
        "readOnly": {
          "type": "boolean",
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
        },
        "user": {
          "type": "string",
          "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
        },
        "monitors": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
        },
        "pool": {
          "type": "string",
          "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NodeSelectorTerm": {
      "required": [
        "matchExpressions"
      ],
      "description": "A null or empty node selector term matches no objects.",
      "properties": {
        "matchExpressions": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NodeSelectorRequirement"
          },
          "type": "array",
          "description": "Required. A list of node selector requirements. The requirements are ANDed."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HorizontalPodAutoscalerList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "HorizontalPodAutoscalerList",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "list of horizontal pod autoscaler objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HorizontalPodAutoscaler"
          },
          "type": "array",
          "description": "list of horizontal pod autoscaler objects."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.GitHubWebHookCause": {
      "description": "GitHubWebHookCause has information about a GitHub webhook that triggered a build.",
      "properties": {
        "secret": {
          "type": "string",
          "description": "secret is the obfuscated webhook secret that triggered a build."
        },
        "revision": {
          "description": "revision is the git revision information of the trigger.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.SourceRevision"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authentication.v1.UserInfo": {
      "description": "UserInfo holds the information about the user needed to implement the user.Info interface.",
      "properties": {
        "username": {
          "type": "string",
          "description": "The name that uniquely identifies this user among all active users."
        },
        "uid": {
          "type": "string",
          "description": "A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs."
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The names of groups this user is a part of."
        },
        "extra": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "object",
          "description": "Any additional information provided by the authenticator."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.GitRepoVolumeSource": {
      "required": [
        "repository"
      ],
      "description": "Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.",
      "properties": {
        "directory": {
          "type": "string",
          "description": "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."
        },
        "repository": {
          "type": "string",
          "description": "Repository URL"
        },
        "revision": {
          "type": "string",
          "description": "Commit hash for the specified revision."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BinaryBuildSource": {
      "description": "BinaryBuildSource describes a binary file to be used for the Docker and Source build strategies, where the file will be extracted and used as the build source.",
      "properties": {
        "asFile": {
          "type": "string",
          "description": "asFile indicates that the provided binary input should be considered a single file within the build input. For example, specifying \"webapp.war\" would place the provided binary as `/webapp.war` for the builder. If left empty, the Docker and Source build strategies assume this file is a zip, tar, or tar.gz file and extract it as the source. The custom strategy receives this binary as standard input. This filename may not contain slashes or be '..' or '.'."
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.SignatureIssuer": {
      "description": "SignatureIssuer holds information about an issuer of signing certificate or key.",
      "properties": {
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "commonName": {
          "type": "string",
          "description": "Common name (e.g. openshift-signing-service)."
        }
      }
    },
    "com.github.openshift.origin.pkg.sdn.apis.network.v1.EgressNetworkPolicy": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "EgressNetworkPolicy",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "EgressNetworkPolicy",
          "Version": "v1",
          "Group": "network.openshift.io"
        }
      ],
      "description": "EgressNetworkPolicy describes the current egress network policy for a Namespace. When using the 'redhat/openshift-ovs-multitenant' network plugin, traffic from a pod to an IP address outside the cluster will be checked against each EgressNetworkPolicyRule in the pod's namespace's EgressNetworkPolicy, in order. If no rule matches (or no EgressNetworkPolicy is present) then the traffic will be allowed by default.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "spec is the specification of the current egress network policy",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.sdn.apis.network.v1.EgressNetworkPolicySpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "metadata for EgressNetworkPolicy",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.CustomDeploymentStrategyParams": {
      "description": "CustomDeploymentStrategyParams are the input to the Custom deployment strategy.",
      "properties": {
        "environment": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EnvVar"
          },
          "type": "array",
          "description": "Environment holds the environment which will be given to the container for Image."
        },
        "image": {
          "type": "string",
          "description": "Image specifies a Docker image which can carry out a deployment."
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Command is optional and overrides CMD in the container Image."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.EndpointAddress": {
      "required": [
        "ip"
      ],
      "description": "EndpointAddress is a tuple that describes single IP address.",
      "properties": {
        "ip": {
          "type": "string",
          "description": "The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready."
        },
        "hostname": {
          "type": "string",
          "description": "The Hostname of this endpoint"
        },
        "nodeName": {
          "type": "string",
          "description": "Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node."
        },
        "targetRef": {
          "description": "Reference to object providing the endpoint.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.DeploymentCondition": {
      "required": [
        "type",
        "status"
      ],
      "description": "DeploymentCondition describes the state of a deployment at a certain point.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the condition's last transition."
        },
        "lastUpdateTime": {
          "description": "The last time this condition was updated.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "type": {
          "type": "string",
          "description": "Type of deployment condition."
        },
        "message": {
          "type": "string",
          "description": "A human readable message indicating details about the transition."
        },
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "integer"
        }
      ]
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.Ingress": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Ingress",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.",
      "properties": {
        "status": {
          "description": "Status is the current state of the Ingress. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IngressStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec is the desired state of the Ingress. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IngressSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.sdn.apis.network.v1.EgressNetworkPolicyRule": {
      "required": [
        "type",
        "to"
      ],
      "description": "EgressNetworkPolicyRule contains a single egress network policy rule",
      "properties": {
        "to": {
          "description": "to is the target that traffic is allowed/denied to",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.sdn.apis.network.v1.EgressNetworkPolicyPeer"
        },
        "type": {
          "type": "string",
          "description": "type marks this as an \"Allow\" or \"Deny\" rule"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamImportStatus": {
      "description": "ImageStreamImportStatus contains information about the status of an image stream import.",
      "properties": {
        "images": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageImportStatus"
          },
          "type": "array",
          "description": "Images is set with the result of importing spec.images"
        },
        "import": {
          "description": "Import is the image stream that was successfully updated or created when 'to' was set.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageStream"
        },
        "repository": {
          "description": "Repository is set if spec.repository was set to the outcome of the import",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.RepositoryImportStatus"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.LocalObjectReference": {
      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.EndpointsList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "EndpointsList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "EndpointsList is a list of endpoints.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Endpoints"
          },
          "type": "array",
          "description": "List of endpoints."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.template.apis.template.v1.Template": {
      "required": [
        "objects"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ProcessedTemplate",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "Template",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "TemplateConfig",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "Template",
          "Version": "v1",
          "Group": "template.openshift.io"
        }
      ],
      "description": "Template contains the inputs needed to produce a Config.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "objects": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
          },
          "type": "array",
          "description": "objects is an array of resources to include in this template. If a namespace value is hardcoded in the object, it will be removed during template instantiation, however if the namespace value is, or contains, a ${PARAMETER_REFERENCE}, the resolved value after parameter substitution will be respected and the object will be created in that namespace."
        },
        "parameters": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.template.apis.template.v1.Parameter"
          },
          "type": "array",
          "description": "parameters is an optional array of Parameters used during the Template to Config transformation."
        },
        "message": {
          "type": "string",
          "description": "message is an optional instructional message that will be displayed when this template is instantiated. This field should inform the user how to utilize the newly created resources. Parameter substitution will be performed on the message before being displayed so that generated credentials and other parameters can be included in the output."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "labels is a optional set of labels that are applied to every object during the Template to Config transformation."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.user.apis.user.v1.Group": {
      "required": [
        "users"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Group",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "Group",
          "Version": "v1",
          "Group": "user.openshift.io"
        }
      ],
      "description": "Group represents a referenceable set of Users",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "users": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Users is the list of users in this group."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.EmptyDirVolumeSource": {
      "description": "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.",
      "properties": {
        "medium": {
          "type": "string",
          "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildConfigSpec": {
      "required": [
        "triggers",
        "strategy",
        "nodeSelector"
      ],
      "description": "BuildConfigSpec describes when and how builds are created",
      "properties": {
        "triggers": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildTriggerPolicy"
          },
          "type": "array",
          "description": "triggers determine how new Builds can be launched from a BuildConfig. If no triggers are defined, a new build can only occur as a result of an explicit client build creation."
        },
        "serviceAccount": {
          "type": "string",
          "description": "serviceAccount is the name of the ServiceAccount to use to run the pod created by this build. The pod will be allowed to use secrets referenced by the ServiceAccount"
        },
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "nodeSelector is a selector which must be true for the build pod to fit on a node If nil, it can be overridden by default build nodeselector values for the cluster. If set to an empty map or a map with any values, default build nodeselector values are ignored."
        },
        "completionDeadlineSeconds": {
          "type": "integer",
          "description": "completionDeadlineSeconds is an optional duration in seconds, counted from the time when a build pod gets scheduled in the system, that the build may be active on a node before the system actively tries to terminate the build; value must be positive integer",
          "format": "int64"
        },
        "source": {
          "description": "source describes the SCM in use.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildSource"
        },
        "successfulBuildsHistoryLimit": {
          "type": "integer",
          "description": "successfulBuildsHistoryLimit is the number of old successful builds to retain. If not specified, all successful builds are retained.",
          "format": "int32"
        },
        "failedBuildsHistoryLimit": {
          "type": "integer",
          "description": "failedBuildsHistoryLimit is the number of old failed builds to retain. If not specified, all failed builds are retained.",
          "format": "int32"
        },
        "postCommit": {
          "description": "postCommit is a build hook executed after the build output image is committed, before it is pushed to a registry.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildPostCommitSpec"
        },
        "output": {
          "description": "output describes the Docker image the Strategy should produce.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildOutput"
        },
        "strategy": {
          "description": "strategy defines how to perform a build.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildStrategy"
        },
        "runPolicy": {
          "type": "string",
          "description": "RunPolicy describes how the new build created from this build configuration will be scheduled for execution. This is optional, if not specified we default to \"Serial\"."
        },
        "resources": {
          "description": "resources computes resource requirements to execute the build.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceRequirements"
        },
        "revision": {
          "description": "revision is the information from the source for a specific repo snapshot. This is optional.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.SourceRevision"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.RoleBindingRestrictionSpec": {
      "required": [
        "userrestriction",
        "grouprestriction",
        "serviceaccountrestriction"
      ],
      "description": "RoleBindingRestrictionSpec defines a rolebinding restriction.  Exactly one field must be non-nil.",
      "properties": {
        "serviceaccountrestriction": {
          "description": "ServiceAccountRestriction matches against service-account subjects.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ServiceAccountRestriction"
        },
        "userrestriction": {
          "description": "UserRestriction matches against user subjects.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.UserRestriction"
        },
        "grouprestriction": {
          "description": "GroupRestriction matches against group subjects.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.GroupRestriction"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ScaleIOVolumeSource": {
      "required": [
        "gateway",
        "system",
        "secretRef"
      ],
      "description": "ScaleIOVolumeSource represents a persistent ScaleIO volume",
      "properties": {
        "storageMode": {
          "type": "string",
          "description": "Indicates whether the storage for a volume should be thick or thin (defaults to \"thin\")."
        },
        "secretRef": {
          "description": "SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "protectionDomain": {
          "type": "string",
          "description": "The name of the Protection Domain for the configured storage (defaults to \"default\")."
        },
        "volumeName": {
          "type": "string",
          "description": "The name of a volume already created in the ScaleIO system that is associated with this volume source."
        },
        "sslEnabled": {
          "type": "boolean",
          "description": "Flag to enable/disable SSL communication with Gateway, default false"
        },
        "system": {
          "type": "string",
          "description": "The name of the storage system as configured in ScaleIO."
        },
        "fsType": {
          "type": "string",
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
        },
        "readOnly": {
          "type": "boolean",
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
        },
        "storagePool": {
          "type": "string",
          "description": "The Storage Pool associated with the protection domain (defaults to \"default\")."
        },
        "gateway": {
          "type": "string",
          "description": "The host address of the ScaleIO API Gateway."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.DaemonEndpoint": {
      "required": [
        "Port"
      ],
      "description": "DaemonEndpoint contains information about a single Daemon endpoint.",
      "properties": {
        "Port": {
          "type": "integer",
          "description": "Port number of the given endpoint.",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authentication.v1beta1.TokenReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "TokenReview",
          "Version": "v1beta1",
          "Group": "authentication.k8s.io"
        }
      ],
      "description": "TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.",
      "properties": {
        "status": {
          "description": "Status is filled in by the server and indicates whether the request can be authenticated.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authentication.v1beta1.TokenReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec holds information about the request being evaluated",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authentication.v1beta1.TokenReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.rbac.v1beta1.PolicyRule": {
      "required": [
        "verbs"
      ],
      "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.",
      "properties": {
        "apiGroups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed."
        },
        "verbs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds."
        },
        "nonResourceURLs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both."
        },
        "resources": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Resources is a list of resources this rule applies to.  ResourceAll represents all resources."
        },
        "resourceNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ContainerStatus": {
      "required": [
        "name",
        "ready",
        "restartCount",
        "image",
        "imageID"
      ],
      "description": "ContainerStatus contains details for the current status of this container.",
      "properties": {
        "restartCount": {
          "type": "integer",
          "description": "The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated."
        },
        "image": {
          "type": "string",
          "description": "The image the container is running. More info: http://kubernetes.io/docs/user-guide/images"
        },
        "imageID": {
          "type": "string",
          "description": "ImageID of the container's image."
        },
        "state": {
          "description": "Details about the container's current condition.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ContainerState"
        },
        "ready": {
          "type": "boolean",
          "description": "Specifies whether the container has passed its readiness probe."
        },
        "lastState": {
          "description": "Details about the container's last termination condition.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ContainerState"
        },
        "containerID": {
          "type": "string",
          "description": "Container's ID in the format 'docker://<container_id>'. More info: http://kubernetes.io/docs/user-guide/container-environment#container-information"
        }
      }
    },
    "com.github.openshift.origin.pkg.template.apis.template.v1.TemplateInstanceList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "TemplateInstanceList",
          "Version": "v1",
          "Group": "template.openshift.io"
        }
      ],
      "description": "TemplateInstanceList is a list of TemplateInstance objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.template.apis.template.v1.TemplateInstance"
          },
          "type": "array",
          "description": "items is a list of Templateinstances"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.quota.apis.quota.v1.ResourceQuotaStatusByNamespace": {
      "required": [
        "namespace",
        "status"
      ],
      "description": "ResourceQuotaStatusByNamespace gives status for a particular project",
      "properties": {
        "status": {
          "description": "Status indicates how many resources have been consumed by this project",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceQuotaStatus"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace the project this status applies to"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authentication.v1beta1.UserInfo": {
      "description": "UserInfo holds the information about the user needed to implement the user.Info interface.",
      "properties": {
        "username": {
          "type": "string",
          "description": "The name that uniquely identifies this user among all active users."
        },
        "uid": {
          "type": "string",
          "description": "A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs."
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The names of groups this user is a part of."
        },
        "extra": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "object",
          "description": "Any additional information provided by the authenticator."
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.RollingDeploymentStrategyParams": {
      "description": "RollingDeploymentStrategyParams are the input to the Rolling deployment strategy.",
      "properties": {
        "pre": {
          "description": "Pre is a lifecycle hook which is executed before the deployment process begins. All LifecycleHookFailurePolicy values are supported.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.LifecycleHook"
        },
        "updatePeriodSeconds": {
          "type": "integer",
          "description": "UpdatePeriodSeconds is the time to wait between individual pod updates. If the value is nil, a default will be used.",
          "format": "int64"
        },
        "timeoutSeconds": {
          "type": "integer",
          "description": "TimeoutSeconds is the time to wait for updates before giving up. If the value is nil, a default will be used.",
          "format": "int64"
        },
        "post": {
          "description": "Post is a lifecycle hook which is executed after the strategy has finished all deployment logic. All LifecycleHookFailurePolicy values are supported.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.LifecycleHook"
        },
        "maxSurge": {
          "description": "MaxSurge is the maximum number of pods that can be scheduled above the original number of pods. Value can be an absolute number (ex: 5) or a percentage of total pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up.\n\nThis cannot be 0 if MaxUnavailable is 0. By default, 25% is used.\n\nExample: when this is set to 30%, the new RC can be scaled up by 30% immediately when the rolling update starts. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of original pods.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "intervalSeconds": {
          "type": "integer",
          "description": "IntervalSeconds is the time to wait between polling deployment status after update. If the value is nil, a default will be used.",
          "format": "int64"
        },
        "maxUnavailable": {
          "description": "MaxUnavailable is the maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total pods at the start of update (ex: 10%). Absolute number is calculated from percentage by rounding down.\n\nThis cannot be 0 if MaxSurge is 0. By default, 25% is used.\n\nExample: when this is set to 30%, the old RC can be scaled down by 30% immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that at least 70% of original number of pods are available at all times during the update.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ComponentStatus": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ComponentStatus",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "ComponentStatus (and ComponentStatusList) holds the cluster validation info.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ComponentCondition"
          },
          "type": "array",
          "description": "List of component conditions observed"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HorizontalPodAutoscalerSpec": {
      "required": [
        "scaleRef",
        "maxReplicas"
      ],
      "description": "specification of a horizontal pod autoscaler.",
      "properties": {
        "minReplicas": {
          "type": "integer",
          "description": "lower limit for the number of pods that can be set by the autoscaler, default 1.",
          "format": "int32"
        },
        "scaleRef": {
          "description": "reference to Scale subresource; horizontal pod autoscaler will learn the current resource consumption from its status, and will set the desired number of pods by modifying its spec.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.SubresourceReference"
        },
        "cpuUtilization": {
          "description": "target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified it defaults to the target CPU utilization at 80% of the requested resources.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.CPUTargetUtilization"
        },
        "maxReplicas": {
          "type": "integer",
          "description": "upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.",
          "format": "int32"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
      "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
      "properties": {
        "matchLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
        },
        "matchExpressions": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
          },
          "type": "array",
          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NodeAddress": {
      "required": [
        "type",
        "address"
      ],
      "description": "NodeAddress contains information for the node's address.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Node address type, one of Hostname, ExternalIP or InternalIP."
        },
        "address": {
          "type": "string",
          "description": "The node address."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DeploymentStatus": {
      "description": "DeploymentStatus is the most recently observed status of the Deployment.",
      "properties": {
        "updatedReplicas": {
          "type": "integer",
          "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
          "format": "int32"
        },
        "availableReplicas": {
          "type": "integer",
          "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
          "format": "int32"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "The generation observed by the deployment controller.",
          "format": "int64"
        },
        "unavailableReplicas": {
          "type": "integer",
          "description": "Total number of unavailable pods targeted by this deployment.",
          "format": "int32"
        },
        "readyReplicas": {
          "type": "integer",
          "description": "Total number of ready pods targeted by this deployment.",
          "format": "int32"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DeploymentCondition"
          },
          "type": "array",
          "description": "Represents the latest available observations of a deployment's current state."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.LoadBalancerStatus": {
      "description": "LoadBalancerStatus represents the status of a load-balancer.",
      "properties": {
        "ingress": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LoadBalancerIngress"
          },
          "type": "array",
          "description": "Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.AWSElasticBlockStoreVolumeSource": {
      "required": [
        "volumeID"
      ],
      "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.",
      "properties": {
        "readOnly": {
          "type": "boolean",
          "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
        },
        "partition": {
          "type": "integer",
          "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
          "format": "int32"
        },
        "volumeID": {
          "type": "string",
          "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
        },
        "fsType": {
          "type": "string",
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.policy.v1beta1.PodDisruptionBudget": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PodDisruptionBudget",
          "Version": "v1beta1",
          "Group": "policy"
        }
      ],
      "description": "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods",
      "properties": {
        "status": {
          "description": "Most recently observed status of the PodDisruptionBudget.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.policy.v1beta1.PodDisruptionBudgetStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Specification of the desired behavior of the PodDisruptionBudget.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.policy.v1beta1.PodDisruptionBudgetSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.autoscaling.v1.HorizontalPodAutoscalerList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "HorizontalPodAutoscalerList",
          "Version": "v1",
          "Group": "autoscaling"
        }
      ],
      "description": "list of horizontal pod autoscaler objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.autoscaling.v1.HorizontalPodAutoscaler"
          },
          "type": "array",
          "description": "list of horizontal pod autoscaler objects."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageImportStatus": {
      "required": [
        "status"
      ],
      "description": "ImageImportStatus describes the result of an image import.",
      "properties": {
        "status": {
          "description": "Status is the status of the image import, including errors encountered while retrieving the image",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
        },
        "image": {
          "description": "Image is the metadata of that image, if the image was located",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.Image"
        },
        "tag": {
          "type": "string",
          "description": "Tag is the tag this image was located under, if any"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.NamedRole": {
      "required": [
        "name",
        "role"
      ],
      "description": "NamedRole relates a Role with a name",
      "properties": {
        "role": {
          "description": "Role is the role being named",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.Role"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of the role"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Probe": {
      "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
      "properties": {
        "httpGet": {
          "description": "HTTPGet specifies the http request to perform.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.HTTPGetAction"
        },
        "timeoutSeconds": {
          "type": "integer",
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
          "format": "int32"
        },
        "exec": {
          "description": "One and only one of the following should be specified. Exec specifies the action to take.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ExecAction"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
          "format": "int32"
        },
        "tcpSocket": {
          "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.TCPSocketAction"
        },
        "periodSeconds": {
          "type": "integer",
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
          "format": "int32"
        },
        "successThreshold": {
          "type": "integer",
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
          "format": "int32"
        },
        "failureThreshold": {
          "type": "integer",
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.SELinuxStrategyOptions": {
      "required": [
        "rule"
      ],
      "description": "SELinux  Strategy Options defines the strategy type and any options used to create the strategy.",
      "properties": {
        "seLinuxOptions": {
          "description": "seLinuxOptions required to run as; required for MustRunAs More info: http://releases.k8s.io/HEAD/docs/design/security_context.md#security-context",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.SELinuxOptions"
        },
        "rule": {
          "type": "string",
          "description": "type is the strategy that will dictate the allowable labels that may be set."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ResourceQuotaList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ResourceQuotaList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "ResourceQuotaList is a list of ResourceQuota items.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceQuota"
          },
          "type": "array",
          "description": "Items is a list of ResourceQuota objects. More info: http://releases.k8s.io/HEAD/docs/design/admission_control_resource_quota.md#admissioncontrol-plugin-resourcequota"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.RoleBindingList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "RoleBindingList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "RoleBindingList",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "RoleBindingList is a collection of RoleBindings",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.RoleBinding"
          },
          "type": "array",
          "description": "Items is a list of RoleBindings"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicyReviewSpec": {
      "required": [
        "template"
      ],
      "description": "PodSecurityPolicyReviewSpec defines specification for PodSecurityPolicyReview",
      "properties": {
        "serviceAccountNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "serviceAccountNames is an optional set of ServiceAccounts to run the check with. If serviceAccountNames is empty, the template.spec.serviceAccountName is used, unless it's empty, in which case \"default\" is used instead. If serviceAccountNames is specified, template.spec.serviceAccountName is ignored."
        },
        "template": {
          "description": "template is the PodTemplateSpec to check. The template.spec.serviceAccountName field is used if serviceAccountNames is empty, unless the template.spec.serviceAccountName is empty, in which case \"default\" is used. If serviceAccountNames is specified, template.spec.serviceAccountName is ignored.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.certificates.v1beta1.CertificateSigningRequestSpec": {
      "required": [
        "request"
      ],
      "description": "This information is immutable after the request is created. Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users.",
      "properties": {
        "username": {
          "type": "string",
          "description": "Information about the requesting user. See user.Info interface for details."
        },
        "usages": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "allowedUsages specifies a set of usage contexts the key will be valid for. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3\n     https://tools.ietf.org/html/rfc5280#section-4.2.1.12"
        },
        "uid": {
          "type": "string",
          "description": "UID information about the requesting user. See user.Info interface for details."
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Group information about the requesting user. See user.Info interface for details."
        },
        "extra": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "object",
          "description": "Extra information about the requesting user. See user.Info interface for details."
        },
        "request": {
          "type": "string",
          "description": "Base64-encoded PKCS#10 CSR data",
          "format": "byte"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.FCVolumeSource": {
      "required": [
        "targetWWNs",
        "lun"
      ],
      "description": "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.",
      "properties": {
        "readOnly": {
          "type": "boolean",
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
        },
        "targetWWNs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required: FC target worldwide names (WWNs)"
        },
        "lun": {
          "type": "integer",
          "description": "Required: FC target lun number",
          "format": "int32"
        },
        "fsType": {
          "type": "string",
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
        }
      }
    },
    "io.k8s.apimachinery.pkg.version.Info": {
      "required": [
        "major",
        "minor",
        "gitVersion",
        "gitCommit",
        "gitTreeState",
        "buildDate",
        "goVersion",
        "compiler",
        "platform"
      ],
      "description": "Info contains versioning information. how we'll want to distribute that information.",
      "properties": {
        "major": {
          "type": "string"
        },
        "gitTreeState": {
          "type": "string"
        },
        "buildDate": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "gitVersion": {
          "type": "string"
        },
        "gitCommit": {
          "type": "string"
        },
        "goVersion": {
          "type": "string"
        },
        "minor": {
          "type": "string"
        },
        "compiler": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentConfigRollbackSpec": {
      "required": [
        "from",
        "includeTriggers",
        "includeTemplate",
        "includeReplicationMeta",
        "includeStrategy"
      ],
      "description": "DeploymentConfigRollbackSpec represents the options for rollback generation.",
      "properties": {
        "includeReplicationMeta": {
          "type": "boolean",
          "description": "IncludeReplicationMeta specifies whether to include the replica count and selector."
        },
        "includeTriggers": {
          "type": "boolean",
          "description": "IncludeTriggers specifies whether to include config Triggers."
        },
        "includeTemplate": {
          "type": "boolean",
          "description": "IncludeTemplate specifies whether to include the PodTemplateSpec."
        },
        "from": {
          "description": "From points to a ReplicationController which is a deployment.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "includeStrategy": {
          "type": "boolean",
          "description": "IncludeStrategy specifies whether to include the deployment Strategy."
        },
        "revision": {
          "type": "integer",
          "description": "Revision to rollback to. If set to 0, rollback to the last revision.",
          "format": "int64"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamImportSpec": {
      "required": [
        "import"
      ],
      "description": "ImageStreamImportSpec defines what images should be imported.",
      "properties": {
        "images": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageImportSpec"
          },
          "type": "array",
          "description": "Images are a list of individual images to import."
        },
        "import": {
          "type": "boolean",
          "description": "Import indicates whether to perform an import - if so, the specified tags are set on the spec and status of the image stream defined by the type meta."
        },
        "repository": {
          "description": "Repository is an optional import of an entire Docker image repository. A maximum limit on the number of tags imported this way is imposed by the server.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.RepositoryImportSpec"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentCause": {
      "required": [
        "type"
      ],
      "description": "DeploymentCause captures information about a particular cause of a deployment.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the trigger that resulted in the creation of a new deployment"
        },
        "imageTrigger": {
          "description": "ImageTrigger contains the image trigger details, if this trigger was fired based on an image change",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentCauseImageTrigger"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PodTemplate": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PodTemplate",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "PodTemplate describes a template for creating copies of a predefined pod.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "template": {
          "description": "Template defines the pods that will be created from this pod template. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ServiceAccountReference": {
      "required": [
        "name",
        "namespace"
      ],
      "description": "ServiceAccountReference specifies a service account and namespace by their names.",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Namespace is the namespace of the service account.  Service accounts from inside the whitelisted namespaces are allowed to be bound to roles.  If Namespace is empty, then the namespace of the RoleBindingRestriction in which the ServiceAccountReference is embedded is used."
        },
        "name": {
          "type": "string",
          "description": "Name is the name of the service account."
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamStatus": {
      "required": [
        "dockerImageRepository"
      ],
      "description": "ImageStreamStatus contains information about the state of this image stream.",
      "properties": {
        "dockerImageRepository": {
          "type": "string",
          "description": "DockerImageRepository represents the effective location this stream may be accessed at. May be empty until the server determines where the repository is located"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.NamedTagEventList"
          },
          "type": "array",
          "description": "Tags are a historical record of images associated with each tag. The first entry in the TagEvent array is the currently tagged image."
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.SecurityContextConstraints": {
      "required": [
        "priority",
        "allowPrivilegedContainer",
        "defaultAddCapabilities",
        "requiredDropCapabilities",
        "allowedCapabilities",
        "allowHostDirVolumePlugin",
        "volumes",
        "allowHostNetwork",
        "allowHostPorts",
        "allowHostPID",
        "allowHostIPC",
        "readOnlyRootFilesystem"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "SecurityContextConstraints",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "SecurityContextConstraints",
          "Version": "v1",
          "Group": "security.openshift.io"
        }
      ],
      "description": "SecurityContextConstraints governs the ability to make requests that affect the SecurityContext that will be applied to a container.",
      "properties": {
        "readOnlyRootFilesystem": {
          "type": "boolean",
          "description": "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to."
        },
        "allowHostDirVolumePlugin": {
          "type": "boolean",
          "description": "AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin"
        },
        "allowHostPorts": {
          "type": "boolean",
          "description": "AllowHostPorts determines if the policy allows host ports in the containers."
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The groups that have permission to use this security context constraints"
        },
        "allowHostPID": {
          "type": "boolean",
          "description": "AllowHostPID determines if the policy allows host pid in the containers."
        },
        "seccompProfiles": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "SeccompProfiles lists the allowed profiles that may be set for the pod or container's seccomp annotations.  An unset (nil) or empty value means that no profiles may be specifid by the pod or container.\tThe wildcard '*' may be used to allow all profiles.  When used to generate a value for a pod the first non-wildcard profile will be used as the default."
        },
        "users": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The users who have permissions to use this security context constraints"
        },
        "allowedCapabilities": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities. To allow all capabilities you may use '*'."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "allowHostIPC": {
          "type": "boolean",
          "description": "AllowHostIPC determines if the policy allows host ipc in the containers."
        },
        "runAsUser": {
          "description": "RunAsUser is the strategy that will dictate what RunAsUser is used in the SecurityContext.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.RunAsUserStrategyOptions"
        },
        "supplementalGroups": {
          "description": "SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.SupplementalGroupsStrategyOptions"
        },
        "fsGroup": {
          "description": "FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.FSGroupStrategyOptions"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "priority": {
          "type": "integer",
          "description": "Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority.  If scores for multiple SCCs are equal they will be sorted by name.",
          "format": "int32"
        },
        "seLinuxContext": {
          "description": "SELinuxContext is the strategy that will dictate what labels will be set in the SecurityContext.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.SELinuxContextStrategyOptions"
        },
        "volumes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use \"*\". To allow no volumes, set to [\"none\"]."
        },
        "allowPrivilegedContainer": {
          "type": "boolean",
          "description": "AllowPrivilegedContainer determines if a container can request to be run as privileged."
        },
        "defaultAddCapabilities": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities."
        },
        "allowHostNetwork": {
          "type": "boolean",
          "description": "AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec."
        },
        "requiredDropCapabilities": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added."
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.quota.apis.quota.v1.AppliedClusterResourceQuotaList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "AppliedClusterResourceQuotaList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "AppliedClusterResourceQuotaList",
          "Version": "v1",
          "Group": "quota.openshift.io"
        }
      ],
      "description": "AppliedClusterResourceQuotaList is a collection of AppliedClusterResourceQuotas",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.quota.apis.quota.v1.AppliedClusterResourceQuota"
          },
          "type": "array",
          "description": "Items is a list of AppliedClusterResourceQuota"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.PolicyBinding": {
      "required": [
        "lastModified",
        "policyRef",
        "roleBindings"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PolicyBinding",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "PolicyBinding",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "PolicyBinding is a object that holds all the RoleBindings for a particular namespace.  There is one PolicyBinding document per referenced Policy namespace",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "policyRef": {
          "description": "PolicyRef is a reference to the Policy that contains all the Roles that this PolicyBinding's RoleBindings may reference",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "lastModified": {
          "description": "LastModified is the last time that any part of the PolicyBinding was created, updated, or deleted",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "roleBindings": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.NamedRoleBinding"
          },
          "type": "array",
          "description": "RoleBindings holds all the RoleBindings held by this PolicyBinding, mapped by RoleBinding.Name"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.template.apis.template.v1.TemplateInstance": {
      "required": [
        "spec",
        "status"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "TemplateInstance",
          "Version": "v1",
          "Group": "template.openshift.io"
        }
      ],
      "description": "TemplateInstance requests and records the instantiation of a Template. TemplateInstance is part of an experimental API.",
      "properties": {
        "status": {
          "description": "status describes the current state of this TemplateInstance.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.template.apis.template.v1.TemplateInstanceStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "spec describes the desired state of this TemplateInstance.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.template.apis.template.v1.TemplateInstanceSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Namespace": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Namespace",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "Namespace provides a scope for Names. Use of multiple namespaces is optional.",
      "properties": {
        "status": {
          "description": "Status describes the current status of a Namespace. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NamespaceStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the behavior of the Namespace. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NamespaceSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent": {
      "required": [
        "type",
        "object"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1beta1",
          "Group": "apps"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "apps.openshift.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "authentication.k8s.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1beta1",
          "Group": "authentication.k8s.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "authorization.k8s.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1beta1",
          "Group": "authorization.k8s.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "autoscaling"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v2alpha1",
          "Group": "autoscaling"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "batch"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v2alpha1",
          "Group": "batch"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "build.openshift.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1beta1",
          "Group": "certificates.k8s.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1beta1",
          "Group": "extensions"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1beta1",
          "Group": "federation"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "image.openshift.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1alpha1",
          "Group": "imagepolicy.k8s.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "network.openshift.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "oauth.openshift.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1beta1",
          "Group": "policy"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "project.openshift.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "quota.openshift.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1alpha1",
          "Group": "rbac.authorization.k8s.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1beta1",
          "Group": "rbac.authorization.k8s.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "route.openshift.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "security.openshift.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1alpha1",
          "Group": "settings.k8s.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "storage.k8s.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1beta1",
          "Group": "storage.k8s.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "template.openshift.io"
        },
        {
          "Kind": "WatchEvent",
          "Version": "v1",
          "Group": "user.openshift.io"
        }
      ],
      "description": "Event represents a single event to a watched resource.",
      "properties": {
        "object": {
          "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.EndpointSubset": {
      "description": "EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:\n  {\n    Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n    Ports:     [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n  }\nThe resulting set of endpoints can be viewed as:\n    a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],\n    b: [ 10.10.1.1:309, 10.10.2.2:309 ]",
      "properties": {
        "notReadyAddresses": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EndpointAddress"
          },
          "type": "array",
          "description": "IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check."
        },
        "ports": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EndpointPort"
          },
          "type": "array",
          "description": "Port numbers available on the related IP addresses."
        },
        "addresses": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EndpointAddress"
          },
          "type": "array",
          "description": "IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize."
        }
      }
    },
    "com.github.openshift.origin.pkg.project.apis.project.v1.Project": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Project",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "Project",
          "Version": "v1",
          "Group": "project.openshift.io"
        }
      ],
      "description": "Projects are the unit of isolation and collaboration in OpenShift. A project has one or more members, a quota on the resources that the project may consume, and the security controls on the resources in the project. Within a project, members may have different roles - project administrators can set membership, editors can create and manage the resources, and viewers can see but not access running containers. In a normal cluster project administrators are not able to alter their quotas - that is restricted to cluster administrators.\n\nListing or watching projects will return only projects the user has the reader role on.\n\nAn OpenShift project is an alternative representation of a Kubernetes namespace. Projects are exposed as editable to end users while namespaces are not. Direct creation of a project is typically restricted to administrators, while end users should use the requestproject resource.",
      "properties": {
        "status": {
          "description": "Status describes the current status of a Namespace",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.project.apis.project.v1.ProjectStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the behavior of the Namespace.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.project.apis.project.v1.ProjectSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ResourceQuotaStatus": {
      "description": "ResourceQuotaStatus defines the enforced hard limits and observed use.",
      "properties": {
        "hard": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "Hard is the set of enforced hard limits for each named resource. More info: http://releases.k8s.io/HEAD/docs/design/admission_control_resource_quota.md#admissioncontrol-plugin-resourcequota"
        },
        "used": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "Used is the current observed total usage of the resource in the namespace."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.SecretVolumeSource": {
      "description": "Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.KeyToPath"
          },
          "type": "array",
          "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
        },
        "optional": {
          "type": "boolean",
          "description": "Specify whether the Secret or it's keys must be defined"
        },
        "defaultMode": {
          "type": "integer",
          "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32"
        },
        "secretName": {
          "type": "string",
          "description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.storage.v1beta1.StorageClassList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "StorageClassList",
          "Version": "v1beta1",
          "Group": "storage.k8s.io"
        }
      ],
      "description": "StorageClassList is a collection of storage classes.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.storage.v1beta1.StorageClass"
          },
          "type": "array",
          "description": "Items is the list of StorageClasses"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IngressStatus": {
      "description": "IngressStatus describe the current state of the Ingress.",
      "properties": {
        "loadBalancer": {
          "description": "LoadBalancer contains the current status of the load-balancer.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LoadBalancerStatus"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.certificates.v1beta1.CertificateSigningRequestCondition": {
      "required": [
        "type"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "human readable message with details about the request state"
        },
        "type": {
          "type": "string",
          "description": "request approval state, currently Approved or Denied."
        },
        "reason": {
          "type": "string",
          "description": "brief reason for the request state"
        },
        "lastUpdateTime": {
          "description": "timestamp for the last update to this condition",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PersistentVolumeClaimStatus": {
      "description": "PersistentVolumeClaimStatus is the current status of a persistent volume claim.",
      "properties": {
        "phase": {
          "type": "string",
          "description": "Phase represents the current phase of PersistentVolumeClaim."
        },
        "accessModes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "AccessModes contains the actual access modes the volume backing the PVC has. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1"
        },
        "capacity": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "Represents the actual resources of the underlying volume."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildConfigList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "BuildConfigList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "BuildConfigList",
          "Version": "v1",
          "Group": "build.openshift.io"
        }
      ],
      "description": "BuildConfigList is a collection of BuildConfigs.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildConfig"
          },
          "type": "array",
          "description": "items is a list of build configs"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "metadata for BuildConfigList.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ResourceQuotaSpec": {
      "description": "ResourceQuotaSpec defines the desired hard limits to enforce for Quota.",
      "properties": {
        "scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects."
        },
        "hard": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "Hard is the set of desired hard limits for each named resource. More info: http://releases.k8s.io/HEAD/docs/design/admission_control_resource_quota.md#admissioncontrol-plugin-resourcequota"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.QuobyteVolumeSource": {
      "required": [
        "registry",
        "volume"
      ],
      "description": "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "volume": {
          "type": "string",
          "description": "Volume is a string that references an already created Quobyte volume by name."
        },
        "readOnly": {
          "type": "boolean",
          "description": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
        },
        "group": {
          "type": "string",
          "description": "Group to map volume access to Default is no group"
        },
        "registry": {
          "type": "string",
          "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
        },
        "user": {
          "type": "string",
          "description": "User to map volume access to Defaults to serivceaccount user"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterRoleList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterRoleList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ClusterRoleList",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "ClusterRoleList is a collection of ClusterRoles",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterRole"
          },
          "type": "array",
          "description": "Items is a list of ClusterRoles"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildSource": {
      "required": [
        "type"
      ],
      "description": "BuildSource is the SCM used for the build.",
      "properties": {
        "binary": {
          "description": "binary builds accept a binary as their input. The binary is generally assumed to be a tar, gzipped tar, or zip file depending on the strategy. For Docker builds, this is the build context and an optional Dockerfile may be specified to override any Dockerfile in the build context. For Source builds, this is assumed to be an archive as described above. For Source and Docker builds, if binary.asFile is set the build will receive a directory with a single file. contextDir may be used when an archive is provided. Custom builds will receive this binary as input on STDIN.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BinaryBuildSource"
        },
        "git": {
          "description": "git contains optional information about git build source",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.GitBuildSource"
        },
        "sourceSecret": {
          "description": "sourceSecret is the name of a Secret that would be used for setting up the authentication for cloning private repository. The secret contains valid credentials for remote repository, where the data's key represent the authentication method to be used and value is the base64 encoded credentials. Supported auth methods are: ssh-privatekey.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "secrets": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.SecretBuildSource"
          },
          "type": "array",
          "description": "secrets represents a list of secrets and their destinations that will be used only for the build."
        },
        "type": {
          "type": "string",
          "description": "type of build input to accept"
        },
        "contextDir": {
          "type": "string",
          "description": "contextDir specifies the sub-directory where the source code for the application exists. This allows to have buildable sources in directory other than root of repository."
        },
        "images": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.ImageSource"
          },
          "type": "array",
          "description": "images describes a set of images to be used to provide source for the build"
        },
        "dockerfile": {
          "type": "string",
          "description": "dockerfile is the raw contents of a Dockerfile which should be built. When this option is specified, the FROM may be modified based on your strategy base image and additional ENV stanzas from your strategy environment will be added after the FROM, but before the rest of your Dockerfile stanzas. The Dockerfile source type may be used with other options like git - in those cases the Git repo will have any innate Dockerfile replaced in the context dir."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.FlexVolumeSource": {
      "required": [
        "driver"
      ],
      "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
      "properties": {
        "secretRef": {
          "description": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "fsType": {
          "type": "string",
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
        },
        "driver": {
          "type": "string",
          "description": "Driver is the name of the driver to use for this volume."
        },
        "readOnly": {
          "type": "boolean",
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
        },
        "options": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional: Extra command options if any."
        }
      }
    },
    "com.github.openshift.origin.pkg.user.apis.user.v1.Identity": {
      "required": [
        "providerName",
        "providerUserName",
        "user"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Identity",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "Identity",
          "Version": "v1",
          "Group": "user.openshift.io"
        }
      ],
      "description": "Identity records a successful authentication of a user with an identity provider. The information about the source of authentication is stored on the identity, and the identity is then associated with a single user object. Multiple identities can reference a single user. Information retrieved from the authentication provider is stored in the extra field using a schema determined by the provider.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "user": {
          "description": "User is a reference to the user this identity is associated with Both Name and UID must be set",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "providerName": {
          "type": "string",
          "description": "ProviderName is the source of identity information"
        },
        "extra": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Extra holds extra information about this identity"
        },
        "providerUserName": {
          "type": "string",
          "description": "ProviderUserName uniquely represents this identity in the scope of the provider"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.autoscaling.v1.HorizontalPodAutoscalerSpec": {
      "required": [
        "scaleTargetRef",
        "maxReplicas"
      ],
      "description": "specification of a horizontal pod autoscaler.",
      "properties": {
        "minReplicas": {
          "type": "integer",
          "description": "lower limit for the number of pods that can be set by the autoscaler, default 1.",
          "format": "int32"
        },
        "scaleTargetRef": {
          "description": "reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.autoscaling.v1.CrossVersionObjectReference"
        },
        "targetCPUUtilizationPercentage": {
          "type": "integer",
          "description": "target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.",
          "format": "int32"
        },
        "maxReplicas": {
          "type": "integer",
          "description": "upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.oauth.apis.oauth.v1.ScopeRestriction": {
      "description": "ScopeRestriction describe one restriction on scopes.  Exactly one option must be non-nil.",
      "properties": {
        "literals": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "ExactValues means the scope has to match a particular set of strings exactly"
        },
        "clusterRole": {
          "description": "ClusterRole describes a set of restrictions for cluster role scoping.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.oauth.apis.oauth.v1.ClusterRoleScopeRestriction"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PodAffinity": {
      "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodAffinityTerm"
          },
          "type": "array",
          "description": "NOT YET IMPLEMENTED. TODO: Uncomment field once it is implemented. If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system will try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied. RequiredDuringSchedulingRequiredDuringExecution []PodAffinityTerm  `json:\"requiredDuringSchedulingRequiredDuringExecution,omitempty\"` If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied."
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.WeightedPodAffinityTerm"
          },
          "type": "array",
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred."
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamMapping": {
      "required": [
        "image",
        "tag"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ImageStreamMapping",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ImageStreamMapping",
          "Version": "v1",
          "Group": "image.openshift.io"
        }
      ],
      "description": "ImageStreamMapping represents a mapping from a single tag to a Docker image as well as the reference to the Docker image stream the image came from.",
      "properties": {
        "image": {
          "description": "Image is a Docker image.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.Image"
        },
        "tag": {
          "type": "string",
          "description": "Tag is a string value this image can be located with inside the stream."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1.SelfSubjectAccessReviewSpec": {
      "description": "SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
      "properties": {
        "nonResourceAttributes": {
          "description": "NonResourceAttributes describes information for a non-resource access request",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1.NonResourceAttributes"
        },
        "resourceAttributes": {
          "description": "ResourceAuthorizationAttributes describes information for a resource access request",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1.ResourceAttributes"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildStatusOutputTo": {
      "description": "BuildStatusOutputTo describes the status of the built image with regards to image registry to which it was supposed to be pushed.",
      "properties": {
        "imageDigest": {
          "type": "string",
          "description": "imageDigest is the digest of the built Docker image. The digest uniquely identifies the image in the registry to which it was pushed.\n\nPlease note that this field may not always be set even if the push completes successfully - e.g. when the registry returns no digest or returns it in a format that the builder doesn't understand."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1.LocalSubjectAccessReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "LocalSubjectAccessReview",
          "Version": "v1",
          "Group": "authorization.k8s.io"
        }
      ],
      "description": "LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.",
      "properties": {
        "status": {
          "description": "Status is filled in by the server and indicates whether the request is allowed or not",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1.SubjectAccessReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1.SubjectAccessReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DeploymentRollback": {
      "required": [
        "name",
        "rollbackTo"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "DeploymentRollback",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "DeploymentRollback stores the information required to rollback a deployment.",
      "properties": {
        "rollbackTo": {
          "description": "The config of this deployment rollback.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.RollbackConfig"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "description": "Required: This must match the Name of a deployment."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "updatedAnnotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The annotations to be updated to a deployment"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.storage.v1beta1.StorageClass": {
      "required": [
        "provisioner"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "StorageClass",
          "Version": "v1beta1",
          "Group": "storage.k8s.io"
        }
      ],
      "description": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Parameters holds the parameters for the provisioner that should create volumes of this storage class."
        },
        "provisioner": {
          "type": "string",
          "description": "Provisioner indicates the type of the provisioner."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PersistentVolumeClaimVolumeSource": {
      "required": [
        "claimName"
      ],
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
      "properties": {
        "readOnly": {
          "type": "boolean",
          "description": "Will force the ReadOnly setting in VolumeMounts. Default false."
        },
        "claimName": {
          "type": "string",
          "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IngressList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "IngressList",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "IngressList is a collection of Ingress.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.Ingress"
          },
          "type": "array",
          "description": "Items is the list of Ingress."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterPolicyList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterPolicyList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ClusterPolicyList",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "ClusterPolicyList is a collection of ClusterPolicies",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterPolicy"
          },
          "type": "array",
          "description": "Items is a list of ClusterPolicies"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.sdn.apis.network.v1.ClusterNetworkList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterNetworkList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ClusterNetworkList",
          "Version": "v1",
          "Group": "network.openshift.io"
        }
      ],
      "description": "ClusterNetworkList is a collection of ClusterNetworks",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.sdn.apis.network.v1.ClusterNetwork"
          },
          "type": "array",
          "description": "Items is the list of cluster networks"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.rbac.v1beta1.RoleBinding": {
      "required": [
        "subjects",
        "roleRef"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "RoleBinding",
          "Version": "v1beta1",
          "Group": "rbac.authorization.k8s.io"
        }
      ],
      "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
      "properties": {
        "roleRef": {
          "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.rbac.v1beta1.RoleRef"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "subjects": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.rbac.v1beta1.Subject"
          },
          "type": "array",
          "description": "Subjects holds references to the objects the role applies to."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
      "required": [
        "key",
        "operator"
      ],
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "properties": {
        "operator": {
          "type": "string",
          "description": "operator represents a key's relationship to a set of values. Valid operators ard In, NotIn, Exists and DoesNotExist."
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
        },
        "key": {
          "type": "string",
          "description": "key is the label key that the selector applies to."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.APIVersion": {
      "description": "An APIVersion represents a single concrete version of an object model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this version (e.g. 'v1')."
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterPolicy": {
      "required": [
        "lastModified",
        "roles"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterPolicy",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ClusterPolicy",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "ClusterPolicy is a object that holds all the ClusterRoles for a particular namespace.  There is at most one ClusterPolicy document per namespace.",
      "properties": {
        "lastModified": {
          "description": "LastModified is the last time that any part of the ClusterPolicy was created, updated, or deleted",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "roles": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.NamedClusterRole"
          },
          "type": "array",
          "description": "Roles holds all the ClusterRoles held by this ClusterPolicy, mapped by ClusterRole.Name"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.SubjectRulesReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "SubjectRulesReview",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "SubjectRulesReview",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "SubjectRulesReview is a resource you can create to determine which actions another user can perform in a namespace",
      "properties": {
        "status": {
          "description": "Status is completed by the server to tell which permissions you have",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.SubjectRulesReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec adds information about how to conduct the check",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.SubjectRulesReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ServiceList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ServiceList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "ServiceList holds a list of services.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Service"
          },
          "type": "array",
          "description": "List of services"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.route.apis.route.v1.RouteList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "RouteList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "RouteList",
          "Version": "v1",
          "Group": "route.openshift.io"
        }
      ],
      "description": "RouteList is a collection of Routes.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.route.apis.route.v1.Route"
          },
          "type": "array",
          "description": "items is a list of routes"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.batch.v2alpha1.CronJobSpec": {
      "required": [
        "schedule",
        "jobTemplate"
      ],
      "description": "CronJobSpec describes how the job execution will look like and when it will actually run.",
      "properties": {
        "failedJobsHistoryLimit": {
          "type": "integer",
          "description": "The number of failed finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified.",
          "format": "int32"
        },
        "jobTemplate": {
          "description": "JobTemplate is the object that describes the job that will be created when executing a CronJob.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.batch.v2alpha1.JobTemplateSpec"
        },
        "concurrencyPolicy": {
          "type": "string",
          "description": "ConcurrencyPolicy specifies how to treat concurrent executions of a Job."
        },
        "suspend": {
          "type": "boolean",
          "description": "Suspend flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false."
        },
        "schedule": {
          "type": "string",
          "description": "Schedule contains the schedule in Cron format, see https://en.wikipedia.org/wiki/Cron."
        },
        "startingDeadlineSeconds": {
          "type": "integer",
          "description": "Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.",
          "format": "int64"
        },
        "successfulJobsHistoryLimit": {
          "type": "integer",
          "description": "The number of successful finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified.",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authentication.v1beta1.TokenReviewStatus": {
      "description": "TokenReviewStatus is the result of the token authentication request.",
      "properties": {
        "authenticated": {
          "type": "boolean",
          "description": "Authenticated indicates that the token was associated with a known user."
        },
        "user": {
          "description": "User is the UserInfo associated with the provided token.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authentication.v1beta1.UserInfo"
        },
        "error": {
          "type": "string",
          "description": "Error indicates that the token couldn't be checked"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1.ResourceAttributes": {
      "description": "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface",
      "properties": {
        "verb": {
          "type": "string",
          "description": "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all."
        },
        "resource": {
          "type": "string",
          "description": "Resource is one of the existing resource types.  \"*\" means all."
        },
        "name": {
          "type": "string",
          "description": "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all."
        },
        "version": {
          "type": "string",
          "description": "Version is the API Version of the Resource.  \"*\" means all."
        },
        "group": {
          "type": "string",
          "description": "Group is the API Group of the Resource.  \"*\" means all."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview"
        },
        "subresource": {
          "type": "string",
          "description": "Subresource is one of the existing resource types.  \"\" means none."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ConfigMapVolumeSource": {
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.KeyToPath"
          },
          "type": "array",
          "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
        },
        "optional": {
          "type": "boolean",
          "description": "Specify whether the ConfigMap or it's keys must be defined"
        },
        "defaultMode": {
          "type": "integer",
          "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.SupplementalGroupsStrategyOptions": {
      "description": "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.",
      "properties": {
        "ranges": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IDRange"
          },
          "type": "array",
          "description": "Ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end."
        },
        "rule": {
          "type": "string",
          "description": "Rule is the strategy that will dictate what supplemental groups is used in the SecurityContext."
        }
      }
    },
    "io.k8s.apimachinery.pkg.api.resource.Quantity": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "integer"
        }
      ]
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentLog": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "DeploymentLog",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "DeploymentLog",
          "Version": "v1",
          "Group": "apps.openshift.io"
        }
      ],
      "description": "DeploymentLog represents the logs for a deployment",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterRoleBindingList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterRoleBindingList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ClusterRoleBindingList",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "ClusterRoleBindingList is a collection of ClusterRoleBindings",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterRoleBinding"
          },
          "type": "array",
          "description": "Items is a list of ClusterRoleBindings"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.RunAsUserStrategyOptions": {
      "required": [
        "rule"
      ],
      "description": "Run A sUser Strategy Options defines the strategy type and any options used to create the strategy.",
      "properties": {
        "ranges": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IDRange"
          },
          "type": "array",
          "description": "Ranges are the allowed ranges of uids that may be used."
        },
        "rule": {
          "type": "string",
          "description": "Rule is the strategy that will dictate the allowable RunAsUser values that may be set."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ReplicationControllerStatus": {
      "required": [
        "replicas"
      ],
      "description": "ReplicationControllerStatus represents the current status of a replication controller.",
      "properties": {
        "availableReplicas": {
          "type": "integer",
          "description": "The number of available replicas (ready for at least minReadySeconds) for this replication controller.",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "description": "Replicas is the most recently oberved number of replicas. More info: http://kubernetes.io/docs/user-guide/replication-controller#what-is-a-replication-controller",
          "format": "int32"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration reflects the generation of the most recently observed replication controller.",
          "format": "int64"
        },
        "readyReplicas": {
          "type": "integer",
          "description": "The number of ready replicas for this replication controller.",
          "format": "int32"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ReplicationControllerCondition"
          },
          "type": "array",
          "description": "Represents the latest available observations of a replication controller's current state."
        },
        "fullyLabeledReplicas": {
          "type": "integer",
          "description": "The number of pods that have labels matching the labels of the pod template of the replication controller.",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ReplicationControllerCondition": {
      "required": [
        "type",
        "status"
      ],
      "description": "ReplicationControllerCondition describes the state of a replication controller at a certain point.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "lastTransitionTime": {
          "description": "The last time the condition transitioned from one status to another.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string",
          "description": "A human readable message indicating details about the transition."
        },
        "type": {
          "type": "string",
          "description": "Type of replication controller condition."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the condition's last transition."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.certificates.v1beta1.CertificateSigningRequest": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "CertificateSigningRequest",
          "Version": "v1beta1",
          "Group": "certificates.k8s.io"
        }
      ],
      "description": "Describes a certificate signing request",
      "properties": {
        "status": {
          "description": "Derived information about the request.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.certificates.v1beta1.CertificateSigningRequestStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "The certificate request itself and any additional information.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.certificates.v1beta1.CertificateSigningRequestSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.LocalResourceAccessReview": {
      "required": [
        "namespace",
        "verb",
        "resourceAPIGroup",
        "resourceAPIVersion",
        "resource",
        "resourceName",
        "path",
        "isNonResourceURL"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "LocalResourceAccessReview",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "LocalResourceAccessReview",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "LocalResourceAccessReview is a means to request a list of which users and groups are authorized to perform the action specified by spec in a particular namespace",
      "properties": {
        "content": {
          "description": "Content is the actual content of the request for create and update",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "resource": {
          "type": "string",
          "description": "Resource is one of the existing resource types"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "isNonResourceURL": {
          "type": "boolean",
          "description": "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)"
        },
        "resourceAPIVersion": {
          "type": "string",
          "description": "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined"
        },
        "verb": {
          "type": "string",
          "description": "Verb is one of: get, list, watch, create, update, delete"
        },
        "resourceAPIGroup": {
          "type": "string",
          "description": "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined"
        },
        "path": {
          "type": "string",
          "description": "Path is the path of a non resource URL"
        },
        "resourceName": {
          "type": "string",
          "description": "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\""
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1beta1.LocalSubjectAccessReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "LocalSubjectAccessReview",
          "Version": "v1beta1",
          "Group": "authorization.k8s.io"
        }
      ],
      "description": "LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.",
      "properties": {
        "status": {
          "description": "Status is filled in by the server and indicates whether the request is allowed or not",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1beta1.SubjectAccessReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1beta1.SubjectAccessReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.template.apis.template.v1.BrokerTemplateInstanceSpec": {
      "required": [
        "templateInstance",
        "secret"
      ],
      "description": "BrokerTemplateInstanceSpec describes the state of a BrokerTemplateInstance.",
      "properties": {
        "secret": {
          "description": "secret is a reference to a Secret object residing in a namespace, containing the necessary template parameters.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "bindingIDs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "bindingids is a list of 'binding_id's provided during successive bind calls to the template service broker."
        },
        "templateInstance": {
          "description": "templateinstance is a reference to a TemplateInstance object residing in a namespace.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.batch.v1.JobList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "JobList",
          "Version": "v1",
          "Group": "batch"
        }
      ],
      "description": "JobList is a collection of jobs.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.batch.v1.Job"
          },
          "type": "array",
          "description": "Items is the list of Job."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1.SelfSubjectAccessReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "SelfSubjectAccessReview",
          "Version": "v1",
          "Group": "authorization.k8s.io"
        }
      ],
      "description": "SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action",
      "properties": {
        "status": {
          "description": "Status is filled in by the server and indicates whether the request is allowed or not",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1.SubjectAccessReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec holds information about the request being evaluated.  user and groups must be empty",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1.SelfSubjectAccessReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.EventList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "EventList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "EventList is a list of events.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Event"
          },
          "type": "array",
          "description": "List of events"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.autoscaling.v1.ScaleSpec": {
      "description": "ScaleSpec describes the attributes of a scale subresource.",
      "properties": {
        "replicas": {
          "type": "integer",
          "description": "desired number of instances for the scaled object.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.user.apis.user.v1.IdentityList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "IdentityList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "IdentityList",
          "Version": "v1",
          "Group": "user.openshift.io"
        }
      ],
      "description": "IdentityList is a collection of Identities",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.user.apis.user.v1.Identity"
          },
          "type": "array",
          "description": "Items is the list of identities"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.NamedTagEventList": {
      "required": [
        "tag",
        "items"
      ],
      "description": "NamedTagEventList relates a tag to its image history.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.TagEvent"
          },
          "type": "array",
          "description": "Standard object's metadata."
        },
        "tag": {
          "type": "string",
          "description": "Tag is the tag for which the history is recorded"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.TagEventCondition"
          },
          "type": "array",
          "description": "Conditions is an array of conditions that apply to the tag event list."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NodeSelector": {
      "required": [
        "nodeSelectorTerms"
      ],
      "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
      "properties": {
        "nodeSelectorTerms": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NodeSelectorTerm"
          },
          "type": "array",
          "description": "Required. A list of node selector terms. The terms are ORed."
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentTriggerImageChangeParams": {
      "required": [
        "from"
      ],
      "description": "DeploymentTriggerImageChangeParams represents the parameters to the ImageChange trigger.",
      "properties": {
        "containerNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "ContainerNames is used to restrict tag updates to the specified set of container names in a pod. If multiple triggers point to the same containers, the resulting behavior is undefined. Future API versions will make this a validation error. If ContainerNames does not point to a valid container, the trigger will be ignored. Future API versions will make this a validation error."
        },
        "automatic": {
          "type": "boolean",
          "description": "Automatic means that the detection of a new tag value should result in an image update inside the pod template."
        },
        "lastTriggeredImage": {
          "type": "string",
          "description": "LastTriggeredImage is the last image to be triggered."
        },
        "from": {
          "description": "From is a reference to an image stream tag to watch for changes. From.Name is the only required subfield - if From.Namespace is blank, the namespace of the current deployment trigger will be used.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.CustomBuildStrategy": {
      "required": [
        "from"
      ],
      "description": "CustomBuildStrategy defines input parameters specific to Custom build.",
      "properties": {
        "exposeDockerSocket": {
          "type": "boolean",
          "description": "exposeDockerSocket will allow running Docker commands (and build Docker images) from inside the Docker container."
        },
        "from": {
          "description": "from is reference to an DockerImage, ImageStreamTag, or ImageStreamImage from which the docker image should be pulled",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "env": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EnvVar"
          },
          "type": "array",
          "description": "env contains additional environment variables you want to pass into a builder container."
        },
        "pullSecret": {
          "description": "pullSecret is the name of a Secret that would be used for setting up the authentication for pulling the Docker images from the private Docker registries",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "secrets": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.SecretSpec"
          },
          "type": "array",
          "description": "secrets is a list of additional secrets that will be included in the build pod"
        },
        "buildAPIVersion": {
          "type": "string",
          "description": "buildAPIVersion is the requested API version for the Build object serialized and passed to the custom builder"
        },
        "forcePull": {
          "type": "boolean",
          "description": "forcePull describes if the controller should configure the build pod to always pull the images for the builder or only pull if it is not present locally"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.DeprecatedDownwardAPIVolumeFile": {
      "required": [
        "name"
      ],
      "description": "DeprecatedDownwardAPIVolumeFile represents information to create the file containing the pod field This type is deprecated and should be replaced by use of the downwardAPI volume source.",
      "properties": {
        "fieldRef": {
          "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectFieldSelector"
        },
        "mode": {
          "type": "integer",
          "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "Required: Name is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
        },
        "resourceFieldRef": {
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceFieldSelector"
        }
      }
    },
    "com.github.openshift.origin.pkg.sdn.apis.network.v1.EgressNetworkPolicyPeer": {
      "description": "EgressNetworkPolicyPeer specifies a target to apply egress network policy to",
      "properties": {
        "cidrSelector": {
          "type": "string",
          "description": "cidrSelector is the CIDR range to allow/deny traffic to. If this is set, dnsName must be unset"
        },
        "dnsName": {
          "type": "string",
          "description": "dnsName is the domain name to allow/deny traffic to. If this is set, cidrSelector must be unset"
        }
      }
    },
    "com.github.openshift.origin.pkg.sdn.apis.network.v1.EgressNetworkPolicyList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "EgressNetworkPolicyList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "EgressNetworkPolicyList",
          "Version": "v1",
          "Group": "network.openshift.io"
        }
      ],
      "description": "EgressNetworkPolicyList is a collection of EgressNetworkPolicy",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.sdn.apis.network.v1.EgressNetworkPolicy"
          },
          "type": "array",
          "description": "items is the list of policies"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "metadata for EgressNetworkPolicyList",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.StageInfo": {
      "description": "StageInfo contains details about a build stage.",
      "properties": {
        "durationMilliseconds": {
          "type": "integer",
          "description": "durationMilliseconds identifies how long the stage took to complete in milliseconds. Note: the duration of a stage can exceed the sum of the duration of the steps within the stage as not all actions are accounted for in explicit build steps.",
          "format": "int64"
        },
        "steps": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.StepInfo"
          },
          "type": "array",
          "description": "steps contains details about each step that occurs during a build stage including start time and duration in milliseconds."
        },
        "name": {
          "type": "string",
          "description": "name is a unique identifier for each build stage that occurs."
        },
        "startTime": {
          "description": "startTime is a timestamp representing the server time when this Stage started. It is represented in RFC3339 form and is in UTC.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "com.github.openshift.origin.pkg.user.apis.user.v1.UserIdentityMapping": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "UserIdentityMapping",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "UserIdentityMapping",
          "Version": "v1",
          "Group": "user.openshift.io"
        }
      ],
      "description": "UserIdentityMapping maps a user to an identity",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "user": {
          "description": "User is a reference to a user",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "identity": {
          "description": "Identity is a reference to an identity",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NodeSpec": {
      "description": "NodeSpec describes the attributes that a node is created with.",
      "properties": {
        "podCIDR": {
          "type": "string",
          "description": "PodCIDR represents the pod IP range assigned to the node."
        },
        "unschedulable": {
          "type": "boolean",
          "description": "Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: http://releases.k8s.io/HEAD/docs/admin/node.md#manual-node-administration"
        },
        "providerID": {
          "type": "string",
          "description": "ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>"
        },
        "externalID": {
          "type": "string",
          "description": "External ID of the node assigned by some machine database (e.g. a cloud provider). Deprecated."
        },
        "taints": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Taint"
          },
          "type": "array",
          "description": "If specified, the node's taints."
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.SignatureCondition": {
      "required": [
        "type",
        "status"
      ],
      "description": "SignatureCondition describes an image signature condition of particular kind at particular probe time.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "reason": {
          "type": "string",
          "description": "(brief) reason for the condition's last transition."
        },
        "lastProbeTime": {
          "description": "Last time the condition was checked.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "type": {
          "type": "string",
          "description": "Type of signature condition, Complete or Failed."
        },
        "message": {
          "type": "string",
          "description": "Human readable message indicating details about last transition."
        },
        "lastTransitionTime": {
          "description": "Last time the condition transit from one status to another.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ContainerStateTerminated": {
      "required": [
        "exitCode"
      ],
      "description": "ContainerStateTerminated is a terminated state of a container.",
      "properties": {
        "reason": {
          "type": "string",
          "description": "(brief) reason from the last termination of the container"
        },
        "finishedAt": {
          "description": "Time at which the container last terminated",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "containerID": {
          "type": "string",
          "description": "Container's ID in the format 'docker://<container_id>'"
        },
        "startedAt": {
          "description": "Time at which previous execution of the container started",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "signal": {
          "type": "integer",
          "description": "Signal from the last termination of the container",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "Message regarding the last termination of the container"
        },
        "exitCode": {
          "type": "integer",
          "description": "Exit status from the last termination of the container",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NodeSelectorRequirement": {
      "required": [
        "key",
        "operator"
      ],
      "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "properties": {
        "operator": {
          "type": "string",
          "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch."
        },
        "key": {
          "type": "string",
          "description": "The label key that the selector applies to."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.GitSourceRevision": {
      "description": "GitSourceRevision is the commit information from a git source for a build",
      "properties": {
        "commit": {
          "type": "string",
          "description": "commit is the commit hash identifying a specific commit"
        },
        "message": {
          "type": "string",
          "description": "message is the description of a specific commit"
        },
        "author": {
          "description": "author is the author of a specific commit",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.SourceControlUser"
        },
        "committer": {
          "description": "committer is the committer of a specific commit",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.SourceControlUser"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.PodSecurityPolicySpec": {
      "required": [
        "seLinux",
        "runAsUser",
        "supplementalGroups",
        "fsGroup"
      ],
      "description": "Pod Security Policy Spec defines the policy enforced.",
      "properties": {
        "allowedCapabilities": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities."
        },
        "hostPorts": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HostPortRange"
          },
          "type": "array",
          "description": "hostPorts determines which host port ranges are allowed to be exposed."
        },
        "supplementalGroups": {
          "description": "SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.SupplementalGroupsStrategyOptions"
        },
        "fsGroup": {
          "description": "FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.FSGroupStrategyOptions"
        },
        "hostIPC": {
          "type": "boolean",
          "description": "hostIPC determines if the policy allows the use of HostIPC in the pod spec."
        },
        "hostNetwork": {
          "type": "boolean",
          "description": "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec."
        },
        "runAsUser": {
          "description": "runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.RunAsUserStrategyOptions"
        },
        "volumes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "volumes is a white list of allowed volume plugins.  Empty indicates that all plugins may be used."
        },
        "seLinux": {
          "description": "seLinux is the strategy that will dictate the allowable labels that may be set.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.SELinuxStrategyOptions"
        },
        "defaultAddCapabilities": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities."
        },
        "requiredDropCapabilities": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added."
        },
        "readOnlyRootFilesystem": {
          "type": "boolean",
          "description": "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to."
        },
        "privileged": {
          "type": "boolean",
          "description": "privileged determines if a pod can request to be run as privileged."
        },
        "hostPID": {
          "type": "boolean",
          "description": "hostPID determines if the policy allows the use of HostPID in the pod spec."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DeploymentCondition": {
      "required": [
        "type",
        "status"
      ],
      "description": "DeploymentCondition describes the state of a deployment at a certain point.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the condition's last transition."
        },
        "lastUpdateTime": {
          "description": "The last time this condition was updated.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "type": {
          "type": "string",
          "description": "Type of deployment condition."
        },
        "message": {
          "type": "string",
          "description": "A human readable message indicating details about the transition."
        },
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.DownwardAPIVolumeFile": {
      "required": [
        "path"
      ],
      "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
      "properties": {
        "path": {
          "type": "string",
          "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
        },
        "fieldRef": {
          "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectFieldSelector"
        },
        "mode": {
          "type": "integer",
          "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32"
        },
        "resourceFieldRef": {
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceFieldSelector"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PreferredSchedulingTerm": {
      "required": [
        "weight",
        "preference"
      ],
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
      "properties": {
        "preference": {
          "description": "A node selector term, associated with the corresponding weight.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NodeSelectorTerm"
        },
        "weight": {
          "type": "integer",
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IngressRule": {
      "description": "IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.",
      "properties": {
        "host": {
          "type": "string",
          "description": "Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the\n\t  IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue."
        },
        "http": {
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HTTPIngressRuleValue"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.GlusterfsVolumeSource": {
      "required": [
        "endpoints",
        "path"
      ],
      "description": "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path is the Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
        },
        "readOnly": {
          "type": "boolean",
          "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
        },
        "endpoints": {
          "type": "string",
          "description": "EndpointsName is the endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.SubjectRulesReviewSpec": {
      "required": [
        "user",
        "groups",
        "scopes"
      ],
      "description": "SubjectRulesReviewSpec adds information about how to conduct the check",
      "properties": {
        "scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\"."
        },
        "user": {
          "type": "string",
          "description": "User is optional.  At least one of User and Groups must be specified."
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Groups is optional.  Groups is the list of groups to which the User belongs.  At least one of User and Groups must be specified."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.EndpointPort": {
      "required": [
        "port"
      ],
      "description": "EndpointPort is a tuple that describes a single port.",
      "properties": {
        "protocol": {
          "type": "string",
          "description": "The IP protocol for this port. Must be UDP or TCP. Default is TCP."
        },
        "name": {
          "type": "string",
          "description": "The name of this port (corresponds to ServicePort.Name). Must be a DNS_LABEL. Optional only if one port is defined."
        },
        "port": {
          "type": "integer",
          "description": "The port number of the endpoint.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.user.apis.user.v1.UserList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "UserList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "UserList",
          "Version": "v1",
          "Group": "user.openshift.io"
        }
      ],
      "description": "UserList is a collection of Users",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.user.apis.user.v1.User"
          },
          "type": "array",
          "description": "Items is the list of users"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DaemonSetUpdateStrategy": {
      "properties": {
        "rollingUpdate": {
          "description": "Rolling update config params. Present only if type = \"RollingUpdate\".",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.RollingUpdateDaemonSet"
        },
        "type": {
          "type": "string",
          "description": "Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is OnDelete."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.ImageChangeTrigger": {
      "description": "ImageChangeTrigger allows builds to be triggered when an ImageStream changes",
      "properties": {
        "lastTriggeredImageID": {
          "type": "string",
          "description": "lastTriggeredImageID is used internally by the ImageChangeController to save last used image ID for build"
        },
        "from": {
          "description": "from is a reference to an ImageStreamTag that will trigger a build when updated It is optional. If no From is specified, the From image from the build strategy will be used. Only one ImageChangeTrigger with an empty From reference is allowed in a build configuration.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.RollbackConfig": {
      "properties": {
        "revision": {
          "type": "integer",
          "description": "The revision to rollback to. If set to 0, rollbck to the last revision.",
          "format": "int64"
        }
      }
    },
    "com.github.openshift.origin.pkg.template.apis.template.v1.TemplateInstanceCondition": {
      "required": [
        "type",
        "status",
        "lastTransitionTime",
        "reason",
        "message"
      ],
      "description": "TemplateInstanceCondition contains condition information for a TemplateInstance.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False or Unknown."
        },
        "lastTransitionTime": {
          "description": "LastTransitionTime is the last time a condition status transitioned from one state to another.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string",
          "description": "Message is a human readable description of the details of the last transition, complementing reason."
        },
        "type": {
          "type": "string",
          "description": "Type of the condition, currently Ready or InstantiateFailure."
        },
        "reason": {
          "type": "string",
          "description": "Reason is a brief machine readable explanation for the condition's last transition."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.PodSecurityPolicyList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PodSecurityPolicyList",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "Pod Security Policy List is a list of PodSecurityPolicy objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.PodSecurityPolicy"
          },
          "type": "array",
          "description": "Items is a list of schema objects."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageSignature": {
      "required": [
        "type",
        "content"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ImageSignature",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ImageSignature",
          "Version": "v1",
          "Group": "image.openshift.io"
        }
      ],
      "description": "ImageSignature holds a signature of an image. It allows to verify image identity and possibly other claims as long as the signature is trusted. Based on this information it is possible to restrict runnable images to those matching cluster-wide policy. Mandatory fields should be parsed by clients doing image verification. The others are parsed from signature's content by the server. They serve just an informative purpose.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "issuedBy": {
          "description": "If specified, it holds information about an issuer of signing certificate or key (a person or entity who signed the signing certificate or key).",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.SignatureIssuer"
        },
        "created": {
          "description": "If specified, it is the time of signature's creation.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "issuedTo": {
          "description": "If specified, it holds information about a subject of signing certificate or key (a person or entity who signed the image).",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.SignatureSubject"
        },
        "imageIdentity": {
          "type": "string",
          "description": "A human readable string representing image's identity. It could be a product name and version, or an image pull spec (e.g. \"registry.access.redhat.com/rhel7/rhel:7.2\")."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "content": {
          "type": "string",
          "description": "Required: An opaque binary string which is an image's signature.",
          "format": "byte"
        },
        "type": {
          "type": "string",
          "description": "Required: Describes a type of stored blob."
        },
        "signedClaims": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Contains claims from the signature."
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.SignatureCondition"
          },
          "type": "array",
          "description": "Conditions represent the latest available observations of a signature's current state."
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.StatefulSet": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "StatefulSet",
          "Version": "v1beta1",
          "Group": "apps"
        }
      ],
      "description": "StatefulSet represents a set of pods with consistent identities. Identities are defined as:\n - Network: A single stable DNS and hostname.\n - Storage: As many VolumeClaims as requested.\nThe StatefulSet guarantees that a given network identity will always map to the same storage identity.",
      "properties": {
        "status": {
          "description": "Status is the current status of Pods in this StatefulSet. This data may be out of date by some window of time.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.StatefulSetStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the desired identities of pods in this set.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.StatefulSetSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1beta1",
          "Group": "apps"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "apps.openshift.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "authentication.k8s.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1beta1",
          "Group": "authentication.k8s.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "authorization.k8s.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1beta1",
          "Group": "authorization.k8s.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "autoscaling"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v2alpha1",
          "Group": "autoscaling"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "batch"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v2alpha1",
          "Group": "batch"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "build.openshift.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1beta1",
          "Group": "certificates.k8s.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1beta1",
          "Group": "extensions"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1beta1",
          "Group": "federation"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "image.openshift.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1alpha1",
          "Group": "imagepolicy.k8s.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "network.openshift.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "oauth.openshift.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1beta1",
          "Group": "policy"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "project.openshift.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "quota.openshift.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1alpha1",
          "Group": "rbac.authorization.k8s.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1beta1",
          "Group": "rbac.authorization.k8s.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "route.openshift.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "security.openshift.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1alpha1",
          "Group": "settings.k8s.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "storage.k8s.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1beta1",
          "Group": "storage.k8s.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "template.openshift.io"
        },
        {
          "Kind": "DeleteOptions",
          "Version": "v1",
          "Group": "user.openshift.io"
        }
      ],
      "description": "DeleteOptions may be provided when deleting an API object.",
      "properties": {
        "gracePeriodSeconds": {
          "type": "integer",
          "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "format": "int64"
        },
        "propagationPolicy": {
          "type": "string",
          "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "preconditions": {
          "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"
        },
        "orphanDependents": {
          "type": "boolean",
          "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentStrategy": {
      "description": "DeploymentStrategy describes how to perform a deployment.",
      "properties": {
        "customParams": {
          "description": "CustomParams are the input to the Custom deployment strategy, and may also be specified for the Recreate and Rolling strategies to customize the execution process that runs the deployment.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.CustomDeploymentStrategyParams"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods."
        },
        "activeDeadlineSeconds": {
          "type": "integer",
          "description": "ActiveDeadlineSeconds is the duration in seconds that the deployer pods for this deployment config may be active on a node before the system actively tries to terminate them.",
          "format": "int64"
        },
        "rollingParams": {
          "description": "RollingParams are the input to the Rolling deployment strategy.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.RollingDeploymentStrategyParams"
        },
        "recreateParams": {
          "description": "RecreateParams are the input to the Recreate deployment strategy.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.RecreateDeploymentStrategyParams"
        },
        "type": {
          "type": "string",
          "description": "Type is the name of a deployment strategy."
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Annotations is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods."
        },
        "resources": {
          "description": "Resources contains resource requirements to execute the deployment and any hooks.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceRequirements"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ContainerStateWaiting": {
      "description": "ContainerStateWaiting is a waiting state of a container.",
      "properties": {
        "message": {
          "type": "string",
          "description": "Message regarding why the container is not yet running."
        },
        "reason": {
          "type": "string",
          "description": "(brief) reason the container is not yet running."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ConfigMapProjection": {
      "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.KeyToPath"
          },
          "type": "array",
          "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
        },
        "optional": {
          "type": "boolean",
          "description": "Specify whether the ConfigMap or it's keys must be defined"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.DeprecatedDownwardAPIVolumeSource": {
      "description": "DeprecatedDownwardAPIVolumeSource represents a volume containing downward API info. This type is deprecated and should be replaced by use of the downwardAPI volume source.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.DeprecatedDownwardAPIVolumeFile"
          },
          "type": "array",
          "description": "Items is a list of downward API volume file"
        },
        "defaultMode": {
          "type": "integer",
          "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.DownwardAPIProjection": {
      "description": "Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.DownwardAPIVolumeFile"
          },
          "type": "array",
          "description": "Items is a list of DownwardAPIVolume file"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.EnvFromSource": {
      "description": "EnvFromSource represents the source of a set of ConfigMaps",
      "properties": {
        "prefix": {
          "type": "string",
          "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
        },
        "configMapRef": {
          "description": "The ConfigMap to select from",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ConfigMapEnvSource"
        },
        "secretRef": {
          "description": "The Secret to select from",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.SecretEnvSource"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.EnvVarSource": {
      "description": "EnvVarSource represents a source for the value of an EnvVar.",
      "properties": {
        "secretKeyRef": {
          "description": "Selects a key of a secret in the pod's namespace",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.SecretKeySelector"
        },
        "fieldRef": {
          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectFieldSelector"
        },
        "configMapKeyRef": {
          "description": "Selects a key of a ConfigMap.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ConfigMapKeySelector"
        },
        "resourceFieldRef": {
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceFieldSelector"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.autoscaling.v1.HorizontalPodAutoscaler": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "HorizontalPodAutoscaler",
          "Version": "v1",
          "Group": "autoscaling"
        }
      ],
      "description": "configuration of a horizontal pod autoscaler.",
      "properties": {
        "status": {
          "description": "current information about the autoscaler.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.autoscaling.v1.HorizontalPodAutoscalerStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "behaviour of autoscaler. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.autoscaling.v1.HorizontalPodAutoscalerSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.quota.apis.quota.v1.ClusterResourceQuotaList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterResourceQuotaList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ClusterResourceQuotaList",
          "Version": "v1",
          "Group": "quota.openshift.io"
        }
      ],
      "description": "ClusterResourceQuotaList is a collection of ClusterResourceQuotas",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.quota.apis.quota.v1.ClusterResourceQuota"
          },
          "type": "array",
          "description": "Items is a list of ClusterResourceQuotas"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList": {
      "required": [
        "groupVersion",
        "resources"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "APIResourceList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "groupVersion": {
          "type": "string",
          "description": "groupVersion is the group and version this APIResourceList is for."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "resources": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource"
          },
          "type": "array",
          "description": "resources contains the name of the resources and if they are namespaced."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.NetworkPolicyPort": {
      "properties": {
        "protocol": {
          "type": "string",
          "description": "Optional.  The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP."
        },
        "port": {
          "description": "If specified, the port on the given protocol.  This can either be a numerical or named port on a pod.  If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ReplicationControllerList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ReplicationControllerList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "ReplicationControllerList is a collection of replication controllers.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ReplicationController"
          },
          "type": "array",
          "description": "List of replication controllers. More info: http://kubernetes.io/docs/user-guide/replication-controller"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.quota.apis.quota.v1.ClusterResourceQuotaStatus": {
      "required": [
        "total",
        "namespaces"
      ],
      "description": "ClusterResourceQuotaStatus defines the actual enforced quota and its current usage",
      "properties": {
        "total": {
          "description": "Total defines the actual enforced quota and its current usage across all projects",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceQuotaStatus"
        },
        "namespaces": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.quota.apis.quota.v1.ResourceQuotaStatusByNamespace"
          },
          "type": "array",
          "description": "Namespaces slices the usage by project.  This division allows for quick resolution of deletion reconciliation inside of a single project without requiring a recalculation across all projects.  This can be used to pull the deltas for a given project."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Lifecycle": {
      "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
      "properties": {
        "preStop": {
          "description": "PreStop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Handler"
        },
        "postStart": {
          "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Handler"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterPolicyBindingList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterPolicyBindingList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ClusterPolicyBindingList",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "ClusterPolicyBindingList is a collection of ClusterPolicyBindings",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterPolicyBinding"
          },
          "type": "array",
          "description": "Items is a list of ClusterPolicyBindings"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildStrategy": {
      "required": [
        "type"
      ],
      "description": "BuildStrategy contains the details of how to perform a build.",
      "properties": {
        "customStrategy": {
          "description": "customStrategy holds the parameters to the Custom build strategy",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.CustomBuildStrategy"
        },
        "sourceStrategy": {
          "description": "sourceStrategy holds the parameters to the Source build strategy.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.SourceBuildStrategy"
        },
        "jenkinsPipelineStrategy": {
          "description": "JenkinsPipelineStrategy holds the parameters to the Jenkins Pipeline build strategy. This strategy is in tech preview.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.JenkinsPipelineBuildStrategy"
        },
        "dockerStrategy": {
          "description": "dockerStrategy holds the parameters to the Docker build strategy.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.DockerBuildStrategy"
        },
        "type": {
          "type": "string",
          "description": "type is the kind of build strategy."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authentication.v1.TokenReviewSpec": {
      "description": "TokenReviewSpec is a description of the token authentication request.",
      "properties": {
        "token": {
          "type": "string",
          "description": "Token is the opaque bearer token."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.ScaleSpec": {
      "description": "ScaleSpec describes the attributes of a scale subresource",
      "properties": {
        "replicas": {
          "type": "integer",
          "description": "desired number of instances for the scaled object.",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DaemonSet": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "DaemonSet",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "DaemonSet represents the configuration of a daemon set.",
      "properties": {
        "status": {
          "description": "The current status of this daemon set. This data may be out of date by some window of time. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DaemonSetStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "The desired behavior of this daemon set. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DaemonSetSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.project.apis.project.v1.ProjectRequest": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ProjectRequest",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ProjectRequest",
          "Version": "v1",
          "Group": "project.openshift.io"
        }
      ],
      "description": "ProjecRequest is the set of options necessary to fully qualify a project request",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "displayName": {
          "type": "string",
          "description": "DisplayName is the display name to apply to a project"
        },
        "description": {
          "type": "string",
          "description": "Description is the description to apply to a project"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildPostCommitSpec": {
      "description": "A BuildPostCommitSpec holds a build post commit hook specification. The hook executes a command in a temporary container running the build output image, immediately after the last layer of the image is committed and before the image is pushed to a registry. The command is executed with the current working directory ($PWD) set to the image's WORKDIR.\n\nThe build will be marked as failed if the hook execution fails. It will fail if the script or command return a non-zero exit code, or if there is any other error related to starting the temporary container.\n\nThere are five different ways to configure the hook. As an example, all forms below are equivalent and will execute `rake test --verbose`.\n\n1. Shell script:\n\n       \"postCommit\": {\n         \"script\": \"rake test --verbose\",\n       }\n\n    The above is a convenient form which is equivalent to:\n\n       \"postCommit\": {\n         \"command\": [\"/bin/sh\", \"-ic\"],\n         \"args\":    [\"rake test --verbose\"]\n       }\n\n2. A command as the image entrypoint:\n\n       \"postCommit\": {\n         \"commit\": [\"rake\", \"test\", \"--verbose\"]\n       }\n\n    Command overrides the image entrypoint in the exec form, as documented in\n    Docker: https://docs.docker.com/engine/reference/builder/#entrypoint.\n\n3. Pass arguments to the default entrypoint:\n\n       \"postCommit\": {\n\t\t      \"args\": [\"rake\", \"test\", \"--verbose\"]\n\t      }\n\n    This form is only useful if the image entrypoint can handle arguments.\n\n4. Shell script with arguments:\n\n       \"postCommit\": {\n         \"script\": \"rake test $1\",\n         \"args\":   [\"--verbose\"]\n       }\n\n    This form is useful if you need to pass arguments that would otherwise be\n    hard to quote properly in the shell script. In the script, $0 will be\n    \"/bin/sh\" and $1, $2, etc, are the positional arguments from Args.\n\n5. Command with arguments:\n\n       \"postCommit\": {\n         \"command\": [\"rake\", \"test\"],\n         \"args\":    [\"--verbose\"]\n       }\n\n    This form is equivalent to appending the arguments to the Command slice.\n\nIt is invalid to provide both Script and Command simultaneously. If none of the fields are specified, the hook is not executed.",
      "properties": {
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "args is a list of arguments that are provided to either Command, Script or the Docker image's default entrypoint. The arguments are placed immediately after the command to be run."
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "command is the command to run. It may not be specified with Script. This might be needed if the image doesn't have `/bin/sh`, or if you do not want to use a shell. In all other cases, using Script might be more convenient."
        },
        "script": {
          "type": "string",
          "description": "script is a shell script to be run with `/bin/sh -ic`. It may not be specified with Command. Use Script when a shell script is appropriate to execute the post build hook, for example for running unit tests with `rake test`. If you need control over the image entrypoint, or if the image does not have `/bin/sh`, use Command and/or Args. The `-i` flag is needed to support CentOS and RHEL images that use Software Collections (SCL), in order to have the appropriate collections enabled in the shell. E.g., in the Ruby image, this is necessary to make `ruby`, `bundle` and other binaries available in the PATH."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.policy.v1beta1.PodDisruptionBudgetSpec": {
      "description": "PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.",
      "properties": {
        "minAvailable": {
          "description": "An eviction is allowed if at least \"minAvailable\" pods selected by \"selector\" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying \"100%\".",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "selector": {
          "description": "Label query over pods whose evictions are managed by the disruption budget.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NFSVolumeSource": {
      "required": [
        "server",
        "path"
      ],
      "description": "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
        },
        "readOnly": {
          "type": "boolean",
          "description": "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
        },
        "server": {
          "type": "string",
          "description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "properties": {
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
        },
        "resourceVersion": {
          "type": "string",
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ReplicaSetList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ReplicaSetList",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "ReplicaSetList is a collection of ReplicaSets.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ReplicaSet"
          },
          "type": "array",
          "description": "List of ReplicaSets. More info: http://kubernetes.io/docs/user-guide/replication-controller"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.SecretKeySelector": {
      "required": [
        "key"
      ],
      "description": "SecretKeySelector selects a key of a Secret.",
      "properties": {
        "optional": {
          "type": "boolean",
          "description": "Specify whether the Secret or it's key must be defined"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "key": {
          "type": "string",
          "description": "The key of the secret to select from.  Must be a valid secret key."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NamespaceSpec": {
      "description": "NamespaceSpec describes the attributes on a Namespace.",
      "properties": {
        "finalizers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: http://releases.k8s.io/HEAD/docs/design/namespaces.md#finalizers"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.rbac.v1beta1.RoleBindingList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "RoleBindingList",
          "Version": "v1beta1",
          "Group": "rbac.authorization.k8s.io"
        }
      ],
      "description": "RoleBindingList is a collection of RoleBindings",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.rbac.v1beta1.RoleBinding"
          },
          "type": "array",
          "description": "Items is a list of RoleBindings"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.batch.v2alpha1.CronJob": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "CronJob",
          "Version": "v2alpha1",
          "Group": "batch"
        },
        {
          "Kind": "ScheduledJob",
          "Version": "v2alpha1",
          "Group": "batch"
        }
      ],
      "description": "CronJob represents the configuration of a single cron job.",
      "properties": {
        "status": {
          "description": "Status is a structure describing current status of a job. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.batch.v2alpha1.CronJobStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec is a structure defining the expected behavior of a job, including the schedule. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.batch.v2alpha1.CronJobSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Status",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "Status is a return value for calls that don't return other objects.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "code": {
          "type": "integer",
          "description": "Suggested HTTP return code for this status, 0 if not set.",
          "format": "int32"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "reason": {
          "type": "string",
          "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it."
        },
        "details": {
          "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"
        },
        "message": {
          "type": "string",
          "description": "A human-readable description of the status of this operation."
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.oauth.apis.oauth.v1.OAuthAuthorizeTokenList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "OAuthAuthorizeTokenList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "OAuthAuthorizeTokenList",
          "Version": "v1",
          "Group": "oauth.openshift.io"
        }
      ],
      "description": "OAuthAuthorizeTokenList is a collection of OAuth authorization tokens",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.oauth.apis.oauth.v1.OAuthAuthorizeToken"
          },
          "type": "array",
          "description": "Items is the list of OAuth authorization tokens"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.VolumeProjection": {
      "description": "Projection that may be projected along with other supported volume types",
      "properties": {
        "configMap": {
          "description": "information about the configMap data to project",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ConfigMapProjection"
        },
        "secret": {
          "description": "information about the secret data to project",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.SecretProjection"
        },
        "downwardAPI": {
          "description": "information about the downwardAPI data to project",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.DownwardAPIProjection"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.policy.v1beta1.Eviction": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Eviction",
          "Version": "v1beta1",
          "Group": "policy"
        }
      ],
      "description": "Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions.",
      "properties": {
        "deleteOptions": {
          "description": "DeleteOptions may be provided",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "ObjectMeta describes the pod that is being evicted.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.NamedClusterRole": {
      "required": [
        "name",
        "role"
      ],
      "description": "NamedClusterRole relates a name with a cluster role",
      "properties": {
        "role": {
          "description": "Role is the cluster role being named",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterRole"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of the cluster role"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ContainerPort": {
      "required": [
        "containerPort"
      ],
      "description": "ContainerPort represents a network port in a single container.",
      "properties": {
        "hostIP": {
          "type": "string",
          "description": "What host IP to bind the external port to."
        },
        "protocol": {
          "type": "string",
          "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\"."
        },
        "containerPort": {
          "type": "integer",
          "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services."
        },
        "hostPort": {
          "type": "integer",
          "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.TCPSocketAction": {
      "required": [
        "port"
      ],
      "description": "TCPSocketAction describes an action based on opening a socket",
      "properties": {
        "port": {
          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IngressBackend": {
      "required": [
        "serviceName",
        "servicePort"
      ],
      "description": "IngressBackend describes all endpoints for a given service and port.",
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "Specifies the name of the referenced service."
        },
        "servicePort": {
          "description": "Specifies the port of the referenced service.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.SubresourceReference": {
      "description": "SubresourceReference contains enough information to let you inspect or modify the referred subresource.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind of the referent; More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent"
        },
        "subresource": {
          "type": "string",
          "description": "Subresource name of the referent"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentCondition": {
      "required": [
        "type",
        "status"
      ],
      "description": "DeploymentCondition describes the state of a deployment config at a certain point.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the condition's last transition."
        },
        "lastUpdateTime": {
          "description": "The last time this condition was updated.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "type": {
          "type": "string",
          "description": "Type of deployment condition."
        },
        "message": {
          "type": "string",
          "description": "A human readable message indicating details about the transition."
        },
        "lastTransitionTime": {
          "description": "The last time the condition transitioned from one status to another.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Toleration": {
      "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
      "properties": {
        "operator": {
          "type": "string",
          "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category."
        },
        "key": {
          "type": "string",
          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys."
        },
        "tolerationSeconds": {
          "type": "integer",
          "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
          "format": "int64"
        },
        "effect": {
          "type": "string",
          "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute."
        },
        "value": {
          "type": "string",
          "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.ImageLabel": {
      "required": [
        "name"
      ],
      "description": "ImageLabel represents a label applied to the resulting image.",
      "properties": {
        "name": {
          "type": "string",
          "description": "name defines the name of the label. It must have non-zero length."
        },
        "value": {
          "type": "string",
          "description": "value defines the literal value of the label."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NamespaceList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "NamespaceList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "NamespaceList is a list of Namespaces.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Namespace"
          },
          "type": "array",
          "description": "Items is the list of Namespace objects in the list. More info: http://kubernetes.io/docs/user-guide/namespaces"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.SubjectAccessReview": {
      "required": [
        "namespace",
        "verb",
        "resourceAPIGroup",
        "resourceAPIVersion",
        "resource",
        "resourceName",
        "path",
        "isNonResourceURL",
        "user",
        "groups",
        "scopes"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "SubjectAccessReview",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "SubjectAccessReview",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "SubjectAccessReview is an object for requesting information about whether a user or group can perform an action",
      "properties": {
        "scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\". Nil for a self-SAR, means \"use the scopes on this request\". Nil for a regular SAR, means the same as empty."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "resource": {
          "type": "string",
          "description": "Resource is one of the existing resource types"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "isNonResourceURL": {
          "type": "boolean",
          "description": "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)"
        },
        "resourceAPIVersion": {
          "type": "string",
          "description": "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined"
        },
        "verb": {
          "type": "string",
          "description": "Verb is one of: get, list, watch, create, update, delete"
        },
        "resourceAPIGroup": {
          "type": "string",
          "description": "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined"
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "GroupsSlice is optional. Groups is the list of groups to which the User belongs."
        },
        "path": {
          "type": "string",
          "description": "Path is the path of a non resource URL"
        },
        "resourceName": {
          "type": "string",
          "description": "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\""
        },
        "content": {
          "description": "Content is the actual content of the request for create and update",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "user": {
          "type": "string",
          "description": "User is optional. If both User and Groups are empty, the current authenticated user is used."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1beta1.ResourceAttributes": {
      "description": "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface",
      "properties": {
        "verb": {
          "type": "string",
          "description": "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all."
        },
        "resource": {
          "type": "string",
          "description": "Resource is one of the existing resource types.  \"*\" means all."
        },
        "name": {
          "type": "string",
          "description": "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all."
        },
        "version": {
          "type": "string",
          "description": "Version is the API Version of the Resource.  \"*\" means all."
        },
        "group": {
          "type": "string",
          "description": "Group is the API Group of the Resource.  \"*\" means all."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview"
        },
        "subresource": {
          "type": "string",
          "description": "Subresource is one of the existing resource types.  \"\" means none."
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamTag": {
      "required": [
        "tag",
        "generation",
        "lookupPolicy",
        "image"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ImageStreamTag",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ImageStreamTag",
          "Version": "v1",
          "Group": "image.openshift.io"
        }
      ],
      "description": "ImageStreamTag represents an Image that is retrieved by tag name from an ImageStream.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "generation": {
          "type": "integer",
          "description": "generation is the current generation of the tagged image - if tag is provided and this value is not equal to the tag generation, a user has requested an import that has not completed, or conditions will be filled out indicating any error.",
          "format": "int64"
        },
        "image": {
          "description": "image associated with the ImageStream and tag.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.Image"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "tag": {
          "description": "tag is the spec tag associated with this image stream tag, and it may be null if only pushes have occurred to this image stream.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.TagReference"
        },
        "lookupPolicy": {
          "description": "lookupPolicy indicates whether this tag will handle image references in this namespace.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageLookupPolicy"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.TagEventCondition"
          },
          "type": "array",
          "description": "conditions is an array of conditions that apply to the image stream tag."
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.policy.v1beta1.PodDisruptionBudgetList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PodDisruptionBudgetList",
          "Version": "v1beta1",
          "Group": "policy"
        }
      ],
      "description": "PodDisruptionBudgetList is a collection of PodDisruptionBudgets.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.policy.v1beta1.PodDisruptionBudget"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.certificates.v1beta1.CertificateSigningRequestStatus": {
      "properties": {
        "conditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.certificates.v1beta1.CertificateSigningRequestCondition"
          },
          "type": "array",
          "description": "Conditions applied to the request, such as approval or denial."
        },
        "certificate": {
          "type": "string",
          "description": "If request was approved, the controller will place the issued certificate here.",
          "format": "byte"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Service": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Service",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.",
      "properties": {
        "status": {
          "description": "Most recently observed status of the service. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ServiceStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the behavior of a service. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ServiceSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.TagImportPolicy": {
      "description": "TagImportPolicy controls how images related to this tag will be imported.",
      "properties": {
        "scheduled": {
          "type": "boolean",
          "description": "Scheduled indicates to the server that this tag should be periodically checked to ensure it is up to date, and imported"
        },
        "insecure": {
          "type": "boolean",
          "description": "Insecure is true if the server may bypass certificate verification or connect directly over HTTP during image import."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IngressTLS": {
      "description": "IngressTLS describes the transport layer security associated with an Ingress.",
      "properties": {
        "hosts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified."
        },
        "secretName": {
          "type": "string",
          "description": "SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PortworxVolumeSource": {
      "required": [
        "volumeID"
      ],
      "description": "PortworxVolumeSource represents a Portworx volume resource.",
      "properties": {
        "readOnly": {
          "type": "boolean",
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
        },
        "volumeID": {
          "type": "string",
          "description": "VolumeID uniquely identifies a Portworx volume"
        },
        "fsType": {
          "type": "string",
          "description": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.GenericWebHookCause": {
      "description": "GenericWebHookCause holds information about a generic WebHook that triggered a build.",
      "properties": {
        "secret": {
          "type": "string",
          "description": "secret is the obfuscated webhook secret that triggered a build."
        },
        "revision": {
          "description": "revision is an optional field that stores the git source revision information of the generic webhook trigger when it is available.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.SourceRevision"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.rbac.v1beta1.ClusterRoleBinding": {
      "required": [
        "subjects",
        "roleRef"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterRoleBinding",
          "Version": "v1beta1",
          "Group": "rbac.authorization.k8s.io"
        }
      ],
      "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
      "properties": {
        "roleRef": {
          "description": "RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.rbac.v1beta1.RoleRef"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "subjects": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.rbac.v1beta1.Subject"
          },
          "type": "array",
          "description": "Subjects holds references to the objects the role applies to."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildStatus": {
      "required": [
        "phase"
      ],
      "description": "BuildStatus contains the status of a build",
      "properties": {
        "completionTimestamp": {
          "description": "completionTimestamp is a timestamp representing the server time when this Build was finished, whether that build failed or succeeded.  It reflects the time at which the Pod running the Build terminated. It is represented in RFC3339 form and is in UTC.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "logSnippet": {
          "type": "string",
          "description": "logSnippet is the last few lines of the build log.  This value is only set for builds that failed."
        },
        "startTimestamp": {
          "description": "startTimestamp is a timestamp representing the server time when this Build started running in a Pod. It is represented in RFC3339 form and is in UTC.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "outputDockerImageReference": {
          "type": "string",
          "description": "outputDockerImageReference contains a reference to the Docker image that will be built by this build. Its value is computed from Build.Spec.Output.To, and should include the registry address, so that it can be used to push and pull the image."
        },
        "phase": {
          "type": "string",
          "description": "phase is the point in the build lifecycle. Possible values are \"New\", \"Pending\", \"Running\", \"Complete\", \"Failed\", \"Error\", and \"Cancelled\"."
        },
        "reason": {
          "type": "string",
          "description": "reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI."
        },
        "output": {
          "description": "output describes the Docker image the build has produced.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildStatusOutput"
        },
        "duration": {
          "type": "integer",
          "description": "duration contains time.Duration object describing build time.",
          "format": "int64"
        },
        "cancelled": {
          "type": "boolean",
          "description": "cancelled describes if a cancel event was triggered for the build."
        },
        "message": {
          "type": "string",
          "description": "message is a human-readable message indicating details about why the build has this status."
        },
        "stages": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.StageInfo"
          },
          "type": "array",
          "description": "stages contains details about each stage that occurs during the build including start time, duration (in milliseconds), and the steps that occured within each stage."
        },
        "config": {
          "description": "config is an ObjectReference to the BuildConfig this Build is based on.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PersistentVolumeClaim": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PersistentVolumeClaim",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "PersistentVolumeClaim is a user's request for and claim to a persistent volume",
      "properties": {
        "status": {
          "description": "Status represents the current information/status of a persistent volume claim. Read-only. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PersistentVolumeClaimStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the desired characteristics of a volume requested by a pod author. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PersistentVolumeClaimSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.SecretEnvSource": {
      "description": "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
      "properties": {
        "optional": {
          "type": "boolean",
          "description": "Specify whether the Secret must be defined"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildRequest": {
      "required": [
        "triggeredBy"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "BuildRequest",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "BuildRequest",
          "Version": "v1",
          "Group": "build.openshift.io"
        }
      ],
      "description": "BuildRequest is the resource used to pass parameters to build generator",
      "properties": {
        "binary": {
          "description": "binary indicates a request to build from a binary provided to the builder",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BinaryBuildSource"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "from": {
          "description": "from is the reference to the ImageStreamTag that triggered the build.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "metadata": {
          "description": "metadata for BuildRequest.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "triggeredByImage": {
          "description": "triggeredByImage is the Image that triggered this build.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "env": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EnvVar"
          },
          "type": "array",
          "description": "env contains additional environment variables you want to pass into a builder container."
        },
        "lastVersion": {
          "type": "integer",
          "description": "lastVersion (optional) is the LastVersion of the BuildConfig that was used to generate the build. If the BuildConfig in the generator doesn't match, a build will not be generated.",
          "format": "int64"
        },
        "triggeredBy": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildTriggerCause"
          },
          "type": "array",
          "description": "triggeredBy describes which triggers started the most recent update to the build configuration and contains information about those triggers."
        },
        "dockerStrategyOptions": {
          "description": "DockerStrategyOptions contains additional docker-strategy specific options for the build",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.DockerStrategyOptions"
        },
        "revision": {
          "description": "revision is the information from the source for a specific repo snapshot.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.SourceRevision"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ReplicaSetSpec": {
      "description": "ReplicaSetSpec is the specification of a ReplicaSet.",
      "properties": {
        "replicas": {
          "type": "integer",
          "description": "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: http://kubernetes.io/docs/user-guide/replication-controller#what-is-a-replication-controller",
          "format": "int32"
        },
        "minReadySeconds": {
          "type": "integer",
          "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
          "format": "int32"
        },
        "template": {
          "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected. More info: http://kubernetes.io/docs/user-guide/replication-controller#pod-template",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        },
        "selector": {
          "description": "Selector is a label query over pods that should match the replica count. If the selector is empty, it is defaulted to the labels present on the pod template. Label keys and values that must match in order to be controlled by this replica set. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.NamedClusterRoleBinding": {
      "required": [
        "name",
        "roleBinding"
      ],
      "description": "NamedClusterRoleBinding relates a name with a cluster role binding",
      "properties": {
        "roleBinding": {
          "description": "RoleBinding is the cluster role binding being named",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterRoleBinding"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of the cluster role binding"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.RollingUpdateDeployment": {
      "description": "Spec to control the desired behavior of rolling update.",
      "properties": {
        "maxSurge": {
          "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. By default, a value of 1 is used. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "maxUnavailable": {
          "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. By default, a fixed value of 1 is used. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Affinity": {
      "description": "Affinity is a group of affinity scheduling rules.",
      "properties": {
        "podAffinity": {
          "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodAffinity"
        },
        "nodeAffinity": {
          "description": "Describes node affinity scheduling rules for the pod.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NodeAffinity"
        },
        "podAntiAffinity": {
          "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodAntiAffinity"
        }
      }
    },
    "com.github.openshift.origin.pkg.template.apis.template.v1.TemplateInstanceStatus": {
      "required": [
        "conditions"
      ],
      "description": "TemplateInstanceStatus describes the current state of a TemplateInstance.",
      "properties": {
        "conditions": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.template.apis.template.v1.TemplateInstanceCondition"
          },
          "type": "array",
          "description": "conditions represent the latest available observations of a TemplateInstance's current state."
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.ExecNewPodHook": {
      "required": [
        "command",
        "containerName"
      ],
      "description": "ExecNewPodHook is a hook implementation which runs a command in a new pod based on the specified container which is assumed to be part of the deployment template.",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "ContainerName is the name of a container in the deployment pod template whose Docker image will be used for the hook pod's container."
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Command is the action command and its arguments."
        },
        "env": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EnvVar"
          },
          "type": "array",
          "description": "Env is a set of environment variables to supply to the hook pod's container."
        },
        "volumes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Volumes is a list of named volumes from the pod template which should be copied to the hook pod. Volumes names not found in pod spec are ignored. An empty list means no volumes will be copied."
        }
      }
    },
    "com.github.openshift.origin.pkg.project.apis.project.v1.ProjectStatus": {
      "description": "ProjectStatus is information about the current status of a Project",
      "properties": {
        "phase": {
          "type": "string",
          "description": "Phase is the current lifecycle phase of the project"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.AzureFileVolumeSource": {
      "required": [
        "secretName",
        "shareName"
      ],
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      "properties": {
        "shareName": {
          "type": "string",
          "description": "Share Name"
        },
        "readOnly": {
          "type": "boolean",
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
        },
        "secretName": {
          "type": "string",
          "description": "the name of secret that contains Azure Storage Account Name and Key"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.DownwardAPIVolumeSource": {
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.DownwardAPIVolumeFile"
          },
          "type": "array",
          "description": "Items is a list of downward API volume file"
        },
        "defaultMode": {
          "type": "integer",
          "description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentTriggerPolicy": {
      "description": "DeploymentTriggerPolicy describes a policy for a single trigger that results in a new deployment.",
      "properties": {
        "imageChangeParams": {
          "description": "ImageChangeParams represents the parameters for the ImageChange trigger.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentTriggerImageChangeParams"
        },
        "type": {
          "type": "string",
          "description": "Type of the trigger"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamTagList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ImageStreamTagList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ImageStreamTagList",
          "Version": "v1",
          "Group": "image.openshift.io"
        }
      ],
      "description": "ImageStreamTagList is a list of ImageStreamTag objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamTag"
          },
          "type": "array",
          "description": "Items is the list of image stream tags"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.RoleBindingRestriction": {
      "required": [
        "metadata",
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "RoleBindingRestriction",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "RoleBindingRestriction",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "RoleBindingRestriction is an object that can be matched against a subject (user, group, or service account) to determine whether rolebindings on that subject are allowed in the namespace to which the RoleBindingRestriction belongs.  If any one of those RoleBindingRestriction objects matches a subject, rolebindings on that subject in the namespace are allowed.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the matcher.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.RoleBindingRestrictionSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1.SubjectAccessReviewSpec": {
      "description": "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
      "properties": {
        "extra": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "object",
          "description": "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here."
        },
        "nonResourceAttributes": {
          "description": "NonResourceAttributes describes information for a non-resource access request",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1.NonResourceAttributes"
        },
        "user": {
          "type": "string",
          "description": "User is the user you're testing for. If you specify \"User\" but not \"Groups\", then is it interpreted as \"What if User were not a member of any groups"
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Groups is the groups you're testing for."
        },
        "resourceAttributes": {
          "description": "ResourceAuthorizationAttributes describes information for a resource access request",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1.ResourceAttributes"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentDetails": {
      "required": [
        "causes"
      ],
      "description": "DeploymentDetails captures information about the causes of a deployment.",
      "properties": {
        "message": {
          "type": "string",
          "description": "Message is the user specified change message, if this deployment was triggered manually by the user"
        },
        "causes": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentCause"
          },
          "type": "array",
          "description": "Causes are extended data associated with all the causes for creating a new deployment"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1beta1.SubjectAccessReviewSpec": {
      "description": "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
      "properties": {
        "extra": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "object",
          "description": "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here."
        },
        "nonResourceAttributes": {
          "description": "NonResourceAttributes describes information for a non-resource access request",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1beta1.NonResourceAttributes"
        },
        "group": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Groups is the groups you're testing for."
        },
        "user": {
          "type": "string",
          "description": "User is the user you're testing for. If you specify \"User\" but not \"Group\", then is it interpreted as \"What if User were not a member of any groups"
        },
        "resourceAttributes": {
          "description": "ResourceAuthorizationAttributes describes information for a resource access request",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1beta1.ResourceAttributes"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ResourceFieldSelector": {
      "required": [
        "resource"
      ],
      "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "Container name: required for volumes, optional for env vars"
        },
        "resource": {
          "type": "string",
          "description": "Required: resource to select"
        },
        "divisor": {
          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.ImageSourcePath": {
      "required": [
        "sourcePath",
        "destinationDir"
      ],
      "description": "ImageSourcePath describes a path to be copied from a source image and its destination within the build directory.",
      "properties": {
        "sourcePath": {
          "type": "string",
          "description": "sourcePath is the absolute path of the file or directory inside the image to copy to the build directory.  If the source path ends in /. then the content of the directory will be copied, but the directory itself will not be created at the destination."
        },
        "destinationDir": {
          "type": "string",
          "description": "destinationDir is the relative directory within the build directory where files copied from the image are placed."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.WebHookTrigger": {
      "description": "WebHookTrigger is a trigger that gets invoked using a webhook type of post",
      "properties": {
        "allowEnv": {
          "type": "boolean",
          "description": "allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook."
        },
        "secret": {
          "type": "string",
          "description": "secret used to validate requests."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.DockerStrategyOptions": {
      "description": "DockerStrategyOptions contains extra strategy options for Docker builds",
      "properties": {
        "buildArgs": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EnvVar"
          },
          "type": "array",
          "description": "Args contains any build arguments that are to be passed to Docker.  See https://docs.docker.com/engine/reference/builder/#/arg for more details"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.Scale": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Scale",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "Scale",
          "Version": "v1",
          "Group": "apps.openshift.io"
        },
        {
          "Kind": "Scale",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "represents a scaling request for a resource.",
      "properties": {
        "status": {
          "description": "current status of the scale. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status. Read-only.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ScaleStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "defines the behavior of the scale. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ScaleSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata; More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.template.apis.template.v1.BrokerTemplateInstance": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "BrokerTemplateInstance",
          "Version": "v1",
          "Group": "template.openshift.io"
        }
      ],
      "description": "BrokerTemplateInstance holds the service broker-related state associated with a TemplateInstance.  BrokerTemplateInstance is part of an experimental API.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "spec describes the state of this BrokerTemplateInstance.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.template.apis.template.v1.BrokerTemplateInstanceSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.route.apis.route.v1.RoutePort": {
      "required": [
        "targetPort"
      ],
      "description": "RoutePort defines a port mapping from a router to an endpoint in the service endpoints.",
      "properties": {
        "targetPort": {
          "description": "The target port on pods selected by the service this route points to. If this is a string, it will be looked up as a named port in the target endpoints port list. Required",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.SecurityContext": {
      "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
      "properties": {
        "runAsNonRoot": {
          "type": "boolean",
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
        },
        "readOnlyRootFilesystem": {
          "type": "boolean",
          "description": "Whether this container has a read-only root filesystem. Default is false."
        },
        "seLinuxOptions": {
          "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.SELinuxOptions"
        },
        "runAsUser": {
          "type": "integer",
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "format": "int64"
        },
        "privileged": {
          "type": "boolean",
          "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false."
        },
        "capabilities": {
          "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Capabilities"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ConfigMap": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ConfigMap",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "ConfigMap holds configuration data for pods to consume.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "data": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Data contains the configuration data. Each key must be a valid DNS_SUBDOMAIN with an optional leading dot."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.user.apis.user.v1.User": {
      "required": [
        "identities",
        "groups"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "User",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "User",
          "Version": "v1",
          "Group": "user.openshift.io"
        }
      ],
      "description": "Upon log in, every user of the system receives a User and Identity resource. Administrators may directly manipulate the attributes of the users for their own tracking, or set groups via the API. The user name is unique and is chosen based on the value provided by the identity provider - if a user already exists with the incoming name, the user name may have a number appended to it depending on the configuration of the system.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Groups specifies group names this user is a member of. This field is deprecated and will be removed in a future release. Instead, create a Group object containing the name of this User."
        },
        "fullName": {
          "type": "string",
          "description": "FullName is the full name of user"
        },
        "identities": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Identities are the identities associated with this user"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authentication.v1beta1.TokenReviewSpec": {
      "description": "TokenReviewSpec is a description of the token authentication request.",
      "properties": {
        "token": {
          "type": "string",
          "description": "Token is the opaque bearer token."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HostPortRange": {
      "required": [
        "min",
        "max"
      ],
      "description": "Host Port Range defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined.",
      "properties": {
        "max": {
          "type": "integer",
          "description": "max is the end of the range, inclusive.",
          "format": "int32"
        },
        "min": {
          "type": "integer",
          "description": "min is the start of the range, inclusive.",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.LimitRangeItem": {
      "description": "LimitRangeItem defines a min/max usage limit for any resource that matches on kind.",
      "properties": {
        "defaultRequest": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted."
        },
        "min": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "Min usage constraints on this kind by resource name."
        },
        "default": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "Default resource requirement limit value by resource name if resource limit is omitted."
        },
        "max": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "Max usage constraints on this kind by resource name."
        },
        "maxLimitRequestRatio": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource."
        },
        "type": {
          "type": "string",
          "description": "Type of resource that this limit applies to."
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamSpec": {
      "description": "ImageStreamSpec represents options for ImageStreams.",
      "properties": {
        "lookupPolicy": {
          "description": "lookupPolicy controls how other resources reference images within this namespace.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageLookupPolicy"
        },
        "dockerImageRepository": {
          "type": "string",
          "description": "dockerImageRepository is optional, if specified this stream is backed by a Docker repository on this server"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.TagReference"
          },
          "type": "array",
          "description": "tags map arbitrary string values to specific image locators"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.HTTPHeader": {
      "required": [
        "name",
        "value"
      ],
      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
      "properties": {
        "name": {
          "type": "string",
          "description": "The header field name"
        },
        "value": {
          "type": "string",
          "description": "The header field value"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ResourceAccessReview": {
      "required": [
        "namespace",
        "verb",
        "resourceAPIGroup",
        "resourceAPIVersion",
        "resource",
        "resourceName",
        "path",
        "isNonResourceURL"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ResourceAccessReview",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ResourceAccessReview",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "ResourceAccessReview is a means to request a list of which users and groups are authorized to perform the action specified by spec",
      "properties": {
        "content": {
          "description": "Content is the actual content of the request for create and update",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "resource": {
          "type": "string",
          "description": "Resource is one of the existing resource types"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "isNonResourceURL": {
          "type": "boolean",
          "description": "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)"
        },
        "resourceAPIVersion": {
          "type": "string",
          "description": "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined"
        },
        "verb": {
          "type": "string",
          "description": "Verb is one of: get, list, watch, create, update, delete"
        },
        "resourceAPIGroup": {
          "type": "string",
          "description": "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined"
        },
        "path": {
          "type": "string",
          "description": "Path is the path of a non resource URL"
        },
        "resourceName": {
          "type": "string",
          "description": "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\""
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.HTTPGetAction": {
      "required": [
        "port"
      ],
      "description": "HTTPGetAction describes an action based on HTTP Get requests.",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to access on the HTTP server."
        },
        "host": {
          "type": "string",
          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
        },
        "scheme": {
          "type": "string",
          "description": "Scheme to use for connecting to the host. Defaults to HTTP."
        },
        "httpHeaders": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.HTTPHeader"
          },
          "type": "array",
          "description": "Custom headers to set in the request. HTTP allows repeated headers."
        },
        "port": {
          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.RoleList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "RoleList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "RoleList",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "RoleList is a collection of Roles",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.Role"
          },
          "type": "array",
          "description": "Items is a list of Roles"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.autoscaling.v1.CrossVersionObjectReference": {
      "required": [
        "kind",
        "name"
      ],
      "description": "CrossVersionObjectReference contains enough information to let you identify the referred resource.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind of the referent; More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds\""
        },
        "name": {
          "type": "string",
          "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.CinderVolumeSource": {
      "required": [
        "volumeID"
      ],
      "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
      "properties": {
        "readOnly": {
          "type": "boolean",
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
        },
        "volumeID": {
          "type": "string",
          "description": "volume id used to identify the volume in cinder More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
        },
        "fsType": {
          "type": "string",
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.PolicyRule": {
      "required": [
        "verbs",
        "apiGroups",
        "resources"
      ],
      "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.",
      "properties": {
        "resourceNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed."
        },
        "verbs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds."
        },
        "nonResourceURLs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "NonResourceURLsSlice is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path This name is intentionally different than the internal type so that the DefaultConvert works nicely and because the ordering may be different."
        },
        "attributeRestrictions": {
          "description": "AttributeRestrictions will vary depending on what the Authorizer/AuthorizationAttributeBuilder pair supports. If the Authorizer does not recognize how to handle the AttributeRestrictions, the Authorizer should report an error.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "apiGroups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "APIGroups is the name of the APIGroup that contains the resources.  If this field is empty, then both kubernetes and origin API groups are assumed. That means that if an action is requested against one of the enumerated resources in either the kubernetes or the origin API group, the request will be allowed"
        },
        "resources": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Resources is a list of resources this rule applies to.  ResourceAll represents all resources."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PodTemplateList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PodTemplateList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "PodTemplateList is a list of PodTemplates.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplate"
          },
          "type": "array",
          "description": "List of pod templates"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.Scale": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Scale",
          "Version": "v1beta1",
          "Group": "apps"
        }
      ],
      "description": "Scale represents a scaling request for a resource.",
      "properties": {
        "status": {
          "description": "current status of the scale. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status. Read-only.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.ScaleStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "defines the behavior of the scale. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.ScaleSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata; More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.RecreateDeploymentStrategyParams": {
      "description": "RecreateDeploymentStrategyParams are the input to the Recreate deployment strategy.",
      "properties": {
        "pre": {
          "description": "Pre is a lifecycle hook which is executed before the strategy manipulates the deployment. All LifecycleHookFailurePolicy values are supported.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.LifecycleHook"
        },
        "post": {
          "description": "Post is a lifecycle hook which is executed after the strategy has finished all deployment logic. All LifecycleHookFailurePolicy values are supported.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.LifecycleHook"
        },
        "mid": {
          "description": "Mid is a lifecycle hook which is executed while the deployment is scaled down to zero before the first new pod is created. All LifecycleHookFailurePolicy values are supported.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.LifecycleHook"
        },
        "timeoutSeconds": {
          "type": "integer",
          "description": "TimeoutSeconds is the time to wait for updates before giving up. If the value is nil, a default will be used.",
          "format": "int64"
        }
      }
    },
    "com.github.openshift.origin.pkg.oauth.apis.oauth.v1.OAuthClient": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "OAuthClient",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "OAuthClient",
          "Version": "v1",
          "Group": "oauth.openshift.io"
        }
      ],
      "description": "OAuthClient describes an OAuth client",
      "properties": {
        "scopeRestrictions": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.oauth.apis.oauth.v1.ScopeRestriction"
          },
          "type": "array",
          "description": "ScopeRestrictions describes which scopes this client can request.  Each requested scope is checked against each restriction.  If any restriction matches, then the scope is allowed. If no restriction matches, then the scope is denied."
        },
        "grantMethod": {
          "type": "string",
          "description": "GrantMethod determines how to handle grants for this client. If no method is provided, the cluster default grant handling method will be used. Valid grant handling methods are:\n - auto:   always approves grant requests, useful for trusted clients\n - prompt: prompts the end user for approval of grant requests, useful for third-party clients\n - deny:   always denies grant requests, useful for black-listed clients"
        },
        "additionalSecrets": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "AdditionalSecrets holds other secrets that may be used to identify the client.  This is useful for rotation and for service account token validation"
        },
        "respondWithChallenges": {
          "type": "boolean",
          "description": "RespondWithChallenges indicates whether the client wants authentication needed responses made in the form of challenges instead of redirects"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "secret": {
          "type": "string",
          "description": "Secret is the unique secret associated with a client"
        },
        "redirectURIs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "RedirectURIs is the valid redirection URIs associated with a client"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ExecAction": {
      "description": "ExecAction describes a \"run in container\" action.",
      "properties": {
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PodStatus": {
      "description": "PodStatus represents information about the status of a pod. Status may trail the actual state of a system.",
      "properties": {
        "initContainerStatuses": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ContainerStatus"
          },
          "type": "array",
          "description": "The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: http://kubernetes.io/docs/user-guide/pod-states#container-statuses"
        },
        "qosClass": {
          "type": "string",
          "description": "The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://github.com/kubernetes/kubernetes/blob/master/docs/design/resource-qos.md"
        },
        "containerStatuses": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ContainerStatus"
          },
          "type": "array",
          "description": "The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: http://kubernetes.io/docs/user-guide/pod-states#container-statuses"
        },
        "reason": {
          "type": "string",
          "description": "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'OutOfDisk'"
        },
        "podIP": {
          "type": "string",
          "description": "IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated."
        },
        "startTime": {
          "description": "RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "hostIP": {
          "type": "string",
          "description": "IP address of the host to which the pod is assigned. Empty if not yet scheduled."
        },
        "phase": {
          "type": "string",
          "description": "Current condition of the pod. More info: http://kubernetes.io/docs/user-guide/pod-states#pod-phase"
        },
        "message": {
          "type": "string",
          "description": "A human readable message indicating details about why the pod is in this condition."
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodCondition"
          },
          "type": "array",
          "description": "Current service state of pod. More info: http://kubernetes.io/docs/user-guide/pod-states#pod-conditions"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec": {
      "description": "PodTemplateSpec describes the data a pod should have when created from a template",
      "properties": {
        "spec": {
          "description": "Specification of the desired behavior of the pod. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodSpec"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.ImageChangeCause": {
      "description": "ImageChangeCause contains information about the image that triggered a build",
      "properties": {
        "fromRef": {
          "description": "fromRef contains detailed information about an image that triggered a build.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "imageID": {
          "type": "string",
          "description": "imageID is the ID of the image that triggered a a new build."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.GitLabWebHookCause": {
      "description": "GitLabWebHookCause has information about a GitLab webhook that triggered a build.",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Secret is the obfuscated webhook secret that triggered a build."
        },
        "revision": {
          "description": "Revision is the git source revision information of the trigger.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.SourceRevision"
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicySelfSubjectReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PodSecurityPolicySelfSubjectReview",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "PodSecurityPolicySelfSubjectReview",
          "Version": "v1",
          "Group": "security.openshift.io"
        }
      ],
      "description": "PodSecurityPolicySelfSubjectReview checks whether this user/SA tuple can create the PodTemplateSpec",
      "properties": {
        "status": {
          "description": "status represents the current information/status for the PodSecurityPolicySelfSubjectReview.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicySubjectReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "spec defines specification the PodSecurityPolicySelfSubjectReview.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicySelfSubjectReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.SignatureSubject": {
      "required": [
        "publicKeyID"
      ],
      "description": "SignatureSubject holds information about a person or entity who created the signature.",
      "properties": {
        "organization": {
          "type": "string",
          "description": "Organization name."
        },
        "commonName": {
          "type": "string",
          "description": "Common name (e.g. openshift-signing-service)."
        },
        "publicKeyID": {
          "type": "string",
          "description": "If present, it is a human readable key id of public key belonging to the subject used to verify image signature. It should contain at least 64 lowest bits of public key's fingerprint (e.g. 0x685ebe62bf278440)."
        }
      }
    },
    "com.github.openshift.origin.pkg.project.apis.project.v1.ProjectSpec": {
      "description": "ProjectSpec describes the attributes on a Project",
      "properties": {
        "finalizers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Finalizers is an opaque list of values that must be empty to permanently remove object from storage"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageLookupPolicy": {
      "required": [
        "local"
      ],
      "description": "ImageLookupPolicy describes how an image stream can be used to override the image references used by pods, builds, and other resources in a namespace.",
      "properties": {
        "local": {
          "type": "boolean",
          "description": "local will change the docker short image references (like \"mysql\" or \"php:latest\") on objects in this namespace to the image ID whenever they match this image stream, instead of reaching out to a remote registry. The name will be fully qualified to an image ID if found. The tag's referencePolicy is taken into account on the replaced value. Only works within the current namespace."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.SecretList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "SecretList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "SecretList",
          "Version": "v1",
          "Group": "image.openshift.io"
        }
      ],
      "description": "SecretList is a list of Secret.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Secret"
          },
          "type": "array",
          "description": "Items is a list of secret objects. More info: http://kubernetes.io/docs/user-guide/secrets"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.oauth.apis.oauth.v1.OAuthClientAuthorization": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "OAuthClientAuthorization",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "OAuthClientAuthorization",
          "Version": "v1",
          "Group": "oauth.openshift.io"
        }
      ],
      "description": "OAuthClientAuthorization describes an authorization created by an OAuth client",
      "properties": {
        "userName": {
          "type": "string",
          "description": "UserName is the user name that authorized this client"
        },
        "scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Scopes is an array of the granted scopes."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "clientName": {
          "type": "string",
          "description": "ClientName references the client that created this authorization"
        },
        "userUID": {
          "type": "string",
          "description": "UserUID is the unique UID associated with this authorization. UserUID and UserName must both match for this authorization to be valid."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterPolicyBinding": {
      "required": [
        "lastModified",
        "policyRef",
        "roleBindings"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterPolicyBinding",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ClusterPolicyBinding",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "ClusterPolicyBinding is a object that holds all the ClusterRoleBindings for a particular namespace.  There is one ClusterPolicyBinding document per referenced ClusterPolicy namespace",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "policyRef": {
          "description": "PolicyRef is a reference to the ClusterPolicy that contains all the ClusterRoles that this ClusterPolicyBinding's RoleBindings may reference",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "lastModified": {
          "description": "LastModified is the last time that any part of the ClusterPolicyBinding was created, updated, or deleted",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "roleBindings": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.NamedClusterRoleBinding"
          },
          "type": "array",
          "description": "RoleBindings holds all the ClusterRoleBindings held by this ClusterPolicyBinding, mapped by ClusterRoleBinding.Name"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.TagReferencePolicy": {
      "required": [
        "type"
      ],
      "description": "TagReferencePolicy describes how pull-specs for images in this image stream tag are generated when image change triggers in deployment configs or builds are resolved. This allows the image stream author to control how images are accessed.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type determines how the image pull spec should be transformed when the image stream tag is used in deployment config triggers or new builds. The default value is `Source`, indicating the original location of the image should be used (if imported). The user may also specify `Local`, indicating that the pull spec should point to the integrated Docker registry and leverage the registry's ability to proxy the pull to an upstream registry. `Local` allows the credentials used to pull this image to be managed from the image stream's namespace, so others on the platform can access a remote image but have no access to the remote secret. It also allows the image layers to be mirrored into the local registry which the images can still be pulled even if the upstream registry is unavailable."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.NetworkPolicy": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "NetworkPolicy",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Specification of the desired behavior for this NetworkPolicy.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.NetworkPolicySpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.route.apis.route.v1.Route": {
      "required": [
        "spec",
        "status"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Route",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "Route",
          "Version": "v1",
          "Group": "route.openshift.io"
        }
      ],
      "description": "A route allows developers to expose services through an HTTP(S) aware load balancing and proxy layer via a public DNS entry. The route may further specify TLS options and a certificate, or specify a public CNAME that the router should also accept for HTTP and HTTPS traffic. An administrator typically configures their router to be visible outside the cluster firewall, and may also add additional security, caching, or traffic controls on the service content. Routers usually talk directly to the service endpoints.\n\nOnce a route is created, the `host` field may not be changed. Generally, routers use the oldest route with a given host when resolving conflicts.\n\nRouters are subject to additional customization and may support additional controls via the annotations field.\n\nBecause administrators may configure multiple routers, the route status field is used to return information to clients about the names and states of the route under each router. If a client chooses a duplicate name, for instance, the route status conditions are used to indicate the route cannot be chosen.",
      "properties": {
        "status": {
          "description": "status is the current state of the route",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.route.apis.route.v1.RouteStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "spec is the desired state of the route",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.route.apis.route.v1.RouteSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1beta1.SubjectAccessReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "SubjectAccessReview",
          "Version": "v1beta1",
          "Group": "authorization.k8s.io"
        }
      ],
      "description": "SubjectAccessReview checks whether or not a user or group can perform an action.",
      "properties": {
        "status": {
          "description": "Status is filled in by the server and indicates whether the request is allowed or not",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1beta1.SubjectAccessReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec holds information about the request being evaluated",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authorization.v1beta1.SubjectAccessReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.VsphereVirtualDiskVolumeSource": {
      "required": [
        "volumePath"
      ],
      "description": "Represents a vSphere volume resource.",
      "properties": {
        "volumePath": {
          "type": "string",
          "description": "Path that identifies vSphere volume vmdk"
        },
        "fsType": {
          "type": "string",
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.IDRange": {
      "description": "IDRange provides a min/max of an allowed range of IDs.",
      "properties": {
        "max": {
          "type": "integer",
          "description": "Max is the end of the range, inclusive.",
          "format": "int64"
        },
        "min": {
          "type": "integer",
          "description": "Min is the start of the range, inclusive.",
          "format": "int64"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Container": {
      "required": [
        "name"
      ],
      "description": "A single application container that you want to run within a pod.",
      "properties": {
        "livenessProbe": {
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Probe"
        },
        "terminationMessagePath": {
          "type": "string",
          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."
        },
        "workingDir": {
          "type": "string",
          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
        },
        "image": {
          "type": "string",
          "description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
        },
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands"
        },
        "volumeMounts": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.VolumeMount"
          },
          "type": "array",
          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated."
        },
        "tty": {
          "type": "boolean",
          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false."
        },
        "lifecycle": {
          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Lifecycle"
        },
        "securityContext": {
          "description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.SecurityContext"
        },
        "name": {
          "type": "string",
          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
        },
        "envFrom": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EnvFromSource"
          },
          "type": "array",
          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated."
        },
        "stdin": {
          "type": "boolean",
          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false."
        },
        "stdinOnce": {
          "type": "boolean",
          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false"
        },
        "terminationMessagePolicy": {
          "type": "string",
          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated."
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands"
        },
        "env": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EnvVar"
          },
          "type": "array",
          "description": "List of environment variables to set in the container. Cannot be updated."
        },
        "imagePullPolicy": {
          "type": "string",
          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images"
        },
        "readinessProbe": {
          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Probe"
        },
        "ports": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ContainerPort"
          },
          "type": "array",
          "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated."
        },
        "resources": {
          "description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceRequirements"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildTriggerPolicy": {
      "required": [
        "type"
      ],
      "description": "BuildTriggerPolicy describes a policy for a single trigger that results in a new Build.",
      "properties": {
        "bitbucket": {
          "description": "BitbucketWebHook contains the parameters for a Bitbucket webhook type of trigger",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.WebHookTrigger"
        },
        "github": {
          "description": "github contains the parameters for a GitHub webhook type of trigger",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.WebHookTrigger"
        },
        "generic": {
          "description": "generic contains the parameters for a Generic webhook type of trigger",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.WebHookTrigger"
        },
        "type": {
          "type": "string",
          "description": "type is the type of build trigger"
        },
        "gitlab": {
          "description": "GitLabWebHook contains the parameters for a GitLab webhook type of trigger",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.WebHookTrigger"
        },
        "imageChange": {
          "description": "imageChange contains parameters for an ImageChange type of trigger",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.ImageChangeTrigger"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.batch.v1.JobCondition": {
      "required": [
        "type",
        "status"
      ],
      "description": "JobCondition describes current state of a job.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "reason": {
          "type": "string",
          "description": "(brief) reason for the condition's last transition."
        },
        "lastProbeTime": {
          "description": "Last time the condition was checked.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "type": {
          "type": "string",
          "description": "Type of job condition, Complete or Failed."
        },
        "message": {
          "type": "string",
          "description": "Human readable message indicating details about last transition."
        },
        "lastTransitionTime": {
          "description": "Last time the condition transit from one status to another.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Node": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Node",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).",
      "properties": {
        "status": {
          "description": "Most recently observed status of the node. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NodeStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the behavior of a node. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NodeSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.GitBuildSource": {
      "required": [
        "uri"
      ],
      "description": "GitBuildSource defines the parameters of a Git SCM",
      "properties": {
        "httpProxy": {
          "type": "string",
          "description": "httpProxy is a proxy used to reach the git repository over http"
        },
        "httpsProxy": {
          "type": "string",
          "description": "httpsProxy is a proxy used to reach the git repository over https"
        },
        "ref": {
          "type": "string",
          "description": "ref is the branch/tag/ref to build."
        },
        "noProxy": {
          "type": "string",
          "description": "noProxy is the list of domains for which the proxy should not be used"
        },
        "uri": {
          "type": "string",
          "description": "uri points to the source that will be built. The structure of the source will depend on the type of build to run"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.LoadBalancerIngress": {
      "description": "LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)"
        },
        "hostname": {
          "type": "string",
          "description": "Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentConfigStatus": {
      "required": [
        "latestVersion",
        "observedGeneration",
        "replicas",
        "updatedReplicas",
        "availableReplicas",
        "unavailableReplicas"
      ],
      "description": "DeploymentConfigStatus represents the current deployment state.",
      "properties": {
        "replicas": {
          "type": "integer",
          "description": "Replicas is the total number of pods targeted by this deployment config.",
          "format": "int32"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration is the most recent generation observed by the deployment config controller.",
          "format": "int64"
        },
        "updatedReplicas": {
          "type": "integer",
          "description": "UpdatedReplicas is the total number of non-terminated pods targeted by this deployment config that have the desired template spec.",
          "format": "int32"
        },
        "availableReplicas": {
          "type": "integer",
          "description": "AvailableReplicas is the total number of available pods targeted by this deployment config.",
          "format": "int32"
        },
        "details": {
          "description": "Details are the reasons for the update to this deployment config. This could be based on a change made by the user or caused by an automatic trigger",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentDetails"
        },
        "latestVersion": {
          "type": "integer",
          "description": "LatestVersion is used to determine whether the current deployment associated with a deployment config is out of sync.",
          "format": "int64"
        },
        "readyReplicas": {
          "type": "integer",
          "description": "Total number of ready pods targeted by this deployment.",
          "format": "int32"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentCondition"
          },
          "type": "array",
          "description": "Conditions represents the latest available observations of a deployment config's current state."
        },
        "unavailableReplicas": {
          "type": "integer",
          "description": "UnavailableReplicas is the total number of unavailable pods targeted by this deployment config.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamImport": {
      "required": [
        "spec",
        "status"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ImageStreamImport",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ImageStreamImport",
          "Version": "v1",
          "Group": "image.openshift.io"
        }
      ],
      "description": "The image stream import resource provides an easy way for a user to find and import Docker images from other Docker registries into the server. Individual images or an entire image repository may be imported, and users may choose to see the results of the import prior to tagging the resulting images into the specified image stream.\n\nThis API is intended for end-user tools that need to see the metadata of the image prior to import (for instance, to generate an application from it). Clients that know the desired image can continue to create spec.tags directly into their image streams.",
      "properties": {
        "status": {
          "description": "Status is the the result of importing the image",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamImportStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec is a description of the images that the user wishes to import",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamImportSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ContainerImage": {
      "required": [
        "names"
      ],
      "description": "Describe a container image",
      "properties": {
        "sizeBytes": {
          "type": "integer",
          "description": "The size of the image in bytes.",
          "format": "int64"
        },
        "names": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Names by which this image is known. e.g. [\"gcr.io/google_containers/hyperkube:v1.0.7\", \"dockerhub.io/google_containers/hyperkube:v1.0.7\"]"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIResource": {
      "required": [
        "name",
        "namespaced",
        "kind",
        "verbs"
      ],
      "description": "APIResource specifies the name of a resource and whether it is namespaced.",
      "properties": {
        "shortNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "shortNames is a list of suggested short names of the resource."
        },
        "namespaced": {
          "type": "boolean",
          "description": "namespaced indicates if a resource is namespaced or not."
        },
        "kind": {
          "type": "string",
          "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')"
        },
        "verbs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)"
        },
        "name": {
          "type": "string",
          "description": "name is the name of the resource."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.autoscaling.v1.HorizontalPodAutoscalerStatus": {
      "required": [
        "currentReplicas",
        "desiredReplicas"
      ],
      "description": "current status of a horizontal pod autoscaler",
      "properties": {
        "observedGeneration": {
          "type": "integer",
          "description": "most recent generation observed by this autoscaler.",
          "format": "int64"
        },
        "currentReplicas": {
          "type": "integer",
          "description": "current number of replicas of pods managed by this autoscaler.",
          "format": "int32"
        },
        "lastScaleTime": {
          "description": "last time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "currentCPUUtilizationPercentage": {
          "type": "integer",
          "description": "current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.",
          "format": "int32"
        },
        "desiredReplicas": {
          "type": "integer",
          "description": "desired number of replicas of pods managed by this autoscaler.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildTriggerCause": {
      "description": "BuildTriggerCause holds information about a triggered build. It is used for displaying build trigger data for each build and build configuration in oc describe. It is also used to describe which triggers led to the most recent update in the build configuration.",
      "properties": {
        "imageChangeBuild": {
          "description": "imageChangeBuild stores information about an imagechange event that triggered a new build.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.ImageChangeCause"
        },
        "genericWebHook": {
          "description": "genericWebHook holds data about a builds generic webhook trigger.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.GenericWebHookCause"
        },
        "githubWebHook": {
          "description": "gitHubWebHook represents data for a GitHub webhook that fired a specific build.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.GitHubWebHookCause"
        },
        "message": {
          "type": "string",
          "description": "message is used to store a human readable message for why the build was triggered. E.g.: \"Manually triggered by user\", \"Configuration change\",etc."
        },
        "gitlabWebHook": {
          "description": "GitLabWebHook represents data for a GitLab webhook that fired a specific build.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.GitLabWebHookCause"
        },
        "bitbucketWebHook": {
          "description": "BitbucketWebHook represents data for a Bitbucket webhook that fired a specific build.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BitbucketWebHookCause"
        }
      }
    },
    "com.github.openshift.origin.pkg.quota.apis.quota.v1.ClusterResourceQuotaSpec": {
      "required": [
        "selector",
        "quota"
      ],
      "description": "ClusterResourceQuotaSpec defines the desired quota restrictions",
      "properties": {
        "quota": {
          "description": "Quota defines the desired quota",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceQuotaSpec"
        },
        "selector": {
          "description": "Selector is the selector used to match projects. It should only select active projects on the scale of dozens (though it can select many more less active projects).  These projects will contend on object creation through this resource.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.quota.apis.quota.v1.ClusterResourceQuotaSelector"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "BuildList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "BuildList",
          "Version": "v1",
          "Group": "build.openshift.io"
        }
      ],
      "description": "BuildList is a collection of Builds.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.Build"
          },
          "type": "array",
          "description": "items is a list of builds"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "metadata for BuildList.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ConfigMapList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ConfigMapList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "ConfigMapList is a resource containing a list of ConfigMap objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ConfigMap"
          },
          "type": "array",
          "description": "Items is the list of ConfigMaps."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.storage.v1.StorageClass": {
      "required": [
        "provisioner"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "StorageClass",
          "Version": "v1",
          "Group": "storage.k8s.io"
        }
      ],
      "description": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Parameters holds the parameters for the provisioner that should create volumes of this storage class."
        },
        "provisioner": {
          "type": "string",
          "description": "Provisioner indicates the type of the provisioner."
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.UserRestriction": {
      "required": [
        "users",
        "groups",
        "labels"
      ],
      "description": "UserRestriction matches a user either by a string match on the user name, a string match on the name of a group to which the user belongs, or a label selector applied to the user labels.",
      "properties": {
        "labels": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
          },
          "type": "array",
          "description": "Selectors specifies a list of label selectors over user labels."
        },
        "users": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Users specifies a list of literal user names."
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Groups specifies a list of literal group names."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DaemonSetStatus": {
      "required": [
        "currentNumberScheduled",
        "numberMisscheduled",
        "desiredNumberScheduled",
        "numberReady"
      ],
      "description": "DaemonSetStatus represents the current status of a daemon set.",
      "properties": {
        "numberReady": {
          "type": "integer",
          "description": "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.",
          "format": "int32"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "The most recent generation observed by the daemon set controller.",
          "format": "int64"
        },
        "numberAvailable": {
          "type": "integer",
          "description": "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)",
          "format": "int32"
        },
        "desiredNumberScheduled": {
          "type": "integer",
          "description": "The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: http://releases.k8s.io/HEAD/docs/admin/daemons.md",
          "format": "int32"
        },
        "numberUnavailable": {
          "type": "integer",
          "description": "The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)",
          "format": "int32"
        },
        "currentNumberScheduled": {
          "type": "integer",
          "description": "The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: http://releases.k8s.io/HEAD/docs/admin/daemons.md",
          "format": "int32"
        },
        "numberMisscheduled": {
          "type": "integer",
          "description": "The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: http://releases.k8s.io/HEAD/docs/admin/daemons.md",
          "format": "int32"
        },
        "updatedNumberScheduled": {
          "type": "integer",
          "description": "The total number of nodes that are running updated daemon pod",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.FlockerVolumeSource": {
      "description": "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "datasetName": {
          "type": "string",
          "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated"
        },
        "datasetUUID": {
          "type": "string",
          "description": "UUID of the dataset. This is unique identifier of a Flocker dataset"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.RollingUpdateDaemonSet": {
      "description": "Spec to control the desired behavior of daemon set rolling update.",
      "properties": {
        "maxUnavailable": {
          "description": "The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageStream": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ImageStream",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ImageStream",
          "Version": "v1",
          "Group": "image.openshift.io"
        }
      ],
      "description": "ImageStream stores a mapping of tags to images, metadata overrides that are applied when images are tagged in a stream, and an optional reference to a Docker image repository on a registry.",
      "properties": {
        "status": {
          "description": "Status describes the current state of this stream",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec describes the desired state of this stream",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PodAffinityTerm": {
      "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> tches that of any node on which a pod of the set of pods is running",
      "properties": {
        "labelSelector": {
          "description": "A label query over a set of resources, in this case pods.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "namespaces": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\""
        },
        "topologyKey": {
          "type": "string",
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. For PreferredDuringScheduling pod anti-affinity, empty topologyKey is interpreted as \"all topologies\" (\"all topologies\" here means all the topologyKeys indicated by scheduler command-line argument --failure-domains); for affinity and for RequiredDuringScheduling pod anti-affinity, empty topologyKey is not allowed."
        }
      }
    },
    "com.github.openshift.origin.pkg.route.apis.route.v1.RouteIngress": {
      "description": "RouteIngress holds information about the places where a route is exposed.",
      "properties": {
        "routerName": {
          "type": "string",
          "description": "Name is a name chosen by the router to identify itself; this value is required"
        },
        "host": {
          "type": "string",
          "description": "Host is the host string under which the route is exposed; this value is required"
        },
        "routerCanonicalHostname": {
          "type": "string",
          "description": "CanonicalHostname is the external host name for the router that can be used as a CNAME for the host requested for this route. This value is optional and may not be set in all cases."
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.route.apis.route.v1.RouteIngressCondition"
          },
          "type": "array",
          "description": "Conditions is the state of the route, may be empty."
        },
        "wildcardPolicy": {
          "type": "string",
          "description": "Wildcard policy is the wildcard policy that was allowed where this route is exposed."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.NetworkPolicySpec": {
      "required": [
        "podSelector"
      ],
      "properties": {
        "ingress": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.NetworkPolicyIngressRule"
          },
          "type": "array",
          "description": "List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if namespace.networkPolicy.ingress.isolation is undefined and cluster policy allows it, OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not affect ingress isolation. If this field is present and contains at least one rule, this policy allows any traffic which matches at least one of the ingress rules in this list."
        },
        "podSelector": {
          "description": "Selects the pods to which this NetworkPolicy object applies.  The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods.  In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PhotonPersistentDiskVolumeSource": {
      "required": [
        "pdID"
      ],
      "description": "Represents a Photon Controller persistent disk resource.",
      "properties": {
        "fsType": {
          "type": "string",
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
        },
        "pdID": {
          "type": "string",
          "description": "ID that identifies Photon Controller persistent disk"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DeploymentSpec": {
      "required": [
        "template"
      ],
      "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
      "properties": {
        "progressDeadlineSeconds": {
          "type": "integer",
          "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Once autoRollback is implemented, the deployment controller will automatically rollback failed deployments. Note that progress will not be estimated during the time a deployment is paused. This is not set by default.",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
          "format": "int32"
        },
        "selector": {
          "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates that the deployment is paused and will not be processed by the deployment controller."
        },
        "rollbackTo": {
          "description": "The config this deployment is rolling back to. Will be cleared after rollback is done.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.RollbackConfig"
        },
        "template": {
          "description": "Template describes the pods that will be created.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified.",
          "format": "int32"
        },
        "strategy": {
          "description": "The deployment strategy to use to replace existing pods with new ones.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DeploymentStrategy"
        },
        "minReadySeconds": {
          "type": "integer",
          "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.TagEvent": {
      "required": [
        "created",
        "dockerImageReference",
        "image",
        "generation"
      ],
      "description": "TagEvent is used by ImageStreamStatus to keep a historical record of images associated with a tag.",
      "properties": {
        "generation": {
          "type": "integer",
          "description": "Generation is the spec tag generation that resulted in this tag being updated",
          "format": "int64"
        },
        "image": {
          "type": "string",
          "description": "Image is the image"
        },
        "dockerImageReference": {
          "type": "string",
          "description": "DockerImageReference is the string that can be used to pull this image"
        },
        "created": {
          "description": "Created holds the time the TagEvent was created",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.ServiceAccountPodSecurityPolicyReviewStatus": {
      "required": [
        "name"
      ],
      "description": "ServiceAccountPodSecurityPolicyReviewStatus represents ServiceAccount name and related review status",
      "properties": {
        "reason": {
          "type": "string",
          "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available."
        },
        "name": {
          "type": "string",
          "description": "name contains the allowed and the denied ServiceAccount name"
        },
        "allowedBy": {
          "description": "allowedBy is a reference to the rule that allows the PodTemplateSpec. A rule can be a SecurityContextConstraint or a PodSecurityPolicy A `nil`, indicates that it was denied.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "template": {
          "description": "template is the PodTemplateSpec after the defaulting is applied.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicySelfSubjectReviewSpec": {
      "required": [
        "template"
      ],
      "description": "PodSecurityPolicySelfSubjectReviewSpec contains specification for PodSecurityPolicySelfSubjectReview.",
      "properties": {
        "template": {
          "description": "template is the PodTemplateSpec to check.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        }
      }
    },
    "com.github.openshift.origin.pkg.quota.apis.quota.v1.AppliedClusterResourceQuota": {
      "required": [
        "metadata",
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "AppliedClusterResourceQuota",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "AppliedClusterResourceQuota",
          "Version": "v1",
          "Group": "quota.openshift.io"
        }
      ],
      "description": "AppliedClusterResourceQuota mirrors ClusterResourceQuota at a project scope, for projection into a project.  It allows a project-admin to know which ClusterResourceQuotas are applied to his project and their associated usage.",
      "properties": {
        "status": {
          "description": "Status defines the actual enforced quota and its current usage",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.quota.apis.quota.v1.ClusterResourceQuotaStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the desired quota",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.quota.apis.quota.v1.ClusterResourceQuotaSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.user.apis.user.v1.GroupList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "GroupList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "GroupList",
          "Version": "v1",
          "Group": "user.openshift.io"
        }
      ],
      "description": "GroupList is a collection of Groups",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.user.apis.user.v1.Group"
          },
          "type": "array",
          "description": "Items is the list of groups"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.rbac.v1beta1.ClusterRoleBindingList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterRoleBindingList",
          "Version": "v1beta1",
          "Group": "rbac.authorization.k8s.io"
        }
      ],
      "description": "ClusterRoleBindingList is a collection of ClusterRoleBindings",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.rbac.v1beta1.ClusterRoleBinding"
          },
          "type": "array",
          "description": "Items is a list of ClusterRoleBindings"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Volume": {
      "required": [
        "name"
      ],
      "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
      "properties": {
        "photonPersistentDisk": {
          "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PhotonPersistentDiskVolumeSource"
        },
        "azureDisk": {
          "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.AzureDiskVolumeSource"
        },
        "portworxVolume": {
          "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PortworxVolumeSource"
        },
        "glusterfs": {
          "description": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.GlusterfsVolumeSource"
        },
        "gitRepo": {
          "description": "GitRepo represents a git repository at a particular revision.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.GitRepoVolumeSource"
        },
        "scaleIO": {
          "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ScaleIOVolumeSource"
        },
        "emptyDir": {
          "description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EmptyDirVolumeSource"
        },
        "cinder": {
          "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.CinderVolumeSource"
        },
        "flocker": {
          "description": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.FlockerVolumeSource"
        },
        "persistentVolumeClaim": {
          "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PersistentVolumeClaimVolumeSource"
        },
        "configMap": {
          "description": "ConfigMap represents a configMap that should populate this volume",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ConfigMapVolumeSource"
        },
        "cephfs": {
          "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.CephFSVolumeSource"
        },
        "name": {
          "type": "string",
          "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "iscsi": {
          "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ISCSIVolumeSource"
        },
        "projected": {
          "description": "Items for all in one resources secrets, configmaps, and downward API",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ProjectedVolumeSource"
        },
        "downwardAPI": {
          "description": "DownwardAPI represents downward API about the pod that should populate this volume",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.DownwardAPIVolumeSource"
        },
        "quobyte": {
          "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.QuobyteVolumeSource"
        },
        "secret": {
          "description": "Secret represents a secret that should populate this volume. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.SecretVolumeSource"
        },
        "fc": {
          "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.FCVolumeSource"
        },
        "nfs": {
          "description": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NFSVolumeSource"
        },
        "gcePersistentDisk": {
          "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.GCEPersistentDiskVolumeSource"
        },
        "hostPath": {
          "description": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.HostPathVolumeSource"
        },
        "flexVolume": {
          "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.FlexVolumeSource"
        },
        "awsElasticBlockStore": {
          "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.AWSElasticBlockStoreVolumeSource"
        },
        "rbd": {
          "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.RBDVolumeSource"
        },
        "azureFile": {
          "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.AzureFileVolumeSource"
        },
        "vsphereVolume": {
          "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.VsphereVirtualDiskVolumeSource"
        },
        "metadata": {
          "description": "Metadata represents metadata about the pod that should populate this volume Deprecated: Use downwardAPI instead.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.DeprecatedDownwardAPIVolumeSource"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ConfigMapKeySelector": {
      "required": [
        "key"
      ],
      "description": "Selects a key from a ConfigMap.",
      "properties": {
        "optional": {
          "type": "boolean",
          "description": "Specify whether the ConfigMap or it's key must be defined"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "key": {
          "type": "string",
          "description": "The key to select."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildConfig": {
      "required": [
        "spec",
        "status"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "BuildConfig",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "BuildConfig",
          "Version": "v1",
          "Group": "build.openshift.io"
        }
      ],
      "description": "Build configurations define a build process for new Docker images. There are three types of builds possible - a Docker build using a Dockerfile, a Source-to-Image build that uses a specially prepared base image that accepts source code that it can make runnable, and a custom build that can run // arbitrary Docker images as a base and accept the build parameters. Builds run on the cluster and on completion are pushed to the Docker registry specified in the \"output\" section. A build can be triggered via a webhook, when the base image changes, or when a user manually requests a new build be // created.\n\nEach build created by a build configuration is numbered and refers back to its parent configuration. Multiple builds can be triggered at once. Builds that do not have \"output\" set can be used to test code or run a verification build.",
      "properties": {
        "status": {
          "description": "status holds any relevant information about a build config",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildConfigStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "spec holds all the input necessary to produce a new build, and the conditions when to trigger them.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildConfigSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "metadata for BuildConfig.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ScaleStatus": {
      "required": [
        "replicas"
      ],
      "description": "represents the current status of a scale subresource.",
      "properties": {
        "replicas": {
          "type": "integer",
          "description": "actual number of observed instances of the scaled object.",
          "format": "int32"
        },
        "targetSelector": {
          "type": "string",
          "description": "label selector for pods that should match the replicas count. This is a serializated version of both map-based and more expressive set-based selectors. This is done to avoid introspection in the clients. The string will be in the same format as the query-param syntax. If the target type only supports map-based selectors, both this field and map-based selector field are populated. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
        },
        "selector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "label query over pods that should match the replicas count. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BitbucketWebHookCause": {
      "description": "BitbucketWebHookCause has information about a Bitbucket webhook that triggered a build.",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Secret is the obfuscated webhook secret that triggered a build."
        },
        "revision": {
          "description": "Revision is the git source revision information of the trigger.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.SourceRevision"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
      "type": "string",
      "format": "date-time"
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.SupplementalGroupsStrategyOptions": {
      "description": "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.",
      "properties": {
        "ranges": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.IDRange"
          },
          "type": "array",
          "description": "Ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end."
        },
        "type": {
          "type": "string",
          "description": "Type is the strategy that will dictate what supplemental groups is used in the SecurityContext."
        }
      }
    },
    "io.k8s.apimachinery.pkg.runtime.RawExtension": {
      "required": [
        "Raw"
      ],
      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.Object `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// External package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// On the wire, the JSON will look something like this: {\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\": {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\",\n\t},\n}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
      "properties": {
        "Raw": {
          "type": "string",
          "description": "Raw is the underlying serialization of this object.",
          "format": "byte"
        }
      }
    },
    "com.github.openshift.origin.pkg.sdn.apis.network.v1.EgressNetworkPolicySpec": {
      "required": [
        "egress"
      ],
      "description": "EgressNetworkPolicySpec provides a list of policies on outgoing network traffic",
      "properties": {
        "egress": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.sdn.apis.network.v1.EgressNetworkPolicyRule"
          },
          "type": "array",
          "description": "egress contains the list of egress policy rules"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ISCSIVolumeSource": {
      "required": [
        "targetPortal",
        "iqn",
        "lun"
      ],
      "description": "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
      "properties": {
        "targetPortal": {
          "type": "string",
          "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
        },
        "portals": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "iSCSI target portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
        },
        "secretRef": {
          "description": "CHAP secret for iSCSI target and initiator authentication",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "fsType": {
          "type": "string",
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi"
        },
        "readOnly": {
          "type": "boolean",
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false."
        },
        "chapAuthSession": {
          "type": "boolean",
          "description": "whether support iSCSI Session CHAP authentication"
        },
        "iscsiInterface": {
          "type": "string",
          "description": "Optional: Defaults to 'default' (tcp). iSCSI interface name that uses an iSCSI transport."
        },
        "iqn": {
          "type": "string",
          "description": "Target iSCSI Qualified Name."
        },
        "chapAuthDiscovery": {
          "type": "boolean",
          "description": "whether support iSCSI Discovery CHAP authentication"
        },
        "lun": {
          "type": "integer",
          "description": "iSCSI target lun number.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.Policy": {
      "required": [
        "lastModified",
        "roles"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Policy",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "Policy",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "Policy is a object that holds all the Roles for a particular namespace.  There is at most one Policy document per namespace.",
      "properties": {
        "lastModified": {
          "description": "LastModified is the last time that any part of the Policy was created, updated, or deleted",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "roles": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.NamedRole"
          },
          "type": "array",
          "description": "Roles holds all the Roles held by this Policy, mapped by Role.Name"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicySubjectReviewSpec": {
      "required": [
        "template"
      ],
      "description": "PodSecurityPolicySubjectReviewSpec defines specification for PodSecurityPolicySubjectReview",
      "properties": {
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "groups is the groups you're testing for."
        },
        "template": {
          "description": "template is the PodTemplateSpec to check. If template.spec.serviceAccountName is empty it will not be defaulted. If its non-empty, it will be checked.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        },
        "user": {
          "type": "string",
          "description": "user is the user you're testing for. If you specify \"user\" but not \"group\", then is it interpreted as \"What if user were not a member of any groups. If user and groups are empty, then the check is performed using *only* the serviceAccountName in the template."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.DeploymentList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "DeploymentList",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "DeploymentList is a list of Deployments.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.Deployment"
          },
          "type": "array",
          "description": "Items is the list of Deployments."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.autoscaling.v1.ScaleStatus": {
      "required": [
        "replicas"
      ],
      "description": "ScaleStatus represents the current status of a scale subresource.",
      "properties": {
        "replicas": {
          "type": "integer",
          "description": "actual number of observed instances of the scaled object.",
          "format": "int32"
        },
        "selector": {
          "type": "string",
          "description": "label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PodSpec": {
      "required": [
        "containers"
      ],
      "description": "PodSpec is a description of a pod.",
      "properties": {
        "dnsPolicy": {
          "type": "string",
          "description": "Set DNS policy for containers within the pod. One of 'ClusterFirstWithHostNet', 'ClusterFirst' or 'Default'. Defaults to \"ClusterFirst\". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'."
        },
        "serviceAccountName": {
          "type": "string",
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md"
        },
        "schedulerName": {
          "type": "string",
          "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler."
        },
        "hostNetwork": {
          "type": "boolean",
          "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false."
        },
        "restartPolicy": {
          "type": "string",
          "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy"
        },
        "hostIPC": {
          "type": "boolean",
          "description": "Use the host's ipc namespace. Optional: Default to false."
        },
        "automountServiceAccountToken": {
          "type": "boolean",
          "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted."
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodSecurityContext"
        },
        "nodeName": {
          "type": "string",
          "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements."
        },
        "hostname": {
          "type": "string",
          "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value."
        },
        "serviceAccount": {
          "type": "string",
          "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead."
        },
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection/README"
        },
        "activeDeadlineSeconds": {
          "type": "integer",
          "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
          "format": "int64"
        },
        "terminationGracePeriodSeconds": {
          "type": "integer",
          "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
          "format": "int64"
        },
        "affinity": {
          "description": "If specified, the pod's scheduling constraints",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Affinity"
        },
        "containers": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Container"
          },
          "type": "array",
          "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers"
        },
        "volumes": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Volume"
          },
          "type": "array",
          "description": "List of volumes that can be mounted by containers belonging to the pod. More info: http://kubernetes.io/docs/user-guide/volumes"
        },
        "tolerations": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Toleration"
          },
          "type": "array",
          "description": "If specified, the pod's tolerations."
        },
        "subdomain": {
          "type": "string",
          "description": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all."
        },
        "initContainers": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Container"
          },
          "type": "array",
          "description": "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers"
        },
        "imagePullSecrets": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
          },
          "type": "array",
          "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod"
        },
        "hostPID": {
          "type": "boolean",
          "description": "Use the host's pid namespace. Optional: Default to false."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NodeSystemInfo": {
      "required": [
        "machineID",
        "systemUUID",
        "bootID",
        "kernelVersion",
        "osImage",
        "containerRuntimeVersion",
        "kubeletVersion",
        "kubeProxyVersion",
        "operatingSystem",
        "architecture"
      ],
      "description": "NodeSystemInfo is a set of ids/uuids to uniquely identify the node.",
      "properties": {
        "kernelVersion": {
          "type": "string",
          "description": "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64)."
        },
        "kubeletVersion": {
          "type": "string",
          "description": "Kubelet Version reported by the node."
        },
        "containerRuntimeVersion": {
          "type": "string",
          "description": "ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0)."
        },
        "machineID": {
          "type": "string",
          "description": "MachineID reported by the node. For unique machine identification in the cluster this field is prefered. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html"
        },
        "kubeProxyVersion": {
          "type": "string",
          "description": "KubeProxy Version reported by the node."
        },
        "bootID": {
          "type": "string",
          "description": "Boot ID reported by the node."
        },
        "osImage": {
          "type": "string",
          "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy))."
        },
        "architecture": {
          "type": "string",
          "description": "The Architecture reported by the node"
        },
        "systemUUID": {
          "type": "string",
          "description": "SystemUUID reported by the node. For unique machine identification MachineID is prefered. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html"
        },
        "operatingSystem": {
          "type": "string",
          "description": "The Operating System reported by the node"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.KeyToPath": {
      "required": [
        "key",
        "path"
      ],
      "description": "Maps a string key to a path within a volume.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
        },
        "mode": {
          "type": "integer",
          "description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32"
        },
        "key": {
          "type": "string",
          "description": "The key to project."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.batch.v1.JobStatus": {
      "description": "JobStatus represents the current state of a Job.",
      "properties": {
        "failed": {
          "type": "integer",
          "description": "Failed is the number of pods which reached Phase Failed.",
          "format": "int32"
        },
        "completionTime": {
          "description": "CompletionTime represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "startTime": {
          "description": "StartTime represents time when the job was acknowledged by the Job Manager. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "succeeded": {
          "type": "integer",
          "description": "Succeeded is the number of pods which reached Phase Succeeded.",
          "format": "int32"
        },
        "active": {
          "type": "integer",
          "description": "Active is the number of actively running pods.",
          "format": "int32"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.batch.v1.JobCondition"
          },
          "type": "array",
          "description": "Conditions represent the latest available observations of an object's current state. More info: http://kubernetes.io/docs/user-guide/jobs"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ReplicaSetCondition": {
      "required": [
        "type",
        "status"
      ],
      "description": "ReplicaSetCondition describes the state of a replica set at a certain point.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "lastTransitionTime": {
          "description": "The last time the condition transitioned from one status to another.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string",
          "description": "A human readable message indicating details about the transition."
        },
        "type": {
          "type": "string",
          "description": "Type of replica set condition."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the condition's last transition."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.GCEPersistentDiskVolumeSource": {
      "required": [
        "pdName"
      ],
      "description": "Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.",
      "properties": {
        "readOnly": {
          "type": "boolean",
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
        },
        "partition": {
          "type": "integer",
          "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
          "format": "int32"
        },
        "pdName": {
          "type": "string",
          "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
        },
        "fsType": {
          "type": "string",
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ServiceAccount": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ServiceAccount",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "secrets": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
          },
          "type": "array",
          "description": "Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: http://kubernetes.io/docs/user-guide/secrets"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "imagePullSecrets": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
          },
          "type": "array",
          "description": "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: http://kubernetes.io/docs/user-guide/secrets#manually-specifying-an-imagepullsecret"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "automountServiceAccountToken": {
          "type": "boolean",
          "description": "AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.Build": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Build",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "Build",
          "Version": "v1",
          "Group": "build.openshift.io"
        }
      ],
      "description": "Build encapsulates the inputs needed to produce a new deployable image, as well as the status of the execution and a reference to the Pod which executed the build.",
      "properties": {
        "status": {
          "description": "status is the current status of the build.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "spec is all the inputs used to execute the build.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.BuildSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PersistentVolumeSpec": {
      "description": "PersistentVolumeSpec is the specification of a persistent volume.",
      "properties": {
        "photonPersistentDisk": {
          "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PhotonPersistentDiskVolumeSource"
        },
        "persistentVolumeReclaimPolicy": {
          "type": "string",
          "description": "What happens to a persistent volume when released from its claim. Valid options are Retain (default) and Recycle. Recycling must be supported by the volume plugin underlying this persistent volume. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#recycling-policy"
        },
        "azureDisk": {
          "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.AzureDiskVolumeSource"
        },
        "portworxVolume": {
          "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PortworxVolumeSource"
        },
        "glusterfs": {
          "description": "Glusterfs represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.GlusterfsVolumeSource"
        },
        "claimRef": {
          "description": "ClaimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#binding",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "flexVolume": {
          "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.FlexVolumeSource"
        },
        "cinder": {
          "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.CinderVolumeSource"
        },
        "flocker": {
          "description": "Flocker represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.FlockerVolumeSource"
        },
        "storageClassName": {
          "type": "string",
          "description": "Name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass."
        },
        "rbd": {
          "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.RBDVolumeSource"
        },
        "capacity": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object",
          "description": "A description of the persistent volume's resources and capacity. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#capacity"
        },
        "accessModes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "AccessModes contains all ways the volume can be mounted. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes"
        },
        "iscsi": {
          "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ISCSIVolumeSource"
        },
        "quobyte": {
          "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.QuobyteVolumeSource"
        },
        "fc": {
          "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.FCVolumeSource"
        },
        "nfs": {
          "description": "NFS represents an NFS mount on the host. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NFSVolumeSource"
        },
        "gcePersistentDisk": {
          "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.GCEPersistentDiskVolumeSource"
        },
        "hostPath": {
          "description": "HostPath represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.HostPathVolumeSource"
        },
        "scaleIO": {
          "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ScaleIOVolumeSource"
        },
        "awsElasticBlockStore": {
          "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.AWSElasticBlockStoreVolumeSource"
        },
        "cephfs": {
          "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.CephFSVolumeSource"
        },
        "azureFile": {
          "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.AzureFileVolumeSource"
        },
        "vsphereVolume": {
          "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.VsphereVirtualDiskVolumeSource"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.rbac.v1beta1.ClusterRoleList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterRoleList",
          "Version": "v1beta1",
          "Group": "rbac.authorization.k8s.io"
        }
      ],
      "description": "ClusterRoleList is a collection of ClusterRoles",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.rbac.v1beta1.ClusterRole"
          },
          "type": "array",
          "description": "Items is a list of ClusterRoles"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.DeploymentSpec": {
      "required": [
        "template"
      ],
      "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
      "properties": {
        "progressDeadlineSeconds": {
          "type": "integer",
          "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Once autoRollback is implemented, the deployment controller will automatically rollback failed deployments. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
          "format": "int32"
        },
        "selector": {
          "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates that the deployment is paused."
        },
        "rollbackTo": {
          "description": "The config this deployment is rolling back to. Will be cleared after rollback is done.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.RollbackConfig"
        },
        "template": {
          "description": "Template describes the pods that will be created.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 2.",
          "format": "int32"
        },
        "strategy": {
          "description": "The deployment strategy to use to replace existing pods with new ones.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.DeploymentStrategy"
        },
        "minReadySeconds": {
          "type": "integer",
          "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1.SubjectAccessReviewStatus": {
      "required": [
        "allowed"
      ],
      "description": "SubjectAccessReviewStatus",
      "properties": {
        "reason": {
          "type": "string",
          "description": "Reason is optional.  It indicates why a request was allowed or denied."
        },
        "evaluationError": {
          "type": "string",
          "description": "EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request."
        },
        "allowed": {
          "type": "boolean",
          "description": "Allowed is required.  True if the action would be allowed, false otherwise."
        }
      }
    },
    "com.github.openshift.origin.pkg.oauth.apis.oauth.v1.OAuthAuthorizeToken": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "OAuthAuthorizeToken",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "OAuthAuthorizeToken",
          "Version": "v1",
          "Group": "oauth.openshift.io"
        }
      ],
      "description": "OAuthAuthorizeToken describes an OAuth authorization token",
      "properties": {
        "expiresIn": {
          "type": "integer",
          "description": "ExpiresIn is the seconds from CreationTime before this token expires.",
          "format": "int64"
        },
        "scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Scopes is an array of the requested scopes."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "userName": {
          "type": "string",
          "description": "UserName is the user name associated with this token"
        },
        "state": {
          "type": "string",
          "description": "State data from request"
        },
        "codeChallengeMethod": {
          "type": "string",
          "description": "CodeChallengeMethod is the optional code_challenge_method associated with this authorization code, as described in rfc7636"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "userUID": {
          "type": "string",
          "description": "UserUID is the unique UID associated with this token. UserUID and UserName must both match for this token to be valid."
        },
        "codeChallenge": {
          "type": "string",
          "description": "CodeChallenge is the optional code_challenge associated with this authorization code, as described in rfc7636"
        },
        "redirectURI": {
          "type": "string",
          "description": "RedirectURI is the redirection associated with the token."
        },
        "clientName": {
          "type": "string",
          "description": "ClientName references the client that created this token."
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.template.apis.template.v1.BrokerTemplateInstanceList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "BrokerTemplateInstanceList",
          "Version": "v1",
          "Group": "template.openshift.io"
        }
      ],
      "description": "BrokerTemplateInstanceList is a list of BrokerTemplateInstance objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.template.apis.template.v1.BrokerTemplateInstance"
          },
          "type": "array",
          "description": "items is a list of BrokerTemplateInstances"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IngressSpec": {
      "description": "IngressSpec describes the Ingress the user wishes to exist.",
      "properties": {
        "rules": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IngressRule"
          },
          "type": "array",
          "description": "A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend."
        },
        "tls": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IngressTLS"
          },
          "type": "array",
          "description": "TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI."
        },
        "backend": {
          "description": "A default backend capable of servicing requests that don't match any rule. At least one of 'backend' or 'rules' must be specified. This field is optional to allow the loadbalancer controller or defaulting logic to specify a global default.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IngressBackend"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.rbac.v1beta1.RoleList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "RoleList",
          "Version": "v1beta1",
          "Group": "rbac.authorization.k8s.io"
        }
      ],
      "description": "RoleList is a collection of Roles",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.rbac.v1beta1.Role"
          },
          "type": "array",
          "description": "Items is a list of Roles"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HorizontalPodAutoscaler": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "HorizontalPodAutoscaler",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "configuration of a horizontal pod autoscaler.",
      "properties": {
        "status": {
          "description": "current information about the autoscaler.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HorizontalPodAutoscalerStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "behaviour of autoscaler. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HorizontalPodAutoscalerSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentConfig": {
      "required": [
        "spec",
        "status"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "DeploymentConfig",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "DeploymentConfig",
          "Version": "v1",
          "Group": "apps.openshift.io"
        }
      ],
      "description": "Deployment Configs define the template for a pod and manages deploying new images or configuration changes. A single deployment configuration is usually analogous to a single micro-service. Can support many different deployment patterns, including full restart, customizable rolling updates, and  fully custom behaviors, as well as pre- and post- deployment hooks. Each individual deployment is represented as a replication controller.\n\nA deployment is \"triggered\" when its configuration is changed or a tag in an Image Stream is changed. Triggers can be disabled to allow manual control over a deployment. The \"strategy\" determines how the deployment is carried out and may be changed at any time. The `latestVersion` field is updated when a new deployment is triggered by any means.",
      "properties": {
        "status": {
          "description": "Status represents the current deployment state.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentConfigStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec represents a desired deployment state and how to deploy to it.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentConfigSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PersistentVolumeStatus": {
      "description": "PersistentVolumeStatus is the current status of a persistent volume.",
      "properties": {
        "phase": {
          "type": "string",
          "description": "Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#phase"
        },
        "message": {
          "type": "string",
          "description": "A human-readable message indicating details about why the volume is in this state."
        },
        "reason": {
          "type": "string",
          "description": "Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.rbac.v1beta1.RoleRef": {
      "required": [
        "apiGroup",
        "kind",
        "name"
      ],
      "description": "RoleRef contains information that points to the role being used",
      "properties": {
        "apiGroup": {
          "type": "string",
          "description": "APIGroup is the group for the resource being referenced"
        },
        "kind": {
          "type": "string",
          "description": "Kind is the type of resource being referenced"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced"
        }
      }
    },
    "com.github.openshift.origin.pkg.sdn.apis.network.v1.ClusterNetwork": {
      "required": [
        "network",
        "hostsubnetlength",
        "serviceNetwork"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterNetwork",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ClusterNetwork",
          "Version": "v1",
          "Group": "network.openshift.io"
        }
      ],
      "description": "ClusterNetwork describes the cluster network. There is normally only one object of this type, named \"default\", which is created by the SDN network plugin based on the master configuration when the cluster is brought up for the first time.",
      "properties": {
        "hostsubnetlength": {
          "type": "integer",
          "description": "HostSubnetLength is the number of bits of network to allocate to each node. eg, 8 would mean that each node would have a /24 slice of the overlay network for its pods",
          "format": "int64"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "network": {
          "type": "string",
          "description": "Network is a CIDR string specifying the global overlay network's L3 space"
        },
        "serviceNetwork": {
          "type": "string",
          "description": "ServiceNetwork is the CIDR range that Service IP addresses are allocated from"
        },
        "pluginName": {
          "type": "string",
          "description": "PluginName is the name of the network plugin being used"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ConfigMapEnvSource": {
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
      "properties": {
        "optional": {
          "type": "boolean",
          "description": "Specify whether the ConfigMap must be defined"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery": {
      "required": [
        "groupVersion",
        "version"
      ],
      "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
      "properties": {
        "groupVersion": {
          "type": "string",
          "description": "groupVersion specifies the API group and version in the form \"group/version\""
        },
        "version": {
          "type": "string",
          "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion."
        }
      }
    },
    "com.github.openshift.origin.pkg.quota.apis.quota.v1.ClusterResourceQuota": {
      "required": [
        "metadata",
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterResourceQuota",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ClusterResourceQuota",
          "Version": "v1",
          "Group": "quota.openshift.io"
        }
      ],
      "description": "ClusterResourceQuota mirrors ResourceQuota at a cluster scope.  This object is easily convertible to synthetic ResourceQuota object to allow quota evaluation re-use.",
      "properties": {
        "status": {
          "description": "Status defines the actual enforced quota and its current usage",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.quota.apis.quota.v1.ClusterResourceQuotaStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the desired quota",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.quota.apis.quota.v1.ClusterResourceQuotaSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.oauth.apis.oauth.v1.OAuthAccessToken": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "OAuthAccessToken",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "OAuthAccessToken",
          "Version": "v1",
          "Group": "oauth.openshift.io"
        }
      ],
      "description": "OAuthAccessToken describes an OAuth access token",
      "properties": {
        "expiresIn": {
          "type": "integer",
          "description": "ExpiresIn is the seconds from CreationTime before this token expires.",
          "format": "int64"
        },
        "scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Scopes is an array of the requested scopes."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "refreshToken": {
          "type": "string",
          "description": "RefreshToken is the value by which this token can be renewed. Can be blank."
        },
        "userName": {
          "type": "string",
          "description": "UserName is the user name associated with this token"
        },
        "authorizeToken": {
          "type": "string",
          "description": "AuthorizeToken contains the token that authorized this token"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "userUID": {
          "type": "string",
          "description": "UserUID is the unique UID associated with this token"
        },
        "redirectURI": {
          "type": "string",
          "description": "RedirectURI is the redirection associated with the token."
        },
        "clientName": {
          "type": "string",
          "description": "ClientName references the client that created this token."
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentConfigSpec": {
      "required": [
        "strategy",
        "triggers",
        "replicas",
        "test"
      ],
      "description": "DeploymentConfigSpec represents the desired state of the deployment.",
      "properties": {
        "replicas": {
          "type": "integer",
          "description": "Replicas is the number of desired replicas.",
          "format": "int32"
        },
        "triggers": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentTriggerPolicy"
          },
          "type": "array",
          "description": "Triggers determine how updates to a DeploymentConfig result in new deployments. If no triggers are defined, a new deployment can only occur as a result of an explicit client update to the DeploymentConfig with a new LatestVersion. If null, defaults to having a config change trigger."
        },
        "strategy": {
          "description": "Strategy describes how a deployment is executed.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentStrategy"
        },
        "paused": {
          "type": "boolean",
          "description": "Paused indicates that the deployment config is paused resulting in no new deployments on template changes or changes in the template caused by other triggers."
        },
        "template": {
          "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        },
        "test": {
          "type": "boolean",
          "description": "Test ensures that this deployment config will have zero replicas except while a deployment is running. This allows the deployment config to be used as a continuous deployment test - triggering on images, running the deployment, and then succeeding or failing. Post strategy hooks and After actions can be used to integrate successful deployment with an action."
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "description": "RevisionHistoryLimit is the number of old ReplicationControllers to retain to allow for rollbacks. This field is a pointer to allow for differentiation between an explicit zero and not specified.",
          "format": "int32"
        },
        "selector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Selector is a label query over pods that should match the Replicas count."
        },
        "minReadySeconds": {
          "type": "integer",
          "description": "MinReadySeconds is the minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
          "format": "int32"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
      "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body."
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.StatefulSetStatus": {
      "required": [
        "replicas"
      ],
      "description": "StatefulSetStatus represents the current state of a StatefulSet.",
      "properties": {
        "observedGeneration": {
          "type": "integer",
          "description": "most recent generation observed by this StatefulSet.",
          "format": "int64"
        },
        "replicas": {
          "type": "integer",
          "description": "Replicas is the number of actual replicas.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.ImageStreamImage": {
      "required": [
        "image"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ImageStreamImage",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ImageStreamImage",
          "Version": "v1",
          "Group": "image.openshift.io"
        }
      ],
      "description": "ImageStreamImage represents an Image that is retrieved by image name from an ImageStream.",
      "properties": {
        "image": {
          "description": "Image associated with the ImageStream and image name.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.Image"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.DeploymentList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "DeploymentList",
          "Version": "v1beta1",
          "Group": "apps"
        }
      ],
      "description": "DeploymentList is a list of Deployments.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.Deployment"
          },
          "type": "array",
          "description": "Items is the list of Deployments."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.JenkinsPipelineBuildStrategy": {
      "description": "JenkinsPipelineBuildStrategy holds parameters specific to a Jenkins Pipeline build. This strategy is in tech preview.",
      "properties": {
        "env": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EnvVar"
          },
          "type": "array",
          "description": "env contains additional environment variables you want to pass into a build pipeline."
        },
        "jenkinsfilePath": {
          "type": "string",
          "description": "JenkinsfilePath is the optional path of the Jenkinsfile that will be used to configure the pipeline relative to the root of the context (contextDir). If both JenkinsfilePath & Jenkinsfile are both not specified, this defaults to Jenkinsfile in the root of the specified contextDir."
        },
        "jenkinsfile": {
          "type": "string",
          "description": "Jenkinsfile defines the optional raw contents of a Jenkinsfile which defines a Jenkins pipeline build."
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.TagReference": {
      "required": [
        "name",
        "annotations",
        "generation"
      ],
      "description": "TagReference specifies optional annotations for images using this tag and an optional reference to an ImageStreamTag, ImageStreamImage, or DockerImage this tag should track.",
      "properties": {
        "importPolicy": {
          "description": "Import is information that controls how images may be imported by the server.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.TagImportPolicy"
        },
        "referencePolicy": {
          "description": "ReferencePolicy defines how other components should consume the image",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.TagReferencePolicy"
        },
        "from": {
          "description": "From is a reference to an image stream tag or image stream this tag should track",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "name": {
          "type": "string",
          "description": "Name of the tag"
        },
        "reference": {
          "type": "boolean",
          "description": "Reference states if the tag will be imported. Default value is false, which means the tag will be imported."
        },
        "generation": {
          "type": "integer",
          "description": "Generation is the image stream generation that updated this tag - setting it to 0 is an indication that the generation must be updated. Legacy clients will send this as nil, which means the client doesn't know or care.",
          "format": "int64"
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Annotations associated with images using this tag"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "clusterName": {
          "type": "string",
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
        },
        "deletionGracePeriodSeconds": {
          "type": "integer",
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "format": "int64"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
        },
        "finalizers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed."
        },
        "generation": {
          "type": "integer",
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "format": "int64"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#idempotency"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
        },
        "ownerReferences": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "type": "array",
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller."
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations"
        },
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ThirdPartyResource": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ThirdPartyResource",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "A ThirdPartyResource is a generic representation of a resource, it is used by add-ons and plugins to add new resource types to the API.  It consists of one or more Versions of the api.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "metadata": {
          "description": "Standard object metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "description": {
          "type": "string",
          "description": "Description is the description of this object."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "versions": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.APIVersion"
          },
          "type": "array",
          "description": "Versions are versions for this third party object"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.SelfSubjectRulesReviewSpec": {
      "required": [
        "scopes"
      ],
      "description": "SelfSubjectRulesReviewSpec adds information about how to conduct the check",
      "properties": {
        "scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\". Nil means \"use the scopes on this request\"."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Event": {
      "required": [
        "metadata",
        "involvedObject"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Event",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "Event is a report of an event somewhere in the cluster.",
      "properties": {
        "count": {
          "type": "integer",
          "description": "The number of times this event has occurred.",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "firstTimestamp": {
          "description": "The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastTimestamp": {
          "description": "The time at which the most recent occurrence of this event was recorded.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "source": {
          "description": "The component reporting this event. Should be a short machine understandable string.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EventSource"
        },
        "reason": {
          "type": "string",
          "description": "This should be a short, machine understandable string that gives the reason for the transition into the object's current status."
        },
        "involvedObject": {
          "description": "The object that this event is about.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "message": {
          "type": "string",
          "description": "A human-readable description of the status of this operation."
        },
        "type": {
          "type": "string",
          "description": "Type of this event (Normal, Warning), new types could be added in the future"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.template.apis.template.v1.Parameter": {
      "required": [
        "name"
      ],
      "description": "Parameter defines a name/value variable that is to be processed during the Template to Config transformation.",
      "properties": {
        "from": {
          "type": "string",
          "description": "From is an input value for the generator. Optional."
        },
        "description": {
          "type": "string",
          "description": "Description of a parameter. Optional."
        },
        "displayName": {
          "type": "string",
          "description": "Optional: The name that will show in UI instead of parameter 'Name'"
        },
        "required": {
          "type": "boolean",
          "description": "Optional: Indicates the parameter must have a value.  Defaults to false."
        },
        "generate": {
          "type": "string",
          "description": "generate specifies the generator to be used to generate random string from an input value specified by From field. The result string is stored into Value field. If empty, no generator is being used, leaving the result Value untouched. Optional.\n\nThe only supported generator is \"expression\", which accepts a \"from\" value in the form of a simple regular expression containing the range expression \"[a-zA-Z0-9]\", and the length expression \"a{length}\".\n\nExamples:\n\nfrom             | value ----------------------------- \"test[0-9]{1}x\"  | \"test7x\" \"[0-1]{8}\"       | \"01001100\" \"0x[A-F0-9]{4}\"  | \"0xB3AF\" \"[a-zA-Z0-9]{8}\" | \"hW4yQU5i\""
        },
        "value": {
          "type": "string",
          "description": "Value holds the Parameter data. If specified, the generator will be ignored. The value replaces all occurrences of the Parameter ${Name} expression during the Template to Config transformation. Optional."
        },
        "name": {
          "type": "string",
          "description": "Name must be set and it can be referenced in Template Items using ${PARAMETER_NAME}. Required."
        }
      }
    },
    "com.github.openshift.origin.pkg.route.apis.route.v1.TLSConfig": {
      "required": [
        "termination"
      ],
      "description": "TLSConfig defines config used to secure a route and provide termination",
      "properties": {
        "key": {
          "type": "string",
          "description": "key provides key file contents"
        },
        "certificate": {
          "type": "string",
          "description": "certificate provides certificate contents"
        },
        "insecureEdgeTerminationPolicy": {
          "type": "string",
          "description": "insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80.\n\n* Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port."
        },
        "caCertificate": {
          "type": "string",
          "description": "caCertificate provides the cert authority certificate contents"
        },
        "termination": {
          "type": "string",
          "description": "termination indicates termination type."
        },
        "destinationCACertificate": {
          "type": "string",
          "description": "destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.LimitRangeSpec": {
      "required": [
        "limits"
      ],
      "description": "LimitRangeSpec defines a min/max usage limit for resources that match on kind.",
      "properties": {
        "limits": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LimitRangeItem"
          },
          "type": "array",
          "description": "Limits is the list of LimitRangeItem objects that are enforced."
        }
      }
    },
    "com.github.openshift.origin.pkg.template.apis.template.v1.TemplateList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "TemplateList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "TemplateList",
          "Version": "v1",
          "Group": "template.openshift.io"
        }
      ],
      "description": "TemplateList is a list of Template objects.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.template.apis.template.v1.Template"
          },
          "type": "array",
          "description": "Items is a list of templates"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.route.apis.route.v1.RouteStatus": {
      "required": [
        "ingress"
      ],
      "description": "RouteStatus provides relevant info about the status of a route, including which routers acknowledge it.",
      "properties": {
        "ingress": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.route.apis.route.v1.RouteIngress"
          },
          "type": "array",
          "description": "ingress describes the places where the route may be exposed. The list of ingress points may contain duplicate Host or RouterName values. Routes are considered live once they are `Ready`"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Taint": {
      "required": [
        "key",
        "effect"
      ],
      "description": "The node this Taint is attached to has the effect \"effect\" on any pod that that does not tolerate the Taint.",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. The taint key to be applied to a node."
        },
        "timeAdded": {
          "description": "TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "effect": {
          "type": "string",
          "description": "Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute."
        },
        "value": {
          "type": "string",
          "description": "Required. The taint value corresponding to the taint key."
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
      "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
      "properties": {
        "uid": {
          "type": "string",
          "description": "Specifies the target UID."
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.SecurityContextConstraintsList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "SecurityContextConstraintsList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "SecurityContextConstraintsList",
          "Version": "v1",
          "Group": "security.openshift.io"
        }
      ],
      "description": "SecurityContextConstraintsList is a list of SecurityContextConstraints objects",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.SecurityContextConstraints"
          },
          "type": "array",
          "description": "List of security context constraints."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ReplicaSetStatus": {
      "required": [
        "replicas"
      ],
      "description": "ReplicaSetStatus represents the current status of a ReplicaSet.",
      "properties": {
        "availableReplicas": {
          "type": "integer",
          "description": "The number of available replicas (ready for at least minReadySeconds) for this replica set.",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "description": "Replicas is the most recently oberved number of replicas. More info: http://kubernetes.io/docs/user-guide/replication-controller#what-is-a-replication-controller",
          "format": "int32"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration reflects the generation of the most recently observed ReplicaSet.",
          "format": "int64"
        },
        "readyReplicas": {
          "type": "integer",
          "description": "The number of ready replicas for this replica set.",
          "format": "int32"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ReplicaSetCondition"
          },
          "type": "array",
          "description": "Represents the latest available observations of a replica set's current state."
        },
        "fullyLabeledReplicas": {
          "type": "integer",
          "description": "The number of pods that have labels matching the labels of the pod template of the replicaset.",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.origin.pkg.oauth.apis.oauth.v1.OAuthAccessTokenList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "OAuthAccessTokenList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "OAuthAccessTokenList",
          "Version": "v1",
          "Group": "oauth.openshift.io"
        }
      ],
      "description": "OAuthAccessTokenList is a collection of OAuth access tokens",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.oauth.apis.oauth.v1.OAuthAccessToken"
          },
          "type": "array",
          "description": "Items is the list of OAuth access tokens"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.sdn.apis.network.v1.NetNamespace": {
      "required": [
        "netname",
        "netid"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "NetNamespace",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "NetNamespace",
          "Version": "v1",
          "Group": "network.openshift.io"
        }
      ],
      "description": "NetNamespace describes a single isolated network. When using the redhat/openshift-ovs-multitenant plugin, every Namespace will have a corresponding NetNamespace object with the same name. (When using redhat/openshift-ovs-subnet, NetNamespaces are not used.)",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "netname": {
          "type": "string",
          "description": "NetName is the name of the network namespace. (This is the same as the object's name, but both fields must be set.)"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "netid": {
          "type": "integer",
          "description": "NetID is the network identifier of the network namespace assigned to each overlay network packet. This can be manipulated with the \"oadm pod-network\" commands.",
          "format": "int64"
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.SELinuxContextStrategyOptions": {
      "description": "SELinuxContextStrategyOptions defines the strategy type and any options used to create the strategy.",
      "properties": {
        "seLinuxOptions": {
          "description": "seLinuxOptions required to run as; required for MustRunAs",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.SELinuxOptions"
        },
        "type": {
          "type": "string",
          "description": "Type is the strategy that will dictate what SELinux context is used in the SecurityContext."
        }
      }
    },
    "com.github.openshift.origin.pkg.route.apis.route.v1.RouteTargetReference": {
      "required": [
        "kind",
        "name",
        "weight"
      ],
      "description": "RouteTargetReference specifies the target that resolve into endpoints. Only the 'Service' kind is allowed. Use 'weight' field to emphasize one over others.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of target that the route is referring to. Currently, only 'Service' is allowed"
        },
        "name": {
          "type": "string",
          "description": "name of the service/target that is being referred to. e.g. name of the service"
        },
        "weight": {
          "type": "integer",
          "description": "weight as an integer between 1 and 256 that specifies the target's relative weight against other target reference objects",
          "format": "int32"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authentication.v1.TokenReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "TokenReview",
          "Version": "v1",
          "Group": "authentication.k8s.io"
        }
      ],
      "description": "TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.",
      "properties": {
        "status": {
          "description": "Status is filled in by the server and indicates whether the request can be authenticated.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authentication.v1.TokenReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec holds information about the request being evaluated",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.authentication.v1.TokenReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.SecretProjection": {
      "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.KeyToPath"
          },
          "type": "array",
          "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'."
        },
        "optional": {
          "type": "boolean",
          "description": "Specify whether the Secret or its key must be defined"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }
      }
    },
    "com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentConfigList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "DeploymentConfigList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "DeploymentConfigList",
          "Version": "v1",
          "Group": "apps.openshift.io"
        }
      ],
      "description": "DeploymentConfigList is a collection of deployment configs.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.deploy.apis.apps.v1.DeploymentConfig"
          },
          "type": "array",
          "description": "Items is a list of deployment configs"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.Endpoints": {
      "required": [
        "subsets"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Endpoints",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "Endpoints is a collection of endpoints that implement the actual service. Example:\n  Name: \"mysvc\",\n  Subsets: [\n    {\n      Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n      Ports: [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n    },\n    {\n      Addresses: [{\"ip\": \"10.10.3.3\"}],\n      Ports: [{\"name\": \"a\", \"port\": 93}, {\"name\": \"b\", \"port\": 76}]\n    },\n ]",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "subsets": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EndpointSubset"
          },
          "type": "array",
          "description": "The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service."
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NodeList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "NodeList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "NodeList is the whole list of all Nodes which have been registered with master.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Node"
          },
          "type": "array",
          "description": "List of nodes"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PodList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PodList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "PodList is a list of Pods.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Pod"
          },
          "type": "array",
          "description": "List of pods. More info: http://kubernetes.io/docs/user-guide/pods"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IDRange": {
      "required": [
        "min",
        "max"
      ],
      "description": "ID Range provides a min/max of an allowed range of IDs.",
      "properties": {
        "max": {
          "type": "integer",
          "description": "Max is the end of the range, inclusive.",
          "format": "int64"
        },
        "min": {
          "type": "integer",
          "description": "Min is the start of the range, inclusive.",
          "format": "int64"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList": {
      "required": [
        "groups"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "APIGroupList",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "groups": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
          },
          "type": "array",
          "description": "groups is a list of APIGroup."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.SourceBuildStrategy": {
      "required": [
        "from"
      ],
      "description": "SourceBuildStrategy defines input parameters specific to an Source build.",
      "properties": {
        "pullSecret": {
          "description": "pullSecret is the name of a Secret that would be used for setting up the authentication for pulling the Docker images from the private Docker registries",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "from": {
          "description": "from is reference to an DockerImage, ImageStreamTag, or ImageStreamImage from which the docker image should be pulled",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "runtimeImage": {
          "description": "runtimeImage is an optional image that is used to run an application without unneeded dependencies installed. The building of the application is still done in the builder image but, post build, you can copy the needed artifacts in the runtime image for use. Deprecated: This feature will be removed in a future release. Use ImageSource to copy binary artifacts created from one build into a separate runtime image.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "runtimeArtifacts": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.ImageSourcePath"
          },
          "type": "array",
          "description": "runtimeArtifacts specifies a list of source/destination pairs that will be copied from the builder to the runtime image. sourcePath can be a file or directory. destinationDir must be a directory. destinationDir can also be empty or equal to \".\", in this case it just refers to the root of WORKDIR. Deprecated: This feature will be removed in a future release. Use ImageSource to copy binary artifacts created from one build into a separate runtime image."
        },
        "incremental": {
          "type": "boolean",
          "description": "incremental flag forces the Source build to do incremental builds if true."
        },
        "env": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EnvVar"
          },
          "type": "array",
          "description": "env contains additional environment variables you want to pass into a builder container."
        },
        "scripts": {
          "type": "string",
          "description": "scripts is the location of Source scripts"
        },
        "forcePull": {
          "type": "boolean",
          "description": "forcePull describes if the builder should pull the images from registry prior to building."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.NetworkPolicyPeer": {
      "properties": {
        "namespaceSelector": {
          "description": "Selects Namespaces using cluster scoped-labels.  This matches all pods in all namespaces selected by this label selector. This field follows standard label selector semantics. If omitted, this selector selects no namespaces. If present but empty, this selector selects all namespaces.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "podSelector": {
          "description": "This is a label selector which selects Pods in this namespace. This field follows standard label selector semantics. If not provided, this selector selects no pods. If present but empty, this selector selects all pods in this namespace.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.batch.v1.JobSpec": {
      "required": [
        "template"
      ],
      "description": "JobSpec describes how the job execution will look like.",
      "properties": {
        "activeDeadlineSeconds": {
          "type": "integer",
          "description": "Optional duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer",
          "format": "int64"
        },
        "parallelism": {
          "type": "integer",
          "description": "Parallelism specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: http://kubernetes.io/docs/user-guide/jobs",
          "format": "int32"
        },
        "completions": {
          "type": "integer",
          "description": "Completions specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: http://kubernetes.io/docs/user-guide/jobs",
          "format": "int32"
        },
        "manualSelector": {
          "type": "boolean",
          "description": "ManualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: http://releases.k8s.io/HEAD/docs/design/selector-generation.md"
        },
        "template": {
          "description": "Template is the object that describes the pod that will be created when executing a job. More info: http://kubernetes.io/docs/user-guide/jobs",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodTemplateSpec"
        },
        "selector": {
          "description": "Selector is a label query over pods that should match the pod count. Normally, the system sets this field for you. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ResourceQuota": {
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ResourceQuota",
          "Version": "v1",
          "Group": ""
        }
      ],
      "description": "ResourceQuota sets aggregate quota restrictions enforced per namespace",
      "properties": {
        "status": {
          "description": "Status defines the actual enforced quota and its current usage. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceQuotaStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "Spec defines the desired quota. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ResourceQuotaSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.ClusterRoleBinding": {
      "required": [
        "userNames",
        "groupNames",
        "subjects",
        "roleRef"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ClusterRoleBinding",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "ClusterRoleBinding",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference any ClusterRole in the same namespace or in the global namespace. It adds who information via (Users and Groups) OR Subjects and namespace information by which namespace it exists in. ClusterRoleBindings in a given namespace only have effect in that namespace (excepting the master namespace which has power in all namespaces).",
      "properties": {
        "groupNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "GroupNames holds all the groups directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "subjects": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
          },
          "type": "array",
          "description": "Subjects hold object references to authorize with this rule. This field is ignored if UserNames or GroupNames are specified to support legacy clients and servers. Thus newer clients that do not need to support backwards compatibility should send only fully qualified Subjects and should omit the UserNames and GroupNames fields. Clients that need to support backwards compatibility can use this field to build the UserNames and GroupNames."
        },
        "roleRef": {
          "description": "RoleRef can only reference the current namespace and the global namespace. If the ClusterRoleRef cannot be resolved, the Authorizer must return an error. Since Policy is a singleton, this is sufficient knowledge to locate a role.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "userNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "UserNames holds all the usernames directly bound to the role. This field should only be specified when supporting legacy clients and servers. See Subjects for further details."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.SubjectRulesReviewStatus": {
      "required": [
        "rules"
      ],
      "description": "SubjectRulesReviewStatus is contains the result of a rules check",
      "properties": {
        "rules": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.PolicyRule"
          },
          "type": "array",
          "description": "Rules is the list of rules (no particular sort) that are allowed for the subject"
        },
        "evaluationError": {
          "type": "string",
          "description": "EvaluationError can appear in combination with Rules.  It means some error happened during evaluation that may have prevented additional rules from being populated."
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.LocalSubjectAccessReview": {
      "required": [
        "namespace",
        "verb",
        "resourceAPIGroup",
        "resourceAPIVersion",
        "resource",
        "resourceName",
        "path",
        "isNonResourceURL",
        "user",
        "groups",
        "scopes"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "LocalSubjectAccessReview",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "LocalSubjectAccessReview",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "LocalSubjectAccessReview is an object for requesting information about whether a user or group can perform an action in a particular namespace",
      "properties": {
        "scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\". Nil for a self-SAR, means \"use the scopes on this request\". Nil for a regular SAR, means the same as empty."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "resource": {
          "type": "string",
          "description": "Resource is one of the existing resource types"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "isNonResourceURL": {
          "type": "boolean",
          "description": "IsNonResourceURL is true if this is a request for a non-resource URL (outside of the resource hieraarchy)"
        },
        "resourceAPIVersion": {
          "type": "string",
          "description": "Version is the API version of the resource Serialized as resourceAPIVersion to avoid confusion with TypeMeta.apiVersion and ObjectMeta.resourceVersion when inlined"
        },
        "verb": {
          "type": "string",
          "description": "Verb is one of: get, list, watch, create, update, delete"
        },
        "resourceAPIGroup": {
          "type": "string",
          "description": "Group is the API group of the resource Serialized as resourceAPIGroup to avoid confusion with the 'groups' field when inlined"
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Groups is optional.  Groups is the list of groups to which the User belongs."
        },
        "path": {
          "type": "string",
          "description": "Path is the path of a non resource URL"
        },
        "resourceName": {
          "type": "string",
          "description": "ResourceName is the name of the resource being requested for a \"get\" or deleted for a \"delete\""
        },
        "content": {
          "description": "Content is the actual content of the request for create and update",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "user": {
          "type": "string",
          "description": "User is optional.  If both User and Groups are empty, the current authenticated user is used."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.DockerBuildStrategy": {
      "description": "DockerBuildStrategy defines input parameters specific to Docker build.",
      "properties": {
        "from": {
          "description": "from is reference to an DockerImage, ImageStreamTag, or ImageStreamImage from which the docker image should be pulled the resulting image will be used in the FROM line of the Dockerfile for this build.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "imageOptimizationPolicy": {
          "type": "string",
          "description": "imageOptimizationPolicy describes what optimizations the system can use when building images to reduce the final size or time spent building the image. The default policy is 'None' which means the final build image will be equivalent to an image created by the Docker build API. The experimental policy 'SkipLayers' will avoid commiting new layers in between each image step, and will fail if the Dockerfile cannot provide compatibility with the 'None' policy. An additional experimental policy 'SkipLayersAndWarn' is the same as 'SkipLayers' but simply warns if compatibility cannot be preserved."
        },
        "noCache": {
          "type": "boolean",
          "description": "noCache if set to true indicates that the docker build must be executed with the --no-cache=true flag"
        },
        "buildArgs": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EnvVar"
          },
          "type": "array",
          "description": "buildArgs contains build arguments that will be resolved in the Dockerfile.  See https://docs.docker.com/engine/reference/builder/#/arg for more details."
        },
        "dockerfilePath": {
          "type": "string",
          "description": "dockerfilePath is the path of the Dockerfile that will be used to build the Docker image, relative to the root of the context (contextDir)."
        },
        "env": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.EnvVar"
          },
          "type": "array",
          "description": "env contains additional environment variables you want to pass into a builder container."
        },
        "pullSecret": {
          "description": "pullSecret is the name of a Secret that would be used for setting up the authentication for pulling the Docker images from the private Docker registries",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "forcePull": {
          "type": "boolean",
          "description": "forcePull describes if the builder should pull the images from registry prior to building."
        }
      }
    },
    "com.github.openshift.origin.pkg.sdn.apis.network.v1.NetNamespaceList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "NetNamespaceList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "NetNamespaceList",
          "Version": "v1",
          "Group": "network.openshift.io"
        }
      ],
      "description": "NetNamespaceList is a collection of NetNamespaces",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.sdn.apis.network.v1.NetNamespace"
          },
          "type": "array",
          "description": "Items is the list of net namespaces"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicySubjectReview": {
      "required": [
        "spec"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PodSecurityPolicySubjectReview",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "PodSecurityPolicySubjectReview",
          "Version": "v1",
          "Group": "security.openshift.io"
        }
      ],
      "description": "PodSecurityPolicySubjectReview checks whether a particular user/SA tuple can create the PodTemplateSpec.",
      "properties": {
        "status": {
          "description": "status represents the current information/status for the PodSecurityPolicySubjectReview.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicySubjectReviewStatus"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "spec": {
          "description": "spec defines specification for the PodSecurityPolicySubjectReview.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.security.apis.security.v1.PodSecurityPolicySubjectReviewSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.TagEventCondition": {
      "required": [
        "type",
        "status",
        "generation"
      ],
      "description": "TagEventCondition contains condition information for a tag event.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "reason": {
          "type": "string",
          "description": "Reason is a brief machine readable explanation for the condition's last transition."
        },
        "generation": {
          "type": "integer",
          "description": "Generation is the spec tag generation that this status corresponds to",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "description": "Type of tag event condition, currently only ImportSuccess"
        },
        "message": {
          "type": "string",
          "description": "Message is a human readable description of the details about last transition, complementing reason."
        },
        "lastTransitionTime": {
          "description": "LastTransitionTIme is the time the condition transitioned from one status to another.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.ImageSource": {
      "required": [
        "from",
        "paths"
      ],
      "description": "ImageSource is used to describe build source that will be extracted from an image. A reference of type ImageStreamTag, ImageStreamImage or DockerImage may be used. A pull secret can be specified to pull the image from an external registry or override the default service account secret if pulling from the internal registry. A list of paths to copy from the image and their respective destination within the build directory must be specified in the paths array.",
      "properties": {
        "paths": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.ImageSourcePath"
          },
          "type": "array",
          "description": "paths is a list of source and destination paths to copy from the image."
        },
        "from": {
          "description": "from is a reference to an ImageStreamTag, ImageStreamImage, or DockerImage to copy source from.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "pullSecret": {
          "description": "pullSecret is a reference to a secret to be used to pull the image from a registry If the image is pulled from the OpenShift registry, this field does not need to be set.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.rbac.v1beta1.Role": {
      "required": [
        "rules"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "Role",
          "Version": "v1beta1",
          "Group": "rbac.authorization.k8s.io"
        }
      ],
      "description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.",
      "properties": {
        "rules": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.rbac.v1beta1.PolicyRule"
          },
          "type": "array",
          "description": "Rules holds all the PolicyRules for this Role"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ContainerStateRunning": {
      "description": "ContainerStateRunning is a running state of a container.",
      "properties": {
        "startedAt": {
          "description": "Time at which the container was last (re-)started",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "com.github.openshift.origin.pkg.template.apis.template.v1.TemplateInstanceSpec": {
      "required": [
        "template",
        "requester"
      ],
      "description": "TemplateInstanceSpec describes the desired state of a TemplateInstance.",
      "properties": {
        "secret": {
          "description": "secret is a reference to a Secret object containing the necessary template parameters.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "template": {
          "description": "template is a full copy of the template for instantiation.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.template.apis.template.v1.Template"
        },
        "requester": {
          "description": "requester holds the identity of the agent requesting the template instantiation.",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.template.apis.template.v1.TemplateInstanceRequester"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.apps.v1beta1.DeploymentStrategy": {
      "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
      "properties": {
        "rollingUpdate": {
          "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.apps.v1beta1.RollingUpdateDeployment"
        },
        "type": {
          "type": "string",
          "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NodeAffinity": {
      "description": "Node affinity is a group of node affinity scheduling rules.",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NodeSelector"
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PreferredSchedulingTerm"
          },
          "type": "array",
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred."
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ThirdPartyResourceList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "ThirdPartyResourceList",
          "Version": "v1beta1",
          "Group": "extensions"
        }
      ],
      "description": "ThirdPartyResourceList is a list of ThirdPartyResources.",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.ThirdPartyResource"
          },
          "type": "array",
          "description": "Items is the list of ThirdPartyResources."
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard list metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.authorization.apis.authorization.v1.PolicyList": {
      "required": [
        "items"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "PolicyList",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "PolicyList",
          "Version": "v1",
          "Group": "authorization.openshift.io"
        }
      ],
      "description": "PolicyList is a collection of Policies",
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.authorization.apis.authorization.v1.Policy"
          },
          "type": "array",
          "description": "Items is a list of Policies"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "com.github.openshift.origin.pkg.sdn.apis.network.v1.HostSubnet": {
      "required": [
        "host",
        "hostIP",
        "subnet"
      ],
      "x-kubernetes-group-version-kind": [
        {
          "Kind": "HostSubnet",
          "Version": "v1",
          "Group": ""
        },
        {
          "Kind": "HostSubnet",
          "Version": "v1",
          "Group": "network.openshift.io"
        }
      ],
      "description": "HostSubnet describes the container subnet network on a node. The HostSubnet object must have the same name as the Node object it corresponds to.",
      "properties": {
        "subnet": {
          "type": "string",
          "description": "Subnet is the CIDR range of the overlay network assigned to the node for its pods"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        },
        "hostIP": {
          "type": "string",
          "description": "HostIP is the IP address to be used as a VTEP by other nodes in the overlay network"
        },
        "host": {
          "type": "string",
          "description": "Host is the name of the node. (This is the same as the object's name, but both fields must be set.)"
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HTTPIngressPath": {
      "required": [
        "backend"
      ],
      "description": "HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend.",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend."
        },
        "backend": {
          "description": "Backend defines the referenced service endpoint to which the traffic will be forwarded to.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.IngressBackend"
        }
      }
    },
    "com.github.openshift.origin.pkg.image.apis.image.v1.RepositoryImportSpec": {
      "required": [
        "from"
      ],
      "description": "RepositoryImportSpec describes a request to import images from a Docker image repository.",
      "properties": {
        "importPolicy": {
          "description": "ImportPolicy is the policy controlling how the image is imported",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.TagImportPolicy"
        },
        "referencePolicy": {
          "description": "ReferencePolicy defines how other components should consume the image",
          "$ref": "#/definitions/com.github.openshift.origin.pkg.image.apis.image.v1.TagReferencePolicy"
        },
        "includeManifest": {
          "type": "boolean",
          "description": "IncludeManifest determines if the manifest for each image is returned in the response"
        },
        "from": {
          "description": "From is the source for the image repository to import; only kind DockerImage and a name of a Docker image repository is allowed",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        }
      }
    },
    "com.github.openshift.origin.pkg.security.apis.security.v1.RunAsUserStrategyOptions": {
      "description": "RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy.",
      "properties": {
        "uidRangeMin": {
          "type": "integer",
          "description": "UIDRangeMin defines the min value for a strategy that allocates by range.",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "description": "Type is the strategy that will dictate what RunAsUser is used in the SecurityContext."
        },
        "uid": {
          "type": "integer",
          "description": "UID is the user id that containers must run as.  Required for the MustRunAs strategy if not using namespace/service account allocated uids.",
          "format": "int64"
        },
        "uidRangeMax": {
          "type": "integer",
          "description": "UIDRangeMax defines the max value for a strategy that allocates by range.",
          "format": "int64"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.authorization.v1beta1.SubjectAccessReviewStatus": {
      "required": [
        "allowed"
      ],
      "description": "SubjectAccessReviewStatus",
      "properties": {
        "reason": {
          "type": "string",
          "description": "Reason is optional.  It indicates why a request was allowed or denied."
        },
        "evaluationError": {
          "type": "string",
          "description": "EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request."
        },
        "allowed": {
          "type": "boolean",
          "description": "Allowed is required.  True if the action would be allowed, false otherwise."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.SourceControlUser": {
      "description": "SourceControlUser defines the identity of a user of source control",
      "properties": {
        "email": {
          "type": "string",
          "description": "email of the source control user"
        },
        "name": {
          "type": "string",
          "description": "name of the source control user"
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildOutput": {
      "description": "BuildOutput is input to a build strategy and describes the Docker image that the strategy should produce.",
      "properties": {
        "to": {
          "description": "to defines an optional location to push the output of this build to. Kind must be one of 'ImageStreamTag' or 'DockerImage'. This value will be used to look up a Docker image repository to push to. In the case of an ImageStreamTag, the ImageStreamTag will be looked for in the namespace of the build unless Namespace is specified.",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
        },
        "pushSecret": {
          "description": "PushSecret is the name of a Secret that would be used for setting up the authentication for executing the Docker push to authentication enabled Docker Registry (or Docker Hub).",
          "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.LocalObjectReference"
        },
        "imageLabels": {
          "items": {
            "$ref": "#/definitions/com.github.openshift.origin.pkg.build.apis.build.v1.ImageLabel"
          },
          "type": "array",
          "description": "imageLabels define a list of labels that are applied to the resulting image. If there are multiple labels with the same name then the last one in the list is used."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.ObjectFieldSelector": {
      "required": [
        "fieldPath"
      ],
      "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
      "properties": {
        "fieldPath": {
          "type": "string",
          "description": "Path of the field to select in the specified API version."
        },
        "apiVersion": {
          "type": "string",
          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.NamespaceStatus": {
      "description": "NamespaceStatus is information about the current status of a Namespace.",
      "properties": {
        "phase": {
          "type": "string",
          "description": "Phase is the current lifecycle phase of the namespace. More info: http://releases.k8s.io/HEAD/docs/design/namespaces.md#phases"
        }
      }
    },
    "io.k8s.kubernetes.pkg.api.v1.PodAntiAffinity": {
      "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
      "properties": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PodAffinityTerm"
          },
          "type": "array",
          "description": "NOT YET IMPLEMENTED. TODO: Uncomment field once it is implemented. If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system will try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied. RequiredDuringSchedulingRequiredDuringExecution []PodAffinityTerm  `json:\"requiredDuringSchedulingRequiredDuringExecution,omitempty\"` If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied."
        },
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.WeightedPodAffinityTerm"
          },
          "type": "array",
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred."
        }
      }
    },
    "com.github.openshift.origin.pkg.build.apis.build.v1.BuildConfigStatus": {
      "required": [
        "lastVersion"
      ],
      "description": "BuildConfigStatus contains current state of the build config object.",
      "properties": {
        "lastVersion": {
          "type": "integer",
          "description": "lastVersion is used to inform about number of last triggered build.",
          "format": "int64"
        }
      }
    },
    "io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HTTPIngressRuleValue": {
      "required": [
        "paths"
      ],
      "description": "HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.",
      "properties": {
        "paths": {
          "items": {
            "$ref": "#/definitions/io.k8s.kubernetes.pkg.apis.extensions.v1beta1.HTTPIngressPath"
          },
          "type": "array",
          "description": "A collection of paths that map requests to backends."
        }
      }
    }
  }
}