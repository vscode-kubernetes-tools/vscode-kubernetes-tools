{
    "name": "vscode-kubernetes-tools",
    "displayName": "Kubernetes",
    "description": "Develop, deploy and debug Kubernetes applications",
    "version": "0.1.16",
    "preview": true,
    "publisher": "ms-kubernetes-tools",
    "engines": {
        "vscode": "^1.23.0"
    },
    "license": "MIT",
    "categories": [
        "Azure",
        "Other"
    ],
    "keywords": [
        "kubernetes",
        "k8s",
        "helm",
        "draft",
        "azure"
    ],
    "aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217",
    "icon": "images/k8s-logo.png",
    "activationEvents": [
        "onCommand:extension.vsKubernetesCreate",
        "onCommand:extension.vsKubernetesCreateFile",
        "onCommand:extension.vsKubernetesDelete",
        "onCommand:extension.vsKubernetesDeleteNow",
        "onCommand:extension.vsKubernetesDeleteUri",
        "onCommand:extension.vsKubernetesApply",
        "onCommand:extension.vsKubernetesApplyFile",
        "onCommand:extension.vsKubernetesExplain",
        "onCommand:extension.vsKubernetesLoad",
        "onCommand:extension.vsKubernetesGet",
        "onCommand:extension.vsKubernetesRun",
        "onCommand:extension.vsKubernetesShowLogs",
        "onCommand:extension.vsKubernetesFollowLogs",
        "onCommand:extension.vsKubernetesExpose",
        "onCommand:extension.vsKubernetesDescribe",
        "onCommand:extension.vsKubernetesSync",
        "onCommand:extension.vsKubernetesExec",
        "onCommand:extension.vsKubernetesTerminal",
        "onCommand:extension.vsKubernetesDiff",
        "onCommand:extension.vsKubernetesScale",
        "onCommand:extension.vsKubernetesDebug",
        "onCommand:extension.vsKubernetesRemoveDebug",
        "onCommand:extension.vsKubernetesConfigureFromCluster",
        "onCommand:extension.vsKubernetesCreateCluster",
        "onCommand:extension.vsKubernetesUseKubeconfig",
        "onCommand:extension.vsKubernetesDashboard",
        "onCommand:extension.vsMinikubeStop",
        "onCommand:extension.vsMinikubeStart",
        "onCommand:extension.vsMinikubeStatus",
        "onCommand:extension.vsKubernetesPortForward",
        "onCommand:extension.vsKubernetesDeleteFile",
        "onCommand:extension.vsKubernetesAddFile",
        "onCommand:extension.vsKubernetesUseNamespace",
        "onCommand:extension.vsKubernetesShowEvents",
        "onCommand:extension.vsKubernetesFollowEvents",
        "onCommand:extension.helmTemplate",
        "onCommand:extension.helmTemplatePreview",
        "onCommand:extension.helmLint",
        "onCommand:extension.helmDryRun",
        "onCommand:extension.helmVersion",
        "onCommand:extension.helmCreate",
        "onCommand:extension.helmInsertReq",
        "onCommand:extension.helmDepUp",
        "onCommand:extension.helmInspectChart",
        "onCommand:extension.helmInspectValues",
        "onCommand:extension.helmGet",
        "onCommand:extension.helmPackage",
        "onCommand:extension.helmFetch",
        "onCommand:extension.helmInstall",
        "onCommand:extension.helmDependencies",
        "onCommand:extension.helmConvertToTemplate",
        "onCommand:extension.helmParameterise",
        "onCommand:extension.draftVersion",
        "onCommand:extension.draftCreate",
        "onCommand:extension.draftUp",
        "onView:extension.vsKubernetesExplorer",
        "onView:extension.vsKubernetesHelmRepoExplorer",
        "onLanguage:helm",
        "onLanguage:yaml",
        "onFileSystem:k8smsx",
        "onDebug"
    ],
    "main": "./out/src/extension",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "Kubernetes configuration",
            "properties": {
                "vs-kubernetes": {
                    "type": "object",
                    "description": "Kubernetes configuration",
                    "properties": {
                        "vs-kubernetes.namespace": {
                            "type": "string",
                            "description": "The namespace to use for all commands"
                        },
                        "vs-kubernetes.kubectl-path": {
                            "type": "string",
                            "description": "File path to a kubectl binary."
                        },
                        "vs-kubernetes.helm-path": {
                            "type": "string",
                            "description": "File path to a helm binary."
                        },
                        "vs-kubernetes.draft-path": {
                            "type": "string",
                            "description": "File path to a draft binary."
                        },
                        "vs-kubernetes.minikube-path": {
                            "type": "string",
                            "description": "File path to a minikube binary."
                        },
                        "vs-kubernetes.kubectl-path.windows": {
                            "type": "string",
                            "description": "File path to a kubectl binary."
                        },
                        "vs-kubernetes.helm-path.windows": {
                            "type": "string",
                            "description": "File path to a helm binary."
                        },
                        "vs-kubernetes.draft-path.windows": {
                            "type": "string",
                            "description": "File path to a draft binary."
                        },
                        "vs-kubernetes.minikube-path.windows": {
                            "type": "string",
                            "description": "File path to a minikube binary."
                        },
                        "vs-kubernetes.kubectl-path.mac": {
                            "type": "string",
                            "description": "File path to a kubectl binary."
                        },
                        "vs-kubernetes.helm-path.mac": {
                            "type": "string",
                            "description": "File path to a helm binary."
                        },
                        "vs-kubernetes.draft-path.mac": {
                            "type": "string",
                            "description": "File path to a draft binary."
                        },
                        "vs-kubernetes.minikube-path.mac": {
                            "type": "string",
                            "description": "File path to a minikube binary."
                        },
                        "vs-kubernetes.kubectl-path.linux": {
                            "type": "string",
                            "description": "File path to a kubectl binary."
                        },
                        "vs-kubernetes.helm-path.linux": {
                            "type": "string",
                            "description": "File path to a helm binary."
                        },
                        "vs-kubernetes.draft-path.linux": {
                            "type": "string",
                            "description": "File path to a draft binary."
                        },
                        "vs-kubernetes.minikube-path.linux": {
                            "type": "string",
                            "description": "File path to a minikube binary."
                        },
                        "vs-kubernetes.kubeconfig": {
                            "type": "string",
                            "description": "File path to the kubeconfig file."
                        },
                        "vs-kubernetes.knownKubeconfigs": {
                            "type": "array",
                            "description": "File paths to kubeconfig files from which you can select."
                        },
                        "vs-kubernetes.autoCleanupOnDebugTerminate": {
                            "type": "boolean",
                            "description": "Once the debug session is terminated, automatically clean up the created Deployment and associated Pod by the command \"Kubernetes: Debug (Launch)\"."
                        },
                        "vs-kubernetes.outputFormat": {
                            "enum": [
                                "json",
                                "yaml"
                            ],
                            "type": "string",
                            "description": "Output format for Kubernetes specs. One of 'json' or 'yaml' (default)."
                        },
                        "vs-kubernetes.nodejs-autodetect-remote-root": {
                            "type": "boolean",
                            "description": "If true will try to automatically get the root location of the source code in the container."
                        },
                        "vs-kubernetes.nodejs-remote-root": {
                            "type": "string",
                            "description": "The root location of the source code in the container."
                        },
                        "vs-kubernetes.nodejs-debug-port": {
                            "type": "number",
                            "description": "Remote debugging port for nodejs. Usually 9229."
                        },
                        "disable-lint": {
                            "type": "boolean",
                            "description": "Disable all linting of Kubernetes files"
                        },
                        "disable-linters": {
                            "type": "array",
                            "description": "List of linters by name to disable"
                        },
                        "resource-commands-on-files": {
                            "type": "boolean",
                            "description": "If true, show Kubernetes resource commands on file context menu for all YAML files"
                        }
                    },
                    "default": {
                        "vs-kubernetes.namespace": "",
                        "vs-kubernetes.kubectl-path": "",
                        "vs-kubernetes.helm-path": "",
                        "vs-kubernetes.draft-path": "",
                        "vs-kubernetes.minikube-path": "",
                        "vs-kubernetes.outputFormat": "yaml",
                        "vs-kubernetes.kubeconfig": "",
                        "vs-kubernetes.knownKubeconfigs": [],
                        "vs-kubernetes.autoCleanupOnDebugTerminate": false,
                        "vs-kubernetes.nodejs-autodetect-remote-root": true,
                        "vs-kubernetes.nodejs-remote-root": "",
                        "vs-kubernetes.nodejs-debug-port": 9229
                    }
                },
                "vsdocker.imageUser": {
                    "type": "string",
                    "default": null,
                    "description": "Image prefix for docker images ie 'docker.io/brendanburns'"
                }
            }
        },
        "views": {
            "kubernetesView": [
                {
                    "id": "extension.vsKubernetesExplorer",
                    "name": "Clusters"
                },
                {
                    "id": "extension.vsKubernetesHelmRepoExplorer",
                    "name": "Helm Repos"
                }
            ]
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "icon": "images/logo.svg",
                    "id": "kubernetesView",
                    "title": "Kubernetes"
                }
            ]
        },
        "menus": {
            "explorer/context": [
                {
                    "title": "Update Dependencies",
                    "when": "resourceFilename == requirements.yaml",
                    "command": "extension.helmDepUp",
                    "group": "2_helm@99"
                },
                {
                    "title": "Create Kubernetes resource",
                    "when": "resourceLangId == yaml && config.vs-kubernetes.resource-commands-on-files",
                    "command": "extension.vsKubernetesCreateFile",
                    "group": "2_k8s_1"
                },
                {
                    "title": "Apply Kubernetes resource",
                    "when": "resourceLangId == yaml && config.vs-kubernetes.resource-commands-on-files",
                    "command": "extension.vsKubernetesApplyFile",
                    "group": "2_k8s_2"
                },
                {
                    "title": "Delete Kubernetes resource",
                    "when": "resourceLangId == yaml && config.vs-kubernetes.resource-commands-on-files",
                    "command": "extension.vsKubernetesDeleteUri",
                    "group": "2_k8s_3"
                },
                {
                    "when": "",
                    "command": "extension.helmInspectValues",
                    "group": "2_helm@98"
                },
                {
                    "when": "",
                    "command": "extension.helmConvertToTemplate",
                    "group": "2_helm@98"
                }
            ],
            "view/title": [
                {
                    "command": "extension.vsKubernetesRefreshExplorer",
                    "when": "view == extension.vsKubernetesExplorer",
                    "group": "navigation"
                },
                {
                    "command": "extension.vsKubernetesCreateCluster",
                    "when": "view == extension.vsKubernetesExplorer",
                    "group": "0"
                },
                {
                    "command": "extension.vsKubernetesConfigureFromCluster",
                    "when": "view == extension.vsKubernetesExplorer",
                    "group": "0"
                },
                {
                    "command": "extension.vsKubernetesUseKubeconfig",
                    "when": "view == extension.vsKubernetesExplorer",
                    "group": "1"
                },
                {
                    "command": "extension.vsKubernetesRefreshHelmRepoExplorer",
                    "when": "view == extension.vsKubernetesHelmRepoExplorer",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "extension.vsKubernetesUseContext",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.cluster.inactive",
                    "group": "0@1"
                },
                {
                    "command": "extension.vsKubernetesDeleteContext",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.cluster.inactive",
                    "group": "0@2"
                },
                {
                    "command": "extension.vsKubernetesCopy",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.cluster.inactive",
                    "group": "1"
                },
                {
                    "command": "extension.vsKubernetesClusterInfo",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.cluster",
                    "group": "0@1"
                },
                {
                    "command": "extension.vsKubernetesDashboard",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.cluster",
                    "group": "0@3"
                },
                {
                    "command": "extension.vsKubernetesDeleteContext",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.cluster",
                    "group": "0@2"
                },
                {
                    "command": "extension.vsKubernetesCopy",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.cluster",
                    "group": "1"
                },
                {
                    "command": "extension.vsKubernetesUseContext",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.minikubeCluster.inactive",
                    "group": "0@4"
                },
                {
                    "command": "extension.vsKubernetesClusterInfo",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.minikubeCluster",
                    "group": "0@1"
                },
                {
                    "command": "extension.vsKubernetesDashboard",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.minikubeCluster",
                    "group": "0@3"
                },
                {
                    "command": "extension.vsKubernetesDeleteContext",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.minikubeCluster",
                    "group": "0@2"
                },
                {
                    "command": "extension.vsMinikubeStop",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.minikubeCluster",
                    "group": "2@1"
                },
                {
                    "command": "extension.vsMinikubeStart",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.minikubeCluster",
                    "group": "2@0"
                },
                {
                    "command": "extension.vsMinikubeStatus",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.minikubeCluster",
                    "group": "2@3"
                },
                {
                    "command": "extension.vsKubernetesCopy",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.minikubeCluster",
                    "group": "1"
                },
                {
                    "command": "extension.vsKubernetesUseNamespace",
                    "group": "0",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.namespace.inactive"
                },
                {
                    "command": "extension.vsKubernetesShowEvents",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.namespace",
                    "group": "1"
                },
                {
                    "command": "extension.vsKubernetesFollowEvents",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.namespace",
                    "group": "1"
                },
                {
                    "command": "extension.vsKubernetesCopy",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.namespace.inactive",
                    "group": "1"
                },
                {
                    "command": "extension.vsKubernetesCopy",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.namespace",
                    "group": "1"
                },
                {
                    "command": "extension.vsKubernetesGet",
                    "group": "1@1",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.kind"
                },
                {
                    "command": "extension.vsKubernetesLoad",
                    "group": "0",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource"
                },
                {
                    "command": "extension.vsKubernetesCopy",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource",
                    "group": "1"
                },
                {
                    "command": "extension.vsKubernetesGet",
                    "group": "2@1",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource"
                },
                {
                    "command": "extension.vsKubernetesDelete",
                    "group": "2@2",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource"
                },
                {
                    "command": "extension.vsKubernetesDescribe",
                    "group": "3",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource"
                },
                {
                    "command": "extension.helmConvertToTemplate",
                    "group": "2",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource"
                },
                {
                    "command": "extension.vsKubernetesLoad",
                    "group": "0",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.pod"
                },
                {
                    "command": "extension.vsKubernetesCopy",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.pod",
                    "group": "1"
                },
                {
                    "command": "extension.vsKubernetesGet",
                    "group": "2@1",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.pod"
                },
                {
                    "command": "extension.vsKubernetesDelete",
                    "group": "2@2",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.pod"
                },
                {
                    "command": "extension.vsKubernetesDeleteNow",
                    "group": "2@3",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.pod"
                },
                {
                    "command": "extension.vsKubernetesTerminal",
                    "group": "2@4",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.pod"
                },
                {
                    "command": "extension.vsKubernetesDebugAttach",
                    "group": "2@5",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.pod"
                },
                {
                    "command": "extension.vsKubernetesPortForward",
                    "group": "2@6",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.pod"
                },
                {
                    "command": "extension.vsKubernetesDescribe",
                    "group": "3",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.pod"
                },
                {
                    "command": "extension.helmConvertToTemplate",
                    "group": "2",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.pod"
                },
                {
                    "command": "extension.vsKubernetesShowLogs",
                    "group": "3",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.pod"
                },
                {
                    "command": "extension.vsKubernetesFollowLogs",
                    "group": "3",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.pod"
                },
                {
                    "command": "extension.vsKubernetesLoad",
                    "group": "0",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.configmap"
                },
                {
                    "command": "extension.vsKubernetesCopy",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.configmap",
                    "group": "1"
                },
                {
                    "command": "extension.vsKubernetesGet",
                    "group": "2@1",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.configmap"
                },
                {
                    "command": "extension.vsKubernetesDelete",
                    "group": "2@2",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.configmap"
                },
                {
                    "command": "extension.vsKubernetesDescribe",
                    "group": "3",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.configmap"
                },
                {
                    "command": "extension.helmConvertToTemplate",
                    "group": "2",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.configmap"
                },
                {
                    "command": "extension.vsKubernetesAddFile",
                    "group": "3",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.configmap"
                },
                {
                    "command": "extension.vsKubernetesLoad",
                    "group": "0",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.secret"
                },
                {
                    "command": "extension.vsKubernetesCopy",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.secret",
                    "group": "1"
                },
                {
                    "command": "extension.vsKubernetesGet",
                    "group": "2@1",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.secret"
                },
                {
                    "command": "extension.helmConvertToTemplate",
                    "group": "2",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.secret"
                },
                {
                    "command": "extension.vsKubernetesDelete",
                    "group": "2@2",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.secret"
                },
                {
                    "command": "extension.vsKubernetesDescribe",
                    "group": "3",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.secret"
                },
                {
                    "command": "extension.vsKubernetesAddFile",
                    "group": "3",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.secret"
                },
                {
                    "command": "extension.vsKubernetesDeleteFile",
                    "group": "3",
                    "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.file"
                },
                {
                    "command": "extension.helmFetch",
                    "group": "1",
                    "when": "view == extension.vsKubernetesHelmRepoExplorer && viewItem == vsKubernetes.chart"
                },
                {
                    "command": "extension.helmFetch",
                    "group": "1",
                    "when": "view == extension.vsKubernetesHelmRepoExplorer && viewItem == vsKubernetes.chartversion"
                },
                {
                    "command": "extension.helmInstall",
                    "group": "2",
                    "when": "view == extension.vsKubernetesHelmRepoExplorer && viewItem == vsKubernetes.chart"
                },
                {
                    "command": "extension.helmInstall",
                    "group": "2",
                    "when": "view == extension.vsKubernetesHelmRepoExplorer && viewItem == vsKubernetes.chartversion"
                },
                {
                    "command": "extension.helmDependencies",
                    "group": "0@3",
                    "when": "view == extension.vsKubernetesHelmRepoExplorer && viewItem == vsKubernetes.chart"
                },
                {
                    "command": "extension.helmDependencies",
                    "group": "0@3",
                    "when": "view == extension.vsKubernetesHelmRepoExplorer && viewItem == vsKubernetes.chartversion"
                },
                {
                    "command": "extension.helmInspectChart",
                    "group": "0@1",
                    "when": "view == extension.vsKubernetesHelmRepoExplorer && viewItem == vsKubernetes.chart"
                },
                {
                    "command": "extension.helmInspectChart",
                    "group": "0@1",
                    "when": "view == extension.vsKubernetesHelmRepoExplorer && viewItem == vsKubernetes.chartversion"
                },
                {
                    "command": "extension.helmInspectValues",
                    "group": "0@2",
                    "when": "view == extension.vsKubernetesHelmRepoExplorer && viewItem == vsKubernetes.chart"
                },
                {
                    "command": "extension.helmInspectValues",
                    "group": "0@2",
                    "when": "view == extension.vsKubernetesHelmRepoExplorer && viewItem == vsKubernetes.chartversion"
                }
            ],
            "commandPalette": [
                {
                    "command": "extension.vsKubernetesApplyFile",
                    "when": "filesExplorerFocus"
                },
                {
                    "command": "extension.vsKubernetesCreateFile",
                    "when": "filesExplorerFocus"
                },
                {
                    "command": "extension.vsKubernetesDeleteUri",
                    "when": "filesExplorerFocus"
                },
                {
                    "command": "extension.vsKubernetesRefreshExplorer",
                    "when": "view == extension.vsKubernetesExplorer"
                },
                {
                    "command": "extension.vsKubernetesRefreshHelmRepoExplorer",
                    "when": "view == extension.vsKubernetesHelmRepoExplorer"
                },
                {
                    "command": "extension.vsKubernetesUseContext",
                    "when": "view == extension.vsKubernetesExplorer"
                },
                {
                    "command": "extension.vsKubernetesClusterInfo",
                    "when": "view == extension.vsKubernetesExplorer"
                },
                {
                    "command": "extension.vsKubernetesDeleteContext",
                    "when": "view == extension.vsKubernetesExplorer"
                },
                {
                    "command": "extension.vsKubernetesUseNamespace",
                    "when": ""
                },
                {
                    "command": "extension.vsKubernetesCopy",
                    "when": "view == extension.vsKubernetesExplorer"
                },
                {
                    "command": "extension.vsKubernetesAddFile",
                    "when": "view == extension.vsKubernetesExplorer"
                },
                {
                    "command": "extension.vsKubernetesDeleteFile",
                    "when": "view == extension.vsKubernetesExplorer"
                },
                {
                    "command": "extension.helmGet",
                    "when": "view == extension.vsKubernetesExplorer"
                },
                {
                    "command": "extension.helmInspectValues",
                    "when": "filesExplorerFocus"
                },
                {
                    "command": "extension.helmInspectValues",
                    "when": "view === extension.vsKubernetesHelmRepoExplorer"
                },
                {
                    "command": "extension.helmInspectChart",
                    "when": "view === extension.vsKubernetesHelmRepoExplorer"
                }
            ]
        },
        "commands": [
            {
                "command": "extension.vsKubernetesCreate",
                "title": "Create",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesCreateFile",
                "title": "Create Kubernetes resource",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesDelete",
                "title": "Delete",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesDeleteNow",
                "title": "Delete Now",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesDeleteUri",
                "title": "Delete Kubernetes resource",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesApply",
                "title": "Apply",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesApplyFile",
                "title": "Apply Kubernetes resource",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesExplain",
                "title": "Explain",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesLoad",
                "title": "Load",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesGet",
                "title": "Get",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesRun",
                "title": "Run",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesShowLogs",
                "title": "Show Logs",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesFollowLogs",
                "title": "Follow Logs",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesExpose",
                "title": "Expose",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesDescribe",
                "title": "Describe",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesSync",
                "title": "Sync Working Copy to Cluster",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesExec",
                "title": "Exec",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesTerminal",
                "title": "Terminal",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesDiff",
                "title": "Diff",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesScale",
                "title": "Scale",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesDebug",
                "title": "Debug (Launch)",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesDebugAttach",
                "title": "Debug (Attach)",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesRemoveDebug",
                "title": "Remove Debug",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesConfigureFromCluster",
                "title": "Add Existing Cluster",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesCreateCluster",
                "title": "Create Cluster",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesUseContext",
                "title": "Set as Current Cluster",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesUseKubeconfig",
                "title": "Set Kubeconfig",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesClusterInfo",
                "title": "Show Cluster Info",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesDeleteContext",
                "title": "Delete from kubeconfig",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesUseNamespace",
                "title": "Use Namespace",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesDashboard",
                "title": "Open Dashboard",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsMinikubeStop",
                "title": "Stop minikube",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsMinikubeStart",
                "title": "Start minikube",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsMinikubeStatus",
                "title": "Minikube status",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesPortForward",
                "title": "Port Forward",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesCopy",
                "title": "Copy Name",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesAddFile",
                "title": "Add File(s)",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesDeleteFile",
                "title": "Delete File",
                "category": "Kubernetes"
            },
            {
                "command": "extension.draftVersion",
                "title": "Version",
                "description": "Get the version of the local Draft client.",
                "category": "Draft"
            },
            {
                "command": "extension.draftUp",
                "title": "Up",
                "description": "Build, deploy, and run the app in-cluster.",
                "category": "Draft"
            },
            {
                "command": "extension.draftCreate",
                "title": "Create",
                "description": "Create a new Draft project",
                "category": "Draft"
            },
            {
                "command": "extension.vsKubernetesRefreshExplorer",
                "title": "Refresh",
                "category": "Kubernetes",
                "icon": {
                    "light": "images/light/refresh.svg",
                    "dark": "images/dark/refresh.svg"
                }
            },
            {
                "command": "extension.vsKubernetesShowEvents",
                "title": "Show Events",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesFollowEvents",
                "title": "Follow Events",
                "category": "Kubernetes"
            },
            {
                "command": "extension.vsKubernetesRefreshHelmRepoExplorer",
                "title": "Refresh",
                "category": "Helm",
                "icon": {
                    "light": "images/light/refresh.svg",
                    "dark": "images/dark/refresh.svg"
                }
            },
            {
                "command": "extension.helmVersion",
                "title": "Version (Client)",
                "description": "Get the version of the local Helm client.",
                "category": "Helm"
            },
            {
                "command": "extension.helmLint",
                "title": "Lint",
                "description": "Run the Helm linter on this chart.",
                "category": "Helm"
            },
            {
                "command": "extension.helmDepUp",
                "title": "Dependency Update",
                "description": "Update the dependencies listed in requirements.yaml.",
                "category": "Helm"
            },
            {
                "command": "extension.helmDryRun",
                "title": "Dry Run",
                "description": "Run 'helm install --dry-run --debug' on this chart.",
                "category": "Helm"
            },
            {
                "command": "extension.helmTemplate",
                "title": "Template",
                "description": "Run 'helm template' on this chart.",
                "category": "Helm"
            },
            {
                "command": "extension.helmInsertReq",
                "title": "Insert Dependency",
                "description": "Insert a dependency YAML fragment",
                "category": "Helm"
            },
            {
                "command": "extension.helmTemplatePreview",
                "title": "Preview Template",
                "description": "Run 'helm template' on this chart and show only this file.",
                "category": "Helm"
            },
            {
                "command": "extension.helmInspectValues",
                "title": "Inspect Values",
                "description": "Inspect a Helm Chart",
                "category": "Helm"
            },
            {
                "command": "extension.helmInspectChart",
                "title": "Inspect Chart",
                "description": "Inspect a Helm Chart",
                "category": "Helm"
            },
            {
                "command": "extension.helmCreate",
                "title": "Create Chart",
                "description": "Create a new Helm Chart",
                "category": "Helm"
            },
            {
                "command": "extension.helmConvertToTemplate",
                "title": "Convert to Template",
                "description": "Convert this manifest to a Helm template",
                "category": "Helm"
            },
            {
                "command": "extension.helmParameterise",
                "title": "Convert to Template Parameter",
                "description": "Convert this value to a Helm template parameter",
                "category": "Helm"
            },
            {
                "command": "extension.helmGet",
                "title": "Get Release",
                "description": "Get a Helm release from the cluster",
                "category": "Helm"
            },
            {
                "command": "extension.helmPackage",
                "title": "Package",
                "description": "Package a chart directory into a versioned chart archive file.",
                "category": "Helm"
            },
            {
                "command": "extension.helmFetch",
                "title": "Fetch",
                "description": "Fetch a Helm chart into the current project",
                "category": "Helm"
            },
            {
                "command": "extension.helmInstall",
                "title": "Install",
                "description": "Install a Helm chart into the cluster",
                "category": "Helm"
            },
            {
                "command": "extension.helmDependencies",
                "title": "Show Dependencies",
                "description": "List the dependencies of a Helm chart",
                "category": "Helm"
            }
        ],
        "languages": [
            {
                "id": "helm",
                "aliases": [
                    "helm-template",
                    "helm"
                ],
                "filenamePatterns": [
                    "values.yaml",
                    "Chart.yaml",
                    "requirements.yaml",
                    "**/templates/*.yaml",
                    "**/templates/*.yml",
                    "**/templates/*.tpl",
                    "**/templates/**/*.yaml",
                    "**/templates/**/*.yml",
                    "**/templates/**/*.tpl"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "helm",
                "scopeName": "source.helm",
                "path": "./syntaxes/helm.tmLanguage.json"
            }
        ],
        "snippets": [
            {
                "language": "helm",
                "path": "./snippets/helm.json"
            }
        ],
        "debuggers": [
            {
                "type": "draft",
                "label": "Draft Debug",
                "program": "./out/src/draft/debugAdapter.js",
                "runtime": "node",
                "configurationAttributes": {
                    "launch": {
                        "required": [
                            "type",
                            "name",
                            "original-debug"
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "The type of launch configuration",
                                "default": "draft"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the debug configuration",
                                "default": "Draft debug"
                            },
                            "original-debug": {
                                "type": "object",
                                "description": "Actual debug configuration VS Code will launch after app is deployed.",
                                "default": {
                                    "type": "node",
                                    "request": "attach",
                                    "name": "Attach to remote",
                                    "address": "localhost",
                                    "port": 9229,
                                    "remoteRoot": "/usr/src/app/"
                                }
                            }
                        }
                    }
                },
                "initialConfigurations": [
                    {
                        "type": "draft",
                        "request": "launch",
                        "name": "Draft Debug",
                        "original-debug": {}
                    }
                ],
                "configurationSnippets": [
                    {
                        "label": "Draft Debug: NodeJS",
                        "description": "Configuration for debugging NodeJS apps on Kubernetes using Draft",
                        "body": {
                            "type": "draft",
                            "request": "launch",
                            "name": "Draft Debug",
                            "original-debug": {
                                "type": "node",
                                "request": "attach",
                                "name": "Attach to remote",
                                "address": "localhost",
                                "port": 9229,
                                "remoteRoot": "/usr/src/app/"
                            }
                        }
                    },
                    {
                        "label": "Draft Debug: Golang",
                        "description": "Configuration for debugging Golang apps on Kubernetes, using Draft",
                        "body": {
                            "type": "draft",
                            "request": "launch",
                            "name": "Draft Debug",
                            "original-debug": {
                                "name": "Kubernetes remote debugging",
                                "type": "go",
                                "request": "launch",
                                "mode": "remote",
                                "remotePath": "/go/src/app",
                                "port": 2345,
                                "host": "127.0.0.1",
                                "program": "${workspaceRoot}",
                                "env": {},
                                "args": []
                            }
                        }
                    }
                ],
                "extensions": []
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "extensionDependencies": [
        "redhat.vscode-yaml"
    ],
    "dependencies": {
        "@kubernetes/client-node": "0.7.1",
        "@types/clipboardy": "^1.1.0",
        "@types/js-yaml": "^3.12.0",
        "@types/lodash": "^4.14.113",
        "@types/mkdirp": "^0.5.2",
        "@types/opn": "^5.1.0",
        "@types/pluralize": "^0.0.29",
        "@types/request": "^2.48.1",
        "@types/restify": "^5.0.7",
        "@types/semver": "^5.5.0",
        "@types/shelljs": "^0.7.8",
        "@types/tar": "^4.0.0",
        "@types/tmp": "^0.0.33",
        "@types/uuid": "^3.4.4",
        "@types/websocket": "^0.0.40",
        "@types/yamljs": "^0.2.30",
        "await-notify": "^1.0.1",
        "clipboardy": "^1.2.3",
        "compare-versions": "^3.1.0",
        "debug": "^3.1.0",
        "docker-file-parser": "^1.0.3",
        "dockerfile-parse": "^0.2.0",
        "download": "^6.2.5",
        "fuzzysearch": "^1.0.3",
        "graceful-fs": "^4.1.11",
        "js-yaml": "^3.8.2",
        "lodash": "^4.17.10",
        "mixin-deep": "^1.3.1",
        "mkdirp": "^0.5.1",
        "natives": "^1.1.3",
        "node-yaml-parser": "^0.0.9",
        "opn": "^5.2.0",
        "pluralize": "^4.0.0",
        "portfinder": "^1.0.13",
        "restify": "^6.3.4",
        "semver": "^5.5.1",
        "shelljs": "^0.7.7",
        "sshpk": "^1.13.2",
        "tar": "^4.4.1",
        "tmp": "^0.0.31",
        "url-parse": "^1.4.3",
        "uuid": "^3.1.0",
        "vscode-debugadapter": "1.27.0",
        "vscode-debugprotocol": "1.27.0",
        "vscode-extension-telemetry": "^0.0.6",
        "vscode-uri": "^1.0.1",
        "yaml-ast-parser": "^0.0.40",
        "yamljs": "0.2.10"
    },
    "devDependencies": {
        "@types/mocha": "^2.2.32",
        "@types/node": "^6.0.40",
        "@types/request": "^2.48.1",
        "gulp": "^4.0.0",
        "gulp-tslint": "^8.1.2",
        "mocha": "^4.1.0",
        "tslint": "^5.9.1",
        "typescript": "^3.2.2",
        "vscode": "^1.1.21"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/Azure/vscode-kubernetes-tools"
    }
}
